{
	"id": "facf82f699243cc8244f461e04f2ae1b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/"
			]
		},
		"sources": {
			"src/MyERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\";\r\ncontract MyERC20 is ERC20 {\r\n    uint private perMint;\r\n    uint256 internal  _num;\r\n\r\n    event Mint(address indexed to,uint amount);\r\n\r\n    constructor() ERC20(\"MyToken\", \"MTK\") {\r\n       _mint(msg.sender, 1 * 10 ** 8 * 10 **decimals());\r\n    }\r\n\r\n    function mint() public{\r\n        require(_num>0);\r\n        _mint(msg.sender,perMint);\r\n        _num--;\r\n        emit Mint(msg.sender,perMint);\r\n    }\r\n\r\n    function init(string memory name, string memory symbol, uint256 num, uint _perMint) public {\r\n        _name = name;\r\n        _symbol = symbol;\r\n        _num = num;\r\n        perMint = _perMint;\r\n    }\r\n    \r\n}"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 public _totalSupply;\r\n\r\n    string public _name;\r\n    string public _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) public virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) public {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     * ```\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"../IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "_mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "_update",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"_mint(address,uint256)": {
								"details": "Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0). Relies on the `_update` mechanism Emits a {Transfer} event with `from` set to the zero address. NOTE: This function is not virtual, {_update} should be overridden instead."
							},
							"_update(address,address,uint256)": {
								"details": "Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding this function. Emits a {Transfer} event."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_mint(address,uint256)": "4e6ec247",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"_totalSupply()": "3eaaf86b",
							"_update(address,address,uint256)": "0bb3bfa8",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"_mint(address,uint256)\":{\"details\":\"Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0). Relies on the `_update` mechanism Emits a {Transfer} event with `from` set to the zero address. NOTE: This function is not virtual, {_update} should be overridden instead.\"},\"_update(address,address,uint256)\":{\"details\":\"Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding this function. Emits a {Transfer} event.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3f0529927c972c64ae2414d62d2f73c44c5b33e45bddc17adf3f22051bc6a88c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7ccf38e2d5a13ab3877dd09fc398016ad7837fe986fd8042707c4781e5c41bc\",\"dweb:/ipfs/QmaP6Yjncp79hFkaTBeXdQ8QJgoqHtgpWsxCcWqbpA7Cdr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/MyERC20.sol": {
				"MyERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "_mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "_update",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_perMint",
									"type": "uint256"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"_mint(address,uint256)": {
								"details": "Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0). Relies on the `_update` mechanism Emits a {Transfer} event with `from` set to the zero address. NOTE: This function is not virtual, {_update} should be overridden instead."
							},
							"_update(address,address,uint256)": {
								"details": "Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding this function. Emits a {Transfer} event."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/MyERC20.sol\":129:748  contract MyERC20 is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/MyERC20.sol\":271:375  constructor() ERC20(\"MyToken\", \"MTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1942:2058  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d544b)\n  dup2\n  mstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2017:2022  name_ */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2009:2014  _name */\n  0x03\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2009:2022  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2033:2040  _symbol */\n  0x04\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2033:2050  _symbol = symbol_ */\n  tag_7\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2043:2050  symbol_ */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2033:2040  _symbol */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2033:2050  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1942:2058  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"src/MyERC20.sol\":319:367  _mint(msg.sender, 1 * 10 ** 8 * 10 **decimals()) */\n  tag_9\n    /* \"src/MyERC20.sol\":325:335  msg.sender */\n  caller\n    /* \"src/MyERC20.sol\":356:366  decimals() */\n  tag_10\n    /* \"src/MyERC20.sol\":356:364  decimals */\n  shl(0x20, tag_11)\n    /* \"src/MyERC20.sol\":356:366  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"src/MyERC20.sol\":351:366  10 **decimals() */\n  tag_12\n  swap1\n    /* \"src/MyERC20.sol\":351:353  10 */\n  0x0a\n    /* \"src/MyERC20.sol\":351:366  10 **decimals() */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"src/MyERC20.sol\":337:366  1 * 10 ** 8 * 10 **decimals() */\n  tag_14\n  swap1\n    /* \"src/MyERC20.sol\":337:348  1 * 10 ** 8 */\n  0x05f5e100\n    /* \"src/MyERC20.sol\":337:366  1 * 10 ** 8 * 10 **decimals() */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"src/MyERC20.sol\":319:324  _mint */\n  tag_16\n    /* \"src/MyERC20.sol\":319:367  _mint(msg.sender, 1 * 10 ** 8 * 10 **decimals()) */\n  jump\t// in\ntag_9:\n    /* \"src/MyERC20.sol\":129:748  contract MyERC20 is ERC20 {... */\n  jump(tag_45)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3081:3165  function decimals() public view virtual returns (uint8) {... */\ntag_11:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3155:3157  18 */\n  0x12\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3081:3165  function decimals() public view virtual returns (uint8) {... */\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7941:8152  function _mint(address account, uint256 value) public {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8010:8031  account == address(0) */\n  dup3\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8006:8099  if (account == address(0)) {... */\n  tag_20\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8055:8087  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8084:8085  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8055:8087  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4569:4620   */\n  mstore\n    /* \"#utility.yul\":4542:4560   */\n  0x24\n  add\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8055:8087  ERC20InvalidReceiver(address(0)) */\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8006:8099  if (account == address(0)) {... */\ntag_20:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8109:8144  _update(address(0), account, value) */\n  tag_23\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8129:8136  account */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8138:8143  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8109:8116  _update */\n  tag_24\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8109:8144  _update(address(0), account, value) */\n  jump\t// in\ntag_23:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7941:8152  function _mint(address account, uint256 value) public {... */\n  pop\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6455:7588  function _update(address from, address to, uint256 value) public virtual {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6543:6561  from == address(0) */\n  dup4\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:7091  if (from == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6697:6702  value */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6681:6693  _totalSupply */\n  0x02\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6681:6702  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:7091  if (from == address(0)) {... */\n  tag_29\n  swap1\n  pop\n  jump\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6757:6772  _balances[from] */\n  dup4\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6735:6754  uint256 fromBalance */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6757:6772  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6791:6810  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6787:6904  if (fromBalance < value) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6838:6888  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4981:5013   */\n  dup6\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6838:6888  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4963:5014   */\n  mstore\n    /* \"#utility.yul\":5030:5048   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5023:5057   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5073:5091   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5066:5100   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4936:4954   */\n  0x64\n  add\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6838:6888  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_21\n    /* \"#utility.yul\":4761:5106   */\n  jump\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6787:6904  if (fromBalance < value) {... */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7027:7042  _balances[from] */\n  dup5\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7027:7036  _balances */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7027:7042  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7045:7064  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7027:7064  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:7091  if (from == address(0)) {... */\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7107:7123  to == address(0) */\n  dup3\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7103:7538  if (to == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7273:7285  _totalSupply */\n  0x02\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7273:7294  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7103:7538  if (to == address(0)) {... */\n  jump(tag_34)\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7489:7502  _balances[to] */\n  dup3\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7489:7498  _balances */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7489:7502  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7489:7511  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7103:7538  if (to == address(0)) {... */\ntag_34:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7570:7572  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7555:7580  Transfer(from, to, value) */\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7564:7568  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7555:7580  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7574:7579  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7555:7580  Transfer(from, to, value) */\n  mload(0x40)\n  tag_35\n  swap2\n    /* \"#utility.yul\":5257:5282   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5245:5247   */\n  0x20\n    /* \"#utility.yul\":5230:5248   */\n  add\n  swap1\n    /* \"#utility.yul\":5111:5288   */\n  jump\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7555:7580  Transfer(from, to, value) */\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6455:7588  function _update(address from, address to, uint256 value) public virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_37:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_38:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_48:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_49:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_40:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_53:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_54:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_52:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_6:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_60\n  tag_37\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1582:1679   */\n  tag_61\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_62\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_38\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_40\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_65:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_56)\n    /* \"#utility.yul\":1810:2473   */\ntag_64:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_68:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_71:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2862   */\ntag_42:\n    /* \"#utility.yul\":2796:2806   */\n  0x4e487b71\n    /* \"#utility.yul\":2791:2794   */\n  0xe0\n    /* \"#utility.yul\":2787:2807   */\n  shl\n    /* \"#utility.yul\":2784:2785   */\n  0x00\n    /* \"#utility.yul\":2777:2808   */\n  mstore\n    /* \"#utility.yul\":2827:2831   */\n  0x11\n    /* \"#utility.yul\":2824:2825   */\n  0x04\n    /* \"#utility.yul\":2817:2832   */\n  mstore\n    /* \"#utility.yul\":2851:2855   */\n  0x24\n    /* \"#utility.yul\":2848:2849   */\n  0x00\n    /* \"#utility.yul\":2841:2856   */\n  revert\n    /* \"#utility.yul\":2867:3289   */\ntag_43:\n    /* \"#utility.yul\":2956:2957   */\n  0x01\n    /* \"#utility.yul\":2999:3004   */\n  dup2\n    /* \"#utility.yul\":2956:2957   */\n  dup2\n    /* \"#utility.yul\":3013:3283   */\ntag_74:\n    /* \"#utility.yul\":3034:3041   */\n  dup1\n    /* \"#utility.yul\":3024:3032   */\n  dup6\n    /* \"#utility.yul\":3021:3042   */\n  gt\n    /* \"#utility.yul\":3013:3283   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3093:3097   */\n  dup2\n    /* \"#utility.yul\":3089:3090   */\n  0x00\n    /* \"#utility.yul\":3085:3091   */\n  not\n    /* \"#utility.yul\":3081:3098   */\n  div\n    /* \"#utility.yul\":3075:3079   */\n  dup3\n    /* \"#utility.yul\":3072:3099   */\n  gt\n    /* \"#utility.yul\":3069:3122   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3102:3120   */\n  tag_78\n  tag_42\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3152:3159   */\n  dup1\n    /* \"#utility.yul\":3142:3150   */\n  dup6\n    /* \"#utility.yul\":3138:3160   */\n  and\n    /* \"#utility.yul\":3135:3190   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3172:3188   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3135:3190   */\ntag_79:\n    /* \"#utility.yul\":3251:3273   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3211:3226   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3013:3283   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":3017:3020   */\n  pop\n    /* \"#utility.yul\":2867:3289   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3294:4100   */\ntag_44:\n    /* \"#utility.yul\":3343:3348   */\n  0x00\n    /* \"#utility.yul\":3373:3381   */\n  dup3\n    /* \"#utility.yul\":3363:3443   */\n  tag_81\n  jumpi\n  pop\n    /* \"#utility.yul\":3414:3415   */\n  0x01\n    /* \"#utility.yul\":3428:3433   */\n  jump(tag_80)\n    /* \"#utility.yul\":3363:3443   */\ntag_81:\n    /* \"#utility.yul\":3462:3466   */\n  dup2\n    /* \"#utility.yul\":3452:3528   */\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":3499:3500   */\n  0x00\n    /* \"#utility.yul\":3513:3518   */\n  jump(tag_80)\n    /* \"#utility.yul\":3452:3528   */\ntag_82:\n    /* \"#utility.yul\":3544:3548   */\n  dup2\n    /* \"#utility.yul\":3562:3563   */\n  0x01\n    /* \"#utility.yul\":3557:3616   */\n  dup2\n  eq\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3630:3631   */\n  0x02\n    /* \"#utility.yul\":3625:3755   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3537:3755   */\n  jump(tag_83)\n    /* \"#utility.yul\":3557:3616   */\ntag_84:\n    /* \"#utility.yul\":3587:3588   */\n  0x01\n    /* \"#utility.yul\":3578:3588   */\n  swap2\n  pop\n    /* \"#utility.yul\":3601:3606   */\n  pop\n  jump(tag_80)\n    /* \"#utility.yul\":3625:3755   */\ntag_85:\n    /* \"#utility.yul\":3662:3665   */\n  0xff\n    /* \"#utility.yul\":3652:3660   */\n  dup5\n    /* \"#utility.yul\":3649:3666   */\n  gt\n    /* \"#utility.yul\":3646:3689   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3669:3687   */\n  tag_87\n  tag_42\n  jump\t// in\ntag_87:\n  pop\n  pop\n    /* \"#utility.yul\":3725:3726   */\n  0x01\n    /* \"#utility.yul\":3711:3727   */\n  dup3\n  shl\n    /* \"#utility.yul\":3740:3745   */\n  jump(tag_80)\n    /* \"#utility.yul\":3537:3755   */\ntag_83:\n  pop\n    /* \"#utility.yul\":3839:3841   */\n  0x20\n    /* \"#utility.yul\":3829:3837   */\n  dup4\n    /* \"#utility.yul\":3826:3842   */\n  lt\n    /* \"#utility.yul\":3820:3823   */\n  0x0133\n    /* \"#utility.yul\":3814:3818   */\n  dup4\n    /* \"#utility.yul\":3811:3824   */\n  lt\n    /* \"#utility.yul\":3807:3843   */\n  and\n    /* \"#utility.yul\":3801:3803   */\n  0x4e\n    /* \"#utility.yul\":3791:3799   */\n  dup5\n    /* \"#utility.yul\":3788:3804   */\n  lt\n    /* \"#utility.yul\":3783:3785   */\n  0x0b\n    /* \"#utility.yul\":3777:3781   */\n  dup5\n    /* \"#utility.yul\":3774:3786   */\n  lt\n    /* \"#utility.yul\":3770:3805   */\n  and\n    /* \"#utility.yul\":3767:3844   */\n  or\n    /* \"#utility.yul\":3764:3923   */\n  iszero\n  tag_88\n  jumpi\n  pop\n    /* \"#utility.yul\":3876:3895   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3908:3913   */\n  jump(tag_80)\n    /* \"#utility.yul\":3764:3923   */\ntag_88:\n    /* \"#utility.yul\":3955:3989   */\n  tag_89\n    /* \"#utility.yul\":3980:3988   */\n  dup4\n    /* \"#utility.yul\":3974:3978   */\n  dup4\n    /* \"#utility.yul\":3955:3989   */\n  tag_43\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4025:4031   */\n  dup1\n    /* \"#utility.yul\":4021:4022   */\n  0x00\n    /* \"#utility.yul\":4017:4023   */\n  not\n    /* \"#utility.yul\":4013:4032   */\n  div\n    /* \"#utility.yul\":4004:4011   */\n  dup3\n    /* \"#utility.yul\":4001:4033   */\n  gt\n    /* \"#utility.yul\":3998:4056   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4036:4054   */\n  tag_91\n  tag_42\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4074:4094   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3294:4100   */\ntag_80:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4105:4245   */\ntag_13:\n    /* \"#utility.yul\":4163:4168   */\n  0x00\n    /* \"#utility.yul\":4192:4239   */\n  tag_93\n    /* \"#utility.yul\":4233:4237   */\n  0xff\n    /* \"#utility.yul\":4223:4231   */\n  dup5\n    /* \"#utility.yul\":4219:4238   */\n  and\n    /* \"#utility.yul\":4213:4217   */\n  dup4\n    /* \"#utility.yul\":4192:4239   */\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4183:4239   */\n  swap4\n    /* \"#utility.yul\":4105:4245   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4250:4418   */\ntag_15:\n    /* \"#utility.yul\":4323:4332   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4354:4363   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4371:4386   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4365:4387   */\n  dup5\n  eq\n    /* \"#utility.yul\":4351:4388   */\n  or\n    /* \"#utility.yul\":4341:4412   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4392:4410   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":4631:4756   */\ntag_28:\n    /* \"#utility.yul\":4696:4705   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4717:4727   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4714:4750   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4730:4748   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":5111:5288   */\ntag_45:\n    /* \"src/MyERC20.sol\":129:748  contract MyERC20 is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/MyERC20.sol\":129:748  contract MyERC20 is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e6ec247\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x4e6ec247\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x87c80464\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x18160ddd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0bb3bfa8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2128:2219  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4421:4611  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4421:4611  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6455:7588  function _update(address from, address to, uint256 value) public virtual {... */\n    tag_5:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"src/MyERC20.sol\":383:532  function mint() public{... */\n    tag_6:\n      tag_32\n      tag_37\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3230:3329  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3309:3321  _totalSupply */\n      sload(0x02)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3230:3329  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":1675:1700   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1663:1665   */\n      0x20\n        /* \"#utility.yul\":1648:1666   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3230:3329  function totalSupply() public view virtual returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":1529:1706   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5189:5438  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_26\n      tag_43\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3081:3165  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3155:3157  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3081:3165  function decimals() public view virtual returns (uint8) {... */\n      tag_24\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1668:1695  uint256 public _totalSupply */\n    tag_10:\n      tag_38\n      sload(0x02)\n      dup2\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7941:8152  function _mint(address account, uint256 value) public {... */\n    tag_11:\n      tag_32\n      tag_54\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3392:3510  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_38\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3484:3502  _balances[account] */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3457:3464  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3484:3502  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3392:3510  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"src/MyERC20.sol\":540:739  function init(string memory name, string memory symbol, uint256 num, uint _perMint) public {... */\n    tag_13:\n      tag_32\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2338:2433  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_22\n      tag_66\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3715:3897  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_26\n      tag_69\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1730:1751  string public _symbol */\n    tag_16:\n      tag_22\n      tag_73\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1704:1723  string public _name */\n    tag_17:\n      tag_22\n      tag_76\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3960:4102  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_38\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4085  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4040:4047  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4085  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4078  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4085  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4094  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3960:4102  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2128:2219  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2173:2186  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2206:2211  _name */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2199:2211  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2128:2219  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4421:4611  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4494:4498  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4550:4581  _approve(owner, spender, value) */\n      tag_93\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4566:4573  spender */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4575:4580  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4550:4558  _approve */\n      tag_94\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4550:4581  _approve(owner, spender, value) */\n      jump\t// in\n    tag_93:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4599:4603  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4592:4603  return true */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4421:4611  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_90:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6455:7588  function _update(address from, address to, uint256 value) public virtual {... */\n    tag_35:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6543:6561  from == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:7091  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6697:6702  value */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6681:6693  _totalSupply */\n      0x02\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6681:6702  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:7091  if (from == address(0)) {... */\n      tag_99\n      swap1\n      pop\n      jump\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6757:6772  _balances[from] */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6735:6754  uint256 fromBalance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6757:6772  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6791:6810  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6787:6904  if (fromBalance < value) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6838:6888  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4764:4796   */\n      dup6\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6838:6888  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4746:4797   */\n      mstore\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4806:4840   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4856:4874   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4849:4883   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4719:4737   */\n      0x64\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6838:6888  ERC20InsufficientBalance(from, fromBalance, value) */\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6787:6904  if (fromBalance < value) {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7027:7042  _balances[from] */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7027:7036  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7027:7042  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7045:7064  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7027:7064  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:7091  if (from == address(0)) {... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7107:7123  to == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7103:7538  if (to == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7273:7285  _totalSupply */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7273:7294  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7103:7538  if (to == address(0)) {... */\n      jump(tag_104)\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7489:7502  _balances[to] */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7489:7498  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7489:7502  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7489:7511  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7103:7538  if (to == address(0)) {... */\n    tag_104:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7570:7572  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7555:7580  Transfer(from, to, value) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7564:7568  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7555:7580  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7574:7579  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7555:7580  Transfer(from, to, value) */\n      mload(0x40)\n      tag_105\n      swap2\n        /* \"#utility.yul\":1675:1700   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1663:1665   */\n      0x20\n        /* \"#utility.yul\":1648:1666   */\n      add\n      swap1\n        /* \"#utility.yul\":1529:1706   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7555:7580  Transfer(from, to, value) */\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6455:7588  function _update(address from, address to, uint256 value) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MyERC20.sol\":383:532  function mint() public{... */\n    tag_37:\n        /* \"src/MyERC20.sol\":429:430  0 */\n      0x00\n        /* \"src/MyERC20.sol\":424:428  _num */\n      sload(0x06)\n        /* \"src/MyERC20.sol\":424:430  _num>0 */\n      gt\n        /* \"src/MyERC20.sol\":416:431  require(_num>0) */\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n        /* \"src/MyERC20.sol\":442:467  _mint(msg.sender,perMint) */\n      tag_108\n        /* \"src/MyERC20.sol\":448:458  msg.sender */\n      caller\n        /* \"src/MyERC20.sol\":459:466  perMint */\n      sload(0x05)\n        /* \"src/MyERC20.sol\":442:447  _mint */\n      tag_55\n        /* \"src/MyERC20.sol\":442:467  _mint(msg.sender,perMint) */\n      jump\t// in\n    tag_108:\n        /* \"src/MyERC20.sol\":478:482  _num */\n      0x06\n        /* \"src/MyERC20.sol\":478:484  _num-- */\n      dup1\n      sload\n      swap1\n        /* \"src/MyERC20.sol\":478:482  _num */\n      0x00\n        /* \"src/MyERC20.sol\":478:484  _num-- */\n      tag_109\n      dup4\n      tag_110\n      jump\t// in\n    tag_109:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/MyERC20.sol\":516:523  perMint */\n      sload(0x05)\n        /* \"src/MyERC20.sol\":500:524  Mint(msg.sender,perMint) */\n      mload(0x40)\n        /* \"#utility.yul\":1675:1700   */\n      swap1\n      dup2\n      mstore\n        /* \"src/MyERC20.sol\":505:515  msg.sender */\n      caller\n      swap1\n        /* \"src/MyERC20.sol\":500:524  Mint(msg.sender,perMint) */\n      0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n      swap1\n        /* \"#utility.yul\":1663:1665   */\n      0x20\n        /* \"#utility.yul\":1648:1666   */\n      add\n        /* \"src/MyERC20.sol\":500:524  Mint(msg.sender,perMint) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/MyERC20.sol\":383:532  function mint() public{... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5189:5438  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5276:5280  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5334:5371  _spendAllowance(from, spender, value) */\n      tag_115\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5350:5354  from */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5365:5370  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5334:5349  _spendAllowance */\n      tag_116\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5334:5371  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_115:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5382:5408  _transfer(from, to, value) */\n      tag_117\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5392:5396  from */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5398:5400  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5402:5407  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5382:5391  _transfer */\n      tag_118\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5382:5408  _transfer(from, to, value) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5426:5430  true */\n      0x01\n      swap5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5189:5438  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7941:8152  function _mint(address account, uint256 value) public {... */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8010:8031  account == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8006:8099  if (account == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8055:8087  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8084:8085  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8055:8087  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5181:5232   */\n      mstore\n        /* \"#utility.yul\":5154:5172   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8055:8087  ERC20InvalidReceiver(address(0)) */\n      tag_101\n        /* \"#utility.yul\":5035:5238   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8006:8099  if (account == address(0)) {... */\n    tag_121:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8109:8144  _update(address(0), account, value) */\n      tag_124\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8129:8136  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8138:8143  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8109:8116  _update */\n      tag_35\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8109:8144  _update(address(0), account, value) */\n      jump\t// in\n    tag_124:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7941:8152  function _mint(address account, uint256 value) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/MyERC20.sol\":540:739  function init(string memory name, string memory symbol, uint256 num, uint _perMint) public {... */\n    tag_64:\n        /* \"src/MyERC20.sol\":642:647  _name */\n      0x03\n        /* \"src/MyERC20.sol\":642:654  _name = name */\n      tag_127\n        /* \"src/MyERC20.sol\":650:654  name */\n      dup6\n        /* \"src/MyERC20.sol\":642:647  _name */\n      dup3\n        /* \"src/MyERC20.sol\":642:654  _name = name */\n      tag_128\n      jump\t// in\n    tag_127:\n      pop\n        /* \"src/MyERC20.sol\":665:672  _symbol */\n      0x04\n        /* \"src/MyERC20.sol\":665:681  _symbol = symbol */\n      tag_129\n        /* \"src/MyERC20.sol\":675:681  symbol */\n      dup5\n        /* \"src/MyERC20.sol\":665:672  _symbol */\n      dup3\n        /* \"src/MyERC20.sol\":665:681  _symbol = symbol */\n      tag_128\n      jump\t// in\n    tag_129:\n      pop\n        /* \"src/MyERC20.sol\":692:696  _num */\n      0x06\n        /* \"src/MyERC20.sol\":692:702  _num = num */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"src/MyERC20.sol\":713:720  perMint */\n      0x05\n        /* \"src/MyERC20.sol\":713:731  perMint = _perMint */\n      sstore\n      pop\n      pop\n        /* \"src/MyERC20.sol\":540:739  function init(string memory name, string memory symbol, uint256 num, uint _perMint) public {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2338:2433  function symbol() public view virtual returns (string memory) {... */\n    tag_66:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2385:2398  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2418:2425  _symbol */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2411:2425  return _symbol */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3715:3897  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_70:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3784:3788  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3840:3867  _transfer(owner, to, value) */\n      tag_93\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3857:3859  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3861:3866  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3840:3849  _transfer */\n      tag_118\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3840:3867  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1730:1751  string public _symbol */\n    tag_73:\n      0x04\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_85\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_85\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1704:1723  string public _name */\n    tag_76:\n      0x03\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_85\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9244:9374  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_94:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9329:9366  _approve(owner, spender, value, true) */\n      tag_152\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9338:9343  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9345:9352  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9354:9359  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9361:9365  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9329:9337  _approve */\n      tag_153\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9329:9366  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_152:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9244:9374  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10960:11447  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4085  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11060:11084  uint256 currentAllowance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4085  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4078  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4085  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4067:4094  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11127:11164  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11123:11440  if (currentAllowance != type(uint256).max) {... */\n      tag_159\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11204:11209  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11185:11201  currentAllowance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11185:11209  currentAllowance < value */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11181:11313  if (currentAllowance < value) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11237:11297  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4764:4796   */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11237:11297  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4746:4797   */\n      mstore\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4806:4840   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4856:4874   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4849:4883   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4719:4737   */\n      0x64\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11237:11297  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_101\n        /* \"#utility.yul\":4544:4889   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11181:11313  if (currentAllowance < value) {... */\n    tag_157:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11356:11413  _approve(owner, spender, currentAllowance - value, false) */\n      tag_159\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11365:11370  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11372:11379  spender */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11400:11405  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11381:11397  currentAllowance */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11381:11405  currentAllowance - value */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11407:11412  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11356:11364  _approve */\n      tag_153\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11356:11413  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_159:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11049:11447  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10960:11447  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5823:6131  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5907:5925  from == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5903:5991  if (from == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5949:5979  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5976:5977  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5949:5979  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5181:5232   */\n      mstore\n        /* \"#utility.yul\":5154:5172   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5949:5979  ERC20InvalidSender(address(0)) */\n      tag_101\n        /* \"#utility.yul\":5035:5238   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5903:5991  if (from == address(0)) {... */\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6005:6021  to == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6001:6089  if (to == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6045:6077  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6074:6075  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6045:6077  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5181:5232   */\n      mstore\n        /* \"#utility.yul\":5154:5172   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6045:6077  ERC20InvalidReceiver(address(0)) */\n      tag_101\n        /* \"#utility.yul\":5035:5238   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6001:6089  if (to == address(0)) {... */\n    tag_163:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6099:6123  _update(from, to, value) */\n      tag_152\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6107:6111  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6113:6115  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6117:6122  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6099:6106  _update */\n      tag_35\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6099:6123  _update(from, to, value) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10225:10668  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10338:10357  owner == address(0) */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10334:10425  if (owner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10381:10413  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10410:10411  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10381:10413  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5181:5232   */\n      mstore\n        /* \"#utility.yul\":5154:5172   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10381:10413  ERC20InvalidApprover(address(0)) */\n      tag_101\n        /* \"#utility.yul\":5035:5238   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10334:10425  if (owner == address(0)) {... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10439:10460  spender == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10435:10527  if (spender == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10484:10515  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10512:10513  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10484:10515  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5181:5232   */\n      mstore\n        /* \"#utility.yul\":5154:5172   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10484:10515  ERC20InvalidSpender(address(0)) */\n      tag_101\n        /* \"#utility.yul\":5035:5238   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10435:10527  if (spender == address(0)) {... */\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10537:10555  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10537:10548  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10537:10555  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10537:10564  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10537:10572  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10583:10661  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_159\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10634:10641  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10618:10649  Approval(owner, spender, value) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10627:10632  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10618:10649  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10643:10648  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10618:10649  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_172\n      swap2\n        /* \"#utility.yul\":1675:1700   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1663:1665   */\n      0x20\n        /* \"#utility.yul\":1648:1666   */\n      add\n      swap1\n        /* \"#utility.yul\":1529:1706   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10618:10649  Approval(owner, spender, value) */\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10225:10668  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_25:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_182:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_182)\n    tag_184:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_173:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_186:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_28:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_188:\n        /* \"#utility.yul\":913:942   */\n      tag_189\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_173\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1196:1524   */\n    tag_34:\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1281:1287   */\n      dup1\n        /* \"#utility.yul\":1289:1295   */\n      0x00\n        /* \"#utility.yul\":1342:1344   */\n      0x60\n        /* \"#utility.yul\":1330:1339   */\n      dup5\n        /* \"#utility.yul\":1321:1328   */\n      dup7\n        /* \"#utility.yul\":1317:1340   */\n      sub\n        /* \"#utility.yul\":1313:1345   */\n      slt\n        /* \"#utility.yul\":1310:1362   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":1358:1359   */\n      0x00\n        /* \"#utility.yul\":1355:1356   */\n      dup1\n        /* \"#utility.yul\":1348:1360   */\n      revert\n        /* \"#utility.yul\":1310:1362   */\n    tag_192:\n        /* \"#utility.yul\":1381:1410   */\n      tag_193\n        /* \"#utility.yul\":1400:1409   */\n      dup5\n        /* \"#utility.yul\":1381:1410   */\n      tag_173\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1371:1410   */\n      swap3\n      pop\n        /* \"#utility.yul\":1429:1467   */\n      tag_194\n        /* \"#utility.yul\":1463:1465   */\n      0x20\n        /* \"#utility.yul\":1452:1461   */\n      dup6\n        /* \"#utility.yul\":1448:1466   */\n      add\n        /* \"#utility.yul\":1429:1467   */\n      tag_173\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1419:1467   */\n      swap2\n      pop\n        /* \"#utility.yul\":1514:1516   */\n      0x40\n        /* \"#utility.yul\":1503:1512   */\n      dup5\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1486:1518   */\n      calldataload\n        /* \"#utility.yul\":1476:1518   */\n      swap1\n      pop\n        /* \"#utility.yul\":1196:1524   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_58:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_198:\n        /* \"#utility.yul\":2051:2080   */\n      tag_199\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_173\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2218   */\n    tag_174:\n        /* \"#utility.yul\":2152:2162   */\n      0x4e487b71\n        /* \"#utility.yul\":2147:2150   */\n      0xe0\n        /* \"#utility.yul\":2143:2163   */\n      shl\n        /* \"#utility.yul\":2140:2141   */\n      0x00\n        /* \"#utility.yul\":2133:2164   */\n      mstore\n        /* \"#utility.yul\":2183:2187   */\n      0x41\n        /* \"#utility.yul\":2180:2181   */\n      0x04\n        /* \"#utility.yul\":2173:2188   */\n      mstore\n        /* \"#utility.yul\":2207:2211   */\n      0x24\n        /* \"#utility.yul\":2204:2205   */\n      0x00\n        /* \"#utility.yul\":2197:2212   */\n      revert\n        /* \"#utility.yul\":2223:2942   */\n    tag_175:\n        /* \"#utility.yul\":2266:2271   */\n      0x00\n        /* \"#utility.yul\":2319:2322   */\n      dup3\n        /* \"#utility.yul\":2312:2316   */\n      0x1f\n        /* \"#utility.yul\":2304:2310   */\n      dup4\n        /* \"#utility.yul\":2300:2317   */\n      add\n        /* \"#utility.yul\":2296:2323   */\n      slt\n        /* \"#utility.yul\":2286:2341   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2337:2338   */\n      0x00\n        /* \"#utility.yul\":2334:2335   */\n      dup1\n        /* \"#utility.yul\":2327:2339   */\n      revert\n        /* \"#utility.yul\":2286:2341   */\n    tag_202:\n        /* \"#utility.yul\":2373:2379   */\n      dup2\n        /* \"#utility.yul\":2360:2380   */\n      calldataload\n        /* \"#utility.yul\":2399:2417   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2436:2438   */\n      dup1\n        /* \"#utility.yul\":2432:2434   */\n      dup3\n        /* \"#utility.yul\":2429:2439   */\n      gt\n        /* \"#utility.yul\":2426:2462   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":2442:2460   */\n      tag_204\n      tag_174\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2517:2519   */\n      0x40\n        /* \"#utility.yul\":2511:2520   */\n      mload\n        /* \"#utility.yul\":2485:2487   */\n      0x1f\n        /* \"#utility.yul\":2571:2584   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2567:2589   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2591:2593   */\n      0x3f\n        /* \"#utility.yul\":2563:2594   */\n      add\n        /* \"#utility.yul\":2559:2599   */\n      and\n        /* \"#utility.yul\":2547:2600   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2615:2633   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2635:2657   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2612:2658   */\n      or\n        /* \"#utility.yul\":2609:2681   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":2661:2679   */\n      tag_206\n      tag_174\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2701:2711   */\n      dup2\n        /* \"#utility.yul\":2697:2699   */\n      0x40\n        /* \"#utility.yul\":2690:2712   */\n      mstore\n        /* \"#utility.yul\":2736:2738   */\n      dup4\n        /* \"#utility.yul\":2728:2734   */\n      dup2\n        /* \"#utility.yul\":2721:2739   */\n      mstore\n        /* \"#utility.yul\":2782:2785   */\n      dup7\n        /* \"#utility.yul\":2775:2779   */\n      0x20\n        /* \"#utility.yul\":2770:2772   */\n      dup6\n        /* \"#utility.yul\":2762:2768   */\n      dup9\n        /* \"#utility.yul\":2758:2773   */\n      add\n        /* \"#utility.yul\":2754:2780   */\n      add\n        /* \"#utility.yul\":2751:2786   */\n      gt\n        /* \"#utility.yul\":2748:2803   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2799:2800   */\n      0x00\n        /* \"#utility.yul\":2796:2797   */\n      dup1\n        /* \"#utility.yul\":2789:2801   */\n      revert\n        /* \"#utility.yul\":2748:2803   */\n    tag_207:\n        /* \"#utility.yul\":2863:2865   */\n      dup4\n        /* \"#utility.yul\":2856:2860   */\n      0x20\n        /* \"#utility.yul\":2848:2854   */\n      dup8\n        /* \"#utility.yul\":2844:2861   */\n      add\n        /* \"#utility.yul\":2837:2841   */\n      0x20\n        /* \"#utility.yul\":2829:2835   */\n      dup4\n        /* \"#utility.yul\":2825:2842   */\n      add\n        /* \"#utility.yul\":2812:2866   */\n      calldatacopy\n        /* \"#utility.yul\":2910:2911   */\n      0x00\n        /* \"#utility.yul\":2903:2907   */\n      0x20\n        /* \"#utility.yul\":2898:2900   */\n      dup6\n        /* \"#utility.yul\":2890:2896   */\n      dup4\n        /* \"#utility.yul\":2886:2901   */\n      add\n        /* \"#utility.yul\":2882:2908   */\n      add\n        /* \"#utility.yul\":2875:2912   */\n      mstore\n        /* \"#utility.yul\":2930:2936   */\n      dup1\n        /* \"#utility.yul\":2921:2936   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2223:2942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2947:3627   */\n    tag_63:\n        /* \"#utility.yul\":3053:3059   */\n      0x00\n        /* \"#utility.yul\":3061:3067   */\n      dup1\n        /* \"#utility.yul\":3069:3075   */\n      0x00\n        /* \"#utility.yul\":3077:3083   */\n      dup1\n        /* \"#utility.yul\":3130:3133   */\n      0x80\n        /* \"#utility.yul\":3118:3127   */\n      dup6\n        /* \"#utility.yul\":3109:3116   */\n      dup8\n        /* \"#utility.yul\":3105:3128   */\n      sub\n        /* \"#utility.yul\":3101:3134   */\n      slt\n        /* \"#utility.yul\":3098:3151   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":3147:3148   */\n      0x00\n        /* \"#utility.yul\":3144:3145   */\n      dup1\n        /* \"#utility.yul\":3137:3149   */\n      revert\n        /* \"#utility.yul\":3098:3151   */\n    tag_209:\n        /* \"#utility.yul\":3187:3196   */\n      dup5\n        /* \"#utility.yul\":3174:3197   */\n      calldataload\n        /* \"#utility.yul\":3216:3234   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3257:3259   */\n      dup1\n        /* \"#utility.yul\":3249:3255   */\n      dup3\n        /* \"#utility.yul\":3246:3260   */\n      gt\n        /* \"#utility.yul\":3243:3277   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":3273:3274   */\n      0x00\n        /* \"#utility.yul\":3270:3271   */\n      dup1\n        /* \"#utility.yul\":3263:3275   */\n      revert\n        /* \"#utility.yul\":3243:3277   */\n    tag_210:\n        /* \"#utility.yul\":3296:3346   */\n      tag_211\n        /* \"#utility.yul\":3338:3345   */\n      dup9\n        /* \"#utility.yul\":3329:3335   */\n      dup4\n        /* \"#utility.yul\":3318:3327   */\n      dup10\n        /* \"#utility.yul\":3314:3336   */\n      add\n        /* \"#utility.yul\":3296:3346   */\n      tag_175\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3286:3346   */\n      swap6\n      pop\n        /* \"#utility.yul\":3399:3401   */\n      0x20\n        /* \"#utility.yul\":3388:3397   */\n      dup8\n        /* \"#utility.yul\":3384:3402   */\n      add\n        /* \"#utility.yul\":3371:3403   */\n      calldataload\n        /* \"#utility.yul\":3355:3403   */\n      swap2\n      pop\n        /* \"#utility.yul\":3428:3430   */\n      dup1\n        /* \"#utility.yul\":3418:3426   */\n      dup3\n        /* \"#utility.yul\":3415:3431   */\n      gt\n        /* \"#utility.yul\":3412:3448   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3444:3445   */\n      0x00\n        /* \"#utility.yul\":3441:3442   */\n      dup1\n        /* \"#utility.yul\":3434:3446   */\n      revert\n        /* \"#utility.yul\":3412:3448   */\n    tag_212:\n      pop\n        /* \"#utility.yul\":3467:3519   */\n      tag_213\n        /* \"#utility.yul\":3511:3518   */\n      dup8\n        /* \"#utility.yul\":3500:3508   */\n      dup3\n        /* \"#utility.yul\":3489:3498   */\n      dup9\n        /* \"#utility.yul\":3485:3509   */\n      add\n        /* \"#utility.yul\":3467:3519   */\n      tag_175\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2947:3627   */\n      swap5\n      swap8\n        /* \"#utility.yul\":3457:3519   */\n      swap5\n      swap7\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3566:3568   */\n      0x40\n        /* \"#utility.yul\":3551:3569   */\n      dup4\n      add\n        /* \"#utility.yul\":3538:3570   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":3617:3619   */\n      0x60\n        /* \"#utility.yul\":3602:3620   */\n      add\n        /* \"#utility.yul\":3589:3621   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2947:3627   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3632:3892   */\n    tag_80:\n        /* \"#utility.yul\":3700:3706   */\n      0x00\n        /* \"#utility.yul\":3708:3714   */\n      dup1\n        /* \"#utility.yul\":3761:3763   */\n      0x40\n        /* \"#utility.yul\":3749:3758   */\n      dup4\n        /* \"#utility.yul\":3740:3747   */\n      dup6\n        /* \"#utility.yul\":3736:3759   */\n      sub\n        /* \"#utility.yul\":3732:3764   */\n      slt\n        /* \"#utility.yul\":3729:3781   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":3777:3778   */\n      0x00\n        /* \"#utility.yul\":3774:3775   */\n      dup1\n        /* \"#utility.yul\":3767:3779   */\n      revert\n        /* \"#utility.yul\":3729:3781   */\n    tag_215:\n        /* \"#utility.yul\":3800:3829   */\n      tag_216\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3800:3829   */\n      tag_173\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3790:3829   */\n      swap2\n      pop\n        /* \"#utility.yul\":3848:3886   */\n      tag_217\n        /* \"#utility.yul\":3882:3884   */\n      0x20\n        /* \"#utility.yul\":3871:3880   */\n      dup5\n        /* \"#utility.yul\":3867:3885   */\n      add\n        /* \"#utility.yul\":3848:3886   */\n      tag_173\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3838:3886   */\n      swap1\n      pop\n        /* \"#utility.yul\":3632:3892   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3897:4277   */\n    tag_85:\n        /* \"#utility.yul\":3976:3977   */\n      0x01\n        /* \"#utility.yul\":3972:3984   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4019:4031   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4040:4101   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":4094:4098   */\n      0x7f\n        /* \"#utility.yul\":4086:4092   */\n      dup3\n        /* \"#utility.yul\":4082:4099   */\n      and\n        /* \"#utility.yul\":4072:4099   */\n      swap2\n      pop\n        /* \"#utility.yul\":4040:4101   */\n    tag_219:\n        /* \"#utility.yul\":4147:4149   */\n      0x20\n        /* \"#utility.yul\":4139:4145   */\n      dup3\n        /* \"#utility.yul\":4136:4150   */\n      lt\n        /* \"#utility.yul\":4116:4134   */\n      dup2\n        /* \"#utility.yul\":4113:4151   */\n      sub\n        /* \"#utility.yul\":4110:4271   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":4193:4203   */\n      0x4e487b71\n        /* \"#utility.yul\":4188:4191   */\n      0xe0\n        /* \"#utility.yul\":4184:4204   */\n      shl\n        /* \"#utility.yul\":4181:4182   */\n      0x00\n        /* \"#utility.yul\":4174:4205   */\n      mstore\n        /* \"#utility.yul\":4228:4232   */\n      0x22\n        /* \"#utility.yul\":4225:4226   */\n      0x04\n        /* \"#utility.yul\":4218:4233   */\n      mstore\n        /* \"#utility.yul\":4256:4260   */\n      0x24\n        /* \"#utility.yul\":4253:4254   */\n      0x00\n        /* \"#utility.yul\":4246:4261   */\n      revert\n        /* \"#utility.yul\":4110:4271   */\n    tag_220:\n      pop\n        /* \"#utility.yul\":3897:4277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4282:4409   */\n    tag_176:\n        /* \"#utility.yul\":4343:4353   */\n      0x4e487b71\n        /* \"#utility.yul\":4338:4341   */\n      0xe0\n        /* \"#utility.yul\":4334:4354   */\n      shl\n        /* \"#utility.yul\":4331:4332   */\n      0x00\n        /* \"#utility.yul\":4324:4355   */\n      mstore\n        /* \"#utility.yul\":4374:4378   */\n      0x11\n        /* \"#utility.yul\":4371:4372   */\n      0x04\n        /* \"#utility.yul\":4364:4379   */\n      mstore\n        /* \"#utility.yul\":4398:4402   */\n      0x24\n        /* \"#utility.yul\":4395:4396   */\n      0x00\n        /* \"#utility.yul\":4388:4403   */\n      revert\n        /* \"#utility.yul\":4414:4539   */\n    tag_98:\n        /* \"#utility.yul\":4479:4488   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4500:4510   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4497:4533   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4513:4531   */\n      tag_90\n      tag_176\n      jump\t// in\n        /* \"#utility.yul\":4894:5030   */\n    tag_110:\n        /* \"#utility.yul\":4933:4936   */\n      0x00\n        /* \"#utility.yul\":4961:4966   */\n      dup2\n        /* \"#utility.yul\":4951:4990   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":4970:4988   */\n      tag_228\n      tag_176\n      jump\t// in\n    tag_228:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":5006:5024   */\n      add\n      swap1\n        /* \"#utility.yul\":4894:5030   */\n      jump\t// out\n        /* \"#utility.yul\":5369:5914   */\n    tag_178:\n        /* \"#utility.yul\":5471:5473   */\n      0x1f\n        /* \"#utility.yul\":5466:5469   */\n      dup3\n        /* \"#utility.yul\":5463:5474   */\n      gt\n        /* \"#utility.yul\":5460:5908   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":5507:5508   */\n      0x00\n        /* \"#utility.yul\":5532:5537   */\n      dup2\n        /* \"#utility.yul\":5528:5530   */\n      dup2\n        /* \"#utility.yul\":5521:5538   */\n      mstore\n        /* \"#utility.yul\":5577:5581   */\n      0x20\n        /* \"#utility.yul\":5573:5575   */\n      dup2\n        /* \"#utility.yul\":5563:5582   */\n      keccak256\n        /* \"#utility.yul\":5647:5649   */\n      0x1f\n        /* \"#utility.yul\":5635:5645   */\n      dup6\n        /* \"#utility.yul\":5631:5650   */\n      add\n        /* \"#utility.yul\":5628:5629   */\n      0x05\n        /* \"#utility.yul\":5624:5651   */\n      shr\n        /* \"#utility.yul\":5618:5622   */\n      dup2\n        /* \"#utility.yul\":5614:5652   */\n      add\n        /* \"#utility.yul\":5683:5687   */\n      0x20\n        /* \"#utility.yul\":5671:5681   */\n      dup7\n        /* \"#utility.yul\":5668:5688   */\n      lt\n        /* \"#utility.yul\":5665:5712   */\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"#utility.yul\":5706:5710   */\n      dup1\n        /* \"#utility.yul\":5665:5712   */\n    tag_233:\n        /* \"#utility.yul\":5761:5763   */\n      0x1f\n        /* \"#utility.yul\":5756:5759   */\n      dup6\n        /* \"#utility.yul\":5752:5764   */\n      add\n        /* \"#utility.yul\":5749:5750   */\n      0x05\n        /* \"#utility.yul\":5745:5765   */\n      shr\n        /* \"#utility.yul\":5739:5743   */\n      dup3\n        /* \"#utility.yul\":5735:5766   */\n      add\n        /* \"#utility.yul\":5725:5766   */\n      swap2\n      pop\n        /* \"#utility.yul\":5816:5898   */\n    tag_234:\n        /* \"#utility.yul\":5834:5836   */\n      dup2\n        /* \"#utility.yul\":5827:5832   */\n      dup2\n        /* \"#utility.yul\":5824:5837   */\n      lt\n        /* \"#utility.yul\":5816:5898   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":5879:5896   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":5860:5861   */\n      0x01\n        /* \"#utility.yul\":5849:5862   */\n      add\n        /* \"#utility.yul\":5816:5898   */\n      jump(tag_234)\n    tag_236:\n        /* \"#utility.yul\":5820:5823   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5369:5914   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6090:7442   */\n    tag_128:\n        /* \"#utility.yul\":6216:6219   */\n      dup2\n        /* \"#utility.yul\":6210:6220   */\n      mload\n        /* \"#utility.yul\":6243:6261   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6235:6241   */\n      dup2\n        /* \"#utility.yul\":6232:6262   */\n      gt\n        /* \"#utility.yul\":6229:6285   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":6265:6283   */\n      tag_240\n      tag_174\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6294:6391   */\n      tag_241\n        /* \"#utility.yul\":6384:6390   */\n      dup2\n        /* \"#utility.yul\":6344:6382   */\n      tag_242\n        /* \"#utility.yul\":6376:6380   */\n      dup5\n        /* \"#utility.yul\":6370:6381   */\n      sload\n        /* \"#utility.yul\":6344:6382   */\n      tag_85\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6338:6342   */\n      dup5\n        /* \"#utility.yul\":6294:6391   */\n      tag_178\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6446:6450   */\n      0x20\n      dup1\n        /* \"#utility.yul\":6510:6512   */\n      0x1f\n        /* \"#utility.yul\":6499:6513   */\n      dup4\n      gt\n        /* \"#utility.yul\":6527:6528   */\n      0x01\n        /* \"#utility.yul\":6522:7185   */\n      dup2\n      eq\n      tag_244\n      jumpi\n        /* \"#utility.yul\":7229:7230   */\n      0x00\n        /* \"#utility.yul\":7246:7252   */\n      dup5\n        /* \"#utility.yul\":7243:7332   */\n      iszero\n      tag_245\n      jumpi\n      pop\n        /* \"#utility.yul\":7298:7317   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":7292:7318   */\n      mload\n        /* \"#utility.yul\":7243:7332   */\n    tag_245:\n      not(0x00)\n        /* \"#utility.yul\":6047:6048   */\n      0x03\n        /* \"#utility.yul\":6043:6054   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":6039:6063   */\n      shr\n        /* \"#utility.yul\":6035:6064   */\n      not\n        /* \"#utility.yul\":6025:6065   */\n      and\n        /* \"#utility.yul\":6071:6072   */\n      0x01\n        /* \"#utility.yul\":6067:6078   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6022:6079   */\n      or\n        /* \"#utility.yul\":7345:7426   */\n      dup6\n      sstore\n        /* \"#utility.yul\":6492:7436   */\n      jump(tag_236)\n        /* \"#utility.yul\":6522:7185   */\n    tag_244:\n        /* \"#utility.yul\":5316:5317   */\n      0x00\n        /* \"#utility.yul\":5309:5323   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":5353:5357   */\n      0x20\n        /* \"#utility.yul\":5340:5358   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":6558:6578   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":6676:6912   */\n    tag_248:\n        /* \"#utility.yul\":6690:6697   */\n      dup3\n        /* \"#utility.yul\":6687:6688   */\n      dup2\n        /* \"#utility.yul\":6684:6698   */\n      lt\n        /* \"#utility.yul\":6676:6912   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":6779:6798   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":6773:6799   */\n      mload\n        /* \"#utility.yul\":6758:6800   */\n      dup3\n      sstore\n        /* \"#utility.yul\":6871:6898   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":6839:6840   */\n      0x01\n        /* \"#utility.yul\":6827:6841   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":6706:6725   */\n      dup5\n      add\n        /* \"#utility.yul\":6676:6912   */\n      jump(tag_248)\n    tag_250:\n        /* \"#utility.yul\":6680:6683   */\n      pop\n        /* \"#utility.yul\":6940:6946   */\n      dup6\n        /* \"#utility.yul\":6931:6938   */\n      dup3\n        /* \"#utility.yul\":6928:6947   */\n      lt\n        /* \"#utility.yul\":6925:7126   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":7001:7020   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":6995:7021   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":7084:7085   */\n      0x03\n        /* \"#utility.yul\":7080:7094   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":7096:7099   */\n      0xf8\n        /* \"#utility.yul\":7076:7100   */\n      and\n        /* \"#utility.yul\":7072:7109   */\n      shr\n        /* \"#utility.yul\":7068:7110   */\n      not\n        /* \"#utility.yul\":7053:7111   */\n      and\n        /* \"#utility.yul\":7038:7112   */\n      dup2\n      sstore\n        /* \"#utility.yul\":6925:7126   */\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7172:7173   */\n      0x01\n        /* \"#utility.yul\":7156:7170   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":7152:7174   */\n      add\n        /* \"#utility.yul\":7139:7175   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":6090:7442   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b90f50dcca44a6e27d286e1c537ee9c79c6e9295027a09b9c27d5bc9b0e2726064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_823": {
									"entryPoint": null,
									"id": 823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 179,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 243,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 174,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5290:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:6"
															},
															"nodeType": "YulIf",
															"src": "289:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:6"
															},
															"nodeType": "YulIf",
															"src": "359:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													}
												],
												"src": "146:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:6",
														"type": ""
													}
												],
												"src": "531:121:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:6",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:6"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:6"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:6"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:6"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:6"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:6"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:6",
																			"statements": []
																		},
																		"src": "1104:82:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:6"
															},
															"nodeType": "YulIf",
															"src": "748:448:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:6",
														"type": ""
													}
												],
												"src": "657:545:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:6",
														"type": ""
													}
												],
												"src": "1207:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:6"
															},
															"nodeType": "YulIf",
															"src": "1517:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:6",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:6"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:6",
																					"statements": []
																				},
																				"src": "1964:236:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:6"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:6"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:6",
														"type": ""
													}
												],
												"src": "1378:1352:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2791:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2796:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2827:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2817:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:358:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:16:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2956:1:6",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2945:7:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2966:16:6",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "2975:7:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2966:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2991:13:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "2999:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2991:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3055:228:6",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3100:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3102:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3102:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3102:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3075:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3089:1:6",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3085:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3085:6:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3093:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3081:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3081:17:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3072:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3072:27:6"
																		},
																		"nodeType": "YulIf",
																		"src": "3069:53:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3161:29:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3163:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3176:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3183:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3172:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3172:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3163:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3142:8:6"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3152:7:6"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3138:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3138:22:6"
																		},
																		"nodeType": "YulIf",
																		"src": "3135:55:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3203:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3215:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3221:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3211:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3203:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3239:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3255:7:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3264:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3251:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3251:22:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3239:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3024:8:6"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3034:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3021:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:21:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3043:3:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3017:3:6",
																"statements": []
															},
															"src": "3013:270:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "2895:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2902:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2915:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2922:4:6",
														"type": ""
													}
												],
												"src": "2867:422:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3353:747:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3391:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3405:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3414:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3405:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3428:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3373:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3366:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:16:6"
															},
															"nodeType": "YulIf",
															"src": "3363:80:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3476:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3490:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3499:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3490:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3513:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:12:6"
															},
															"nodeType": "YulIf",
															"src": "3452:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3564:52:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3578:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3587:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3578:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3601:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3557:59:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3562:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3632:123:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3667:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3669:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3669:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3669:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3652:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3662:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3649:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3649:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "3646:43:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3702:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3715:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3725:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3711:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3711:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3702:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3740:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3625:130:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3544:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "3537:218:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:70:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3867:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3880:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3886:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "3876:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3876:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3867:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3908:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3777:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3783:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3774:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3774:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3791:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3801:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3788:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3788:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3814:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3820:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3811:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3829:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3839:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3826:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3826:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3807:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3767:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:77:6"
															},
															"nodeType": "YulIf",
															"src": "3764:159:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3932:57:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3974:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3980:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "3955:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:34:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3936:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "3945:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4034:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4036:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4004:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4021:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4017:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4017:6:6"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4013:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4013:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4001:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:32:6"
															},
															"nodeType": "YulIf",
															"src": "3998:58:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4078:7:6"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4087:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4065:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3324:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3330:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3343:5:6",
														"type": ""
													}
												],
												"src": "3294:806:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:72:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4183:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4223:8:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:19:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4192:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:47:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4183:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4144:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4150:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4163:5:6",
														"type": ""
													}
												],
												"src": "4105:140:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4302:116:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4312:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4327:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4330:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4312:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4390:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4392:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4392:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4392:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4361:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4354:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4354:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4368:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4375:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4384:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4371:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4371:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4365:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4365:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4351:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4351:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4344:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:45:6"
															},
															"nodeType": "YulIf",
															"src": "4341:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4281:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4284:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4290:7:6",
														"type": ""
													}
												],
												"src": "4250:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4524:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4534:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4546:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4557:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4542:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4542:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4534:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4576:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4591:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4607:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4612:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4603:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4603:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4616:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4599:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4599:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4587:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4569:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4569:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4569:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4493:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4504:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4515:4:6",
														"type": ""
													}
												],
												"src": "4423:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4679:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4689:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4700:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4703:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4696:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4696:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4689:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4728:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4730:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4730:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4730:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4720:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4723:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4717:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4717:10:6"
															},
															"nodeType": "YulIf",
															"src": "4714:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4662:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4665:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4671:3:6",
														"type": ""
													}
												],
												"src": "4631:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4918:188:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4928:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4940:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4951:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4936:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4936:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4928:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4970:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4985:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5001:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5006:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4997:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4997:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5010:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4993:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4993:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4981:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4981:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4963:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5034:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5045:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5030:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5030:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5050:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5023:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5023:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5023:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5077:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5088:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5073:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5073:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5093:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5066:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5066:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4871:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4882:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4890:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4898:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4909:4:6",
														"type": ""
													}
												],
												"src": "4761:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5212:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5222:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5234:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5245:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5230:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5230:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5222:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5264:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5275:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5257:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5181:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5192:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5203:4:6",
														"type": ""
													}
												],
												"src": "5111:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5E SWAP2 SWAP1 PUSH3 0x2C2 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x6D DUP3 DUP3 PUSH3 0x2C2 JUMP JUMPDEST POP POP POP PUSH3 0xA8 CALLER PUSH3 0x85 PUSH3 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x92 SWAP1 PUSH1 0xA PUSH3 0x499 JUMP JUMPDEST PUSH3 0xA2 SWAP1 PUSH4 0x5F5E100 PUSH3 0x4B0 JUMP JUMPDEST PUSH3 0xB3 JUMP JUMPDEST PUSH3 0x4E0 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xEF PUSH0 DUP4 DUP4 PUSH3 0xF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x121 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x115 SWAP2 SWAP1 PUSH3 0x4CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x193 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x175 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1B1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x1CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x215 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x24B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x26A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2BD JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x298 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2A4 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2DE JUMPI PUSH3 0x2DE PUSH3 0x222 JUMP JUMPDEST PUSH3 0x2F6 DUP2 PUSH3 0x2EF DUP5 SLOAD PUSH3 0x236 JUMP JUMPDEST DUP5 PUSH3 0x270 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x32C JUMPI PUSH0 DUP5 ISZERO PUSH3 0x314 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2B9 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x35C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x33B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x37A JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3DE JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x3C2 JUMPI PUSH3 0x3C2 PUSH3 0x38A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3D0 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3A3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x3F6 JUMPI POP PUSH1 0x1 PUSH3 0x493 JUMP JUMPDEST DUP2 PUSH3 0x404 JUMPI POP PUSH0 PUSH3 0x493 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x41D JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x428 JUMPI PUSH3 0x448 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x493 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x43C JUMPI PUSH3 0x43C PUSH3 0x38A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x493 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x46D JUMPI POP DUP2 DUP2 EXP PUSH3 0x493 JUMP JUMPDEST PUSH3 0x479 DUP4 DUP4 PUSH3 0x39E JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x48F JUMPI PUSH3 0x48F PUSH3 0x38A JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4A9 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x493 JUMPI PUSH3 0x493 PUSH3 0x38A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x493 JUMPI PUSH3 0x493 PUSH3 0x38A JUMP JUMPDEST PUSH2 0xB50 DUP1 PUSH3 0x4EE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E6EC247 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E6EC247 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x87C80464 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xBB3BFA8 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x155 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x161 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x840 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x31E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x393 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3AF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x412 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD GT PUSH2 0x42C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x438 CALLER PUSH1 0x5 SLOAD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x447 DUP4 PUSH2 0x9FC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x493 DUP6 DUP3 DUP6 PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x49E DUP6 DUP6 DUP6 PUSH2 0x64A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x4DD PUSH0 DUP4 DUP4 PUSH2 0x2F4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH2 0x4ED DUP6 DUP3 PUSH2 0xA5E JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4FA DUP5 DUP3 PUSH2 0xA5E JUMP JUMPDEST POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x531 SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55D SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x57F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x531 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x5CA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x644 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x644 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6A7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x5CA DUP4 DUP4 DUP4 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x644 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x76B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x788 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7DA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7F9 DUP4 PUSH2 0x7C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x819 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x822 DUP5 PUSH2 0x7C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x830 PUSH1 0x20 DUP6 ADD PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x850 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x859 DUP3 PUSH2 0x7C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x883 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x89E JUMPI PUSH2 0x89E PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x8C6 JUMPI PUSH2 0x8C6 PUSH2 0x860 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x8DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x910 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x927 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x933 DUP9 DUP4 DUP10 ADD PUSH2 0x874 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x948 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x955 DUP8 DUP3 DUP9 ADD PUSH2 0x874 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x986 DUP4 PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x994 PUSH1 0x20 DUP5 ADD PUSH2 0x7C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH2 0x2EE PUSH2 0x9D5 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0x9D5 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5CA JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xA37 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA56 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA43 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA78 PUSH2 0x860 JUMP JUMPDEST PUSH2 0xA8C DUP2 PUSH2 0xA86 DUP5 SLOAD PUSH2 0x99D JUMP JUMPDEST DUP5 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xABF JUMPI PUSH0 DUP5 ISZERO PUSH2 0xAA8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xA56 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAED JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xACE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xB0A JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xF POP 0xDC 0xCA PREVRANDAO 0xA6 0xE2 PUSH30 0x286E1C537EE9C79C6E9295027A09B9C27D5BC9B0E2726064736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "129:619:5:-:0;;;271:104;;;;;;;;;;1942:116:1;;;;;;;;;;;;;-1:-1:-1;;;1942:116:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1942:116:1;;;2017:5;2009;:13;;;;;;:::i;:::-;-1:-1:-1;2033:7:1;:17;2043:7;2033;:17;:::i;:::-;;1942:116;;319:48:5::1;325:10;356;:8;;;:10;;:::i;:::-;351:15;::::0;:2:::1;:15;:::i;:::-;337:29;::::0;:11:::1;:29;:::i;:::-;319:5;:48::i;:::-;129:619:::0;;3081:84:1;3155:2;;3081:84::o;7941:211::-;-1:-1:-1;;;;;8010:21:1;;8006:93;;8055:32;;-1:-1:-1;;;8055:32:1;;8084:1;8055:32;;;4569:51:6;4542:18;;8055:32:1;;;;;;;;8006:93;8109:35;8125:1;8129:7;8138:5;8109:7;:35::i;:::-;7941:211;;:::o;6455:1133::-;-1:-1:-1;;;;;6543:18:1;;6539:552;;6697:5;6681:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6539:552:1;;-1:-1:-1;6539:552:1;;-1:-1:-1;;;;;6757:15:1;;6735:19;6757:15;;;;;;;;;;;6791:19;;;6787:117;;;6838:50;;-1:-1:-1;;;6838:50:1;;-1:-1:-1;;;;;4981:32:6;;6838:50:1;;;4963:51:6;5030:18;;;5023:34;;;5073:18;;;5066:34;;;4936:18;;6838:50:1;4761:345:6;6787:117:1;-1:-1:-1;;;;;7027:15:1;;:9;:15;;;;;;;;;;7045:19;;;;7027:37;;6539:552;-1:-1:-1;;;;;7107:16:1;;7103:435;;7273:12;:21;;;;;;;7103:435;;;-1:-1:-1;;;;;7489:13:1;;:9;:13;;;;;;;;;;:22;;;;;;7103:435;7570:2;-1:-1:-1;;;;;7555:25:1;7564:4;-1:-1:-1;;;;;7555:25:1;;7574:5;7555:25;;;;5257::6;;5245:2;5230:18;;5111:177;7555:25:1;;;;;;;;6455:1133;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:6;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:6;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:6;;;2580:26;2531:89;-1:-1:-1;;1335:1:6;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:6;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:6;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:6;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:6:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:422;2956:1;2999:5;2956:1;3013:270;3034:7;3024:8;3021:21;3013:270;;;3093:4;3089:1;3085:6;3081:17;3075:4;3072:27;3069:53;;;3102:18;;:::i;:::-;3152:7;3142:8;3138:22;3135:55;;;3172:16;;;;3135:55;3251:22;;;;3211:15;;;;3013:270;;;3017:3;2867:422;;;;;:::o;3294:806::-;3343:5;3373:8;3363:80;;-1:-1:-1;3414:1:6;3428:5;;3363:80;3462:4;3452:76;;-1:-1:-1;3499:1:6;3513:5;;3452:76;3544:4;3562:1;3557:59;;;;3630:1;3625:130;;;;3537:218;;3557:59;3587:1;3578:10;;3601:5;;;3625:130;3662:3;3652:8;3649:17;3646:43;;;3669:18;;:::i;:::-;-1:-1:-1;;3725:1:6;3711:16;;3740:5;;3537:218;;3839:2;3829:8;3826:16;3820:3;3814:4;3811:13;3807:36;3801:2;3791:8;3788:16;3783:2;3777:4;3774:12;3770:35;3767:77;3764:159;;;-1:-1:-1;3876:19:6;;;3908:5;;3764:159;3955:34;3980:8;3974:4;3955:34;:::i;:::-;4025:6;4021:1;4017:6;4013:19;4004:7;4001:32;3998:58;;;4036:18;;:::i;:::-;4074:20;;-1:-1:-1;3294:806:6;;;;;:::o;4105:140::-;4163:5;4192:47;4233:4;4223:8;4219:19;4213:4;4192:47;:::i;:::-;4183:56;4105:140;-1:-1:-1;;;4105:140:6:o;4250:168::-;4323:9;;;4354;;4371:15;;;4365:22;;4351:37;4341:71;;4392:18;;:::i;4631:125::-;4696:9;;;4717:10;;;4714:36;;;4730:18;;:::i;5111:177::-;129:619:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1469,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1703,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 1193,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_name_169": {
									"entryPoint": 1456,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_650": {
									"entryPoint": 1487,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_symbol_171": {
									"entryPoint": 1316,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_totalSupply_167": {
									"entryPoint": null,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1610,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 756,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 731,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@init_876": {
									"entryPoint": 1249,
									"id": 876,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_848": {
									"entryPoint": 1055,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 587,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 1288,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1158,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1303,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7444:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:6"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:548:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:6"
															},
															"nodeType": "YulIf",
															"src": "664:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:6",
														"type": ""
													}
												],
												"src": "567:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:6"
															},
															"nodeType": "YulIf",
															"src": "842:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:6",
														"type": ""
													}
												],
												"src": "745:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:6",
														"type": ""
													}
												],
												"src": "1004:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1300:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1346:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1355:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1358:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1348:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1348:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1321:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1330:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1317:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:32:6"
															},
															"nodeType": "YulIf",
															"src": "1310:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1371:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1400:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1381:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1381:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1371:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1419:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1452:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1463:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1448:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1448:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1476:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1514:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1486:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1476:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1250:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1261:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1273:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1281:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1289:6:6",
														"type": ""
													}
												],
												"src": "1196:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1630:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1640:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1652:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1648:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1640:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1682:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1675:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1675:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1599:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1610:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1621:4:6",
														"type": ""
													}
												],
												"src": "1529:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:6",
														"type": ""
													}
												],
												"src": "1711:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:6"
															},
															"nodeType": "YulIf",
															"src": "1980:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:6",
														"type": ""
													}
												],
												"src": "1900:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2123:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2140:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2147:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2152:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2133:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2183:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2204:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2207:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2197:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2197:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2091:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:666:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2325:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2334:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2327:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2327:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2327:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2304:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2312:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2300:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2300:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2319:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2296:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2289:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:35:6"
															},
															"nodeType": "YulIf",
															"src": "2286:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2350:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2373:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2360:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2360:20:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2354:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2389:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2399:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2393:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2440:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2442:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2442:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2442:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2432:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2436:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2429:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:10:6"
															},
															"nodeType": "YulIf",
															"src": "2426:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2471:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2485:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2481:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2481:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2475:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2497:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2511:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2501:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2529:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2551:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "2575:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2579:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2571:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2571:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "2586:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2567:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2567:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2591:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2563:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2563:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2596:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2547:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2547:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2533:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2659:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2661:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2661:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2661:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2618:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2630:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2615:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2615:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2638:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2650:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2635:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2635:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2612:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:46:6"
															},
															"nodeType": "YulIf",
															"src": "2609:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2701:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2690:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2690:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2728:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2736:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2721:18:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2787:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2796:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2799:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2789:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2789:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2789:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2762:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2770:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2758:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2758:15:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2754:26:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2782:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2751:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:35:6"
															},
															"nodeType": "YulIf",
															"src": "2748:55:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2829:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2825:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2825:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2848:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2856:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2844:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2844:17:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2863:2:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2812:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2812:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2890:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2898:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2886:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2886:15:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2903:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2882:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2882:26:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2910:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2875:37:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2921:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2930:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2921:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2250:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2258:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2266:5:6",
														"type": ""
													}
												],
												"src": "2223:719:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3088:539:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3135:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3144:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3147:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3137:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3137:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3137:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3109:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3118:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3105:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3105:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3130:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:33:6"
															},
															"nodeType": "YulIf",
															"src": "3098:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3160:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3187:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3174:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:23:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3164:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3206:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3216:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3210:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3261:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3270:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3263:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3263:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3249:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3257:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3246:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3246:14:6"
															},
															"nodeType": "YulIf",
															"src": "3243:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3286:60:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3318:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3329:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3314:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3338:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3296:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:50:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3355:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3388:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3371:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:32:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3359:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3432:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3441:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3444:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3434:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3434:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3434:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3418:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3428:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3415:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3415:16:6"
															},
															"nodeType": "YulIf",
															"src": "3412:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3457:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3489:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3500:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3485:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3485:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3511:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3467:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:52:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3457:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3528:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3555:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3566:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3551:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3551:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3538:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3579:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3606:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3617:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3602:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3602:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3589:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3579:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3030:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3041:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3053:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3061:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3069:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3077:6:6",
														"type": ""
													}
												],
												"src": "2947:680:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3719:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3765:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3774:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3777:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3767:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3767:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3767:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3740:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3749:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3736:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3736:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3761:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3732:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:32:6"
															},
															"nodeType": "YulIf",
															"src": "3729:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3790:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3819:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3800:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3838:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3871:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3882:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3867:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3867:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3848:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3838:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3677:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3688:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3700:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3708:6:6",
														"type": ""
													}
												],
												"src": "3632:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3952:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3962:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3976:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3979:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3962:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3993:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4023:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4029:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4019:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3997:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4070:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4072:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4086:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4094:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4082:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4082:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4072:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4050:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4043:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4043:26:6"
															},
															"nodeType": "YulIf",
															"src": "4040:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4160:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4181:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4188:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4193:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4184:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4184:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4174:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4174:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4225:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4228:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4218:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4218:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4218:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4253:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4256:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4246:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4246:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4246:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4116:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4139:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4147:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4136:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4113:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:38:6"
															},
															"nodeType": "YulIf",
															"src": "4110:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3932:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3941:6:6",
														"type": ""
													}
												],
												"src": "3897:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4314:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4331:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4343:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4334:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4334:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4324:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4371:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4374:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4364:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4364:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4395:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4388:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4282:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4462:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4472:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4483:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4486:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4479:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4472:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4511:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4513:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4513:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4513:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4503:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4506:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4500:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:10:6"
															},
															"nodeType": "YulIf",
															"src": "4497:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4445:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4448:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4454:3:6",
														"type": ""
													}
												],
												"src": "4414:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4701:188:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4711:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4723:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4734:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4719:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4719:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4711:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4753:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4768:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4784:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4789:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4780:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4780:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4793:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4776:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4776:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4764:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4764:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4746:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4746:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4833:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4860:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4871:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4856:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4856:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4876:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4849:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4849:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4849:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4654:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4665:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4673:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4681:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4692:4:6",
														"type": ""
													}
												],
												"src": "4544:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4941:89:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4968:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4970:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4970:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4970:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4961:5:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4954:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4954:13:6"
															},
															"nodeType": "YulIf",
															"src": "4951:39:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4999:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5010:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5021:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5017:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5017:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5006:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5006:18:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4999:3:6"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4923:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4933:3:6",
														"type": ""
													}
												],
												"src": "4894:136:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5136:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5146:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5158:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5154:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5146:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5188:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5203:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5219:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5224:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5215:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5215:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5228:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5211:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5211:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5199:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5199:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5181:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5181:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5181:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5105:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5116:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5127:4:6",
														"type": ""
													}
												],
												"src": "5035:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5299:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5316:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5319:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5332:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5350:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5353:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "5340:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5332:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5282:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5290:4:6",
														"type": ""
													}
												],
												"src": "5243:121:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5450:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5483:425:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5497:11:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5507:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "5501:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5528:2:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "5532:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5521:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5521:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5521:17:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5551:31:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5573:2:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5577:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "5563:9:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5563:19:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "5555:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5595:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "5618:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5628:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "5635:10:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5647:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5631:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5631:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "5624:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5624:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5614:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5614:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "5599:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5689:23:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5691:19:6",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "5706:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "5691:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "5671:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5683:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "5668:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5668:20:6"
																		},
																		"nodeType": "YulIf",
																		"src": "5665:47:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5725:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "5739:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5749:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "5756:3:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5761:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5752:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5752:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "5745:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5745:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5735:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5735:31:6"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "5729:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5779:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "5792:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "5783:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5877:21:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "5886:5:6"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "5893:2:6"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "5879:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5879:17:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5879:17:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5827:5:6"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "5834:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "5824:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:6"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "5838:26:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5840:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "5853:5:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5860:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5849:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5849:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "5840:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "5820:3:6",
																			"statements": []
																		},
																		"src": "5816:82:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5466:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5471:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5463:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5463:11:6"
															},
															"nodeType": "YulIf",
															"src": "5460:448:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5422:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5429:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "5434:10:6",
														"type": ""
													}
												],
												"src": "5369:545:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6004:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6014:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "6029:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6047:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "6050:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "6043:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6043:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6060:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "6056:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6056:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6039:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6039:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6035:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6035:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6025:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6025:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6071:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "6074:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6067:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6067:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6022:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6022:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "6014:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5981:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5987:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5995:4:6",
														"type": ""
													}
												],
												"src": "5919:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6186:1256:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6196:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6216:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6210:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6210:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "6200:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6263:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6265:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6265:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6265:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6235:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6243:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6232:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6232:30:6"
															},
															"nodeType": "YulIf",
															"src": "6229:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6338:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "6376:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "6370:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6370:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "6344:25:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:38:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6384:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "6294:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6294:97:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6294:97:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6400:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6417:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "6404:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6427:23:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6446:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "6431:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6459:24:6",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "6472:11:6"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "6459:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6529:656:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6543:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6562:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6574:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "6570:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6570:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6558:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6558:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "6547:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6591:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6635:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "6605:29:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6605:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "6595:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6653:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6662:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6657:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6740:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6765:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6783:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6788:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6779:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6779:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "6773:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6773:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6758:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6758:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6758:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6817:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6831:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6839:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6827:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6827:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6817:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6858:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6875:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "6886:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6871:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6871:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6858:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6687:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6690:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6684:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6684:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6699:28:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6701:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6710:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "6713:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6706:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6706:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6701:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6680:3:6",
																					"statements": []
																				},
																				"src": "6676:236:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6960:166:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "6978:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7005:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7010:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7001:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7001:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6995:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6995:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "6982:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7045:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "7057:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "7084:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "7087:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "7080:3:6"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "7080:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "7096:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "7076:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "7076:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "7106:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "7102:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "7102:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "7072:3:6"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "7072:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "7068:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7068:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "7053:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7053:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7038:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7038:74:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7038:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6931:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6940:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6928:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6928:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "6925:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7146:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7160:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "7163:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "7156:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7156:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7172:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7152:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7152:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "7139:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7139:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7139:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6522:663:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6527:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7202:234:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7216:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7229:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "7220:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7265:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7283:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7302:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7307:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7298:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7298:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7292:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7292:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "7283:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "7246:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "7243:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7352:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "7411:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "7418:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "7358:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7358:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "7345:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7345:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7345:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7194:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6502:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6510:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6499:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6499:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "6492:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6171:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6177:3:6",
														"type": ""
													}
												],
												"src": "6090:1352:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80634e6ec24711610093578063a9059cbb11610063578063a9059cbb146101f0578063b09f126614610203578063d28d88521461020b578063dd62ed3e14610213575f80fd5b80634e6ec2471461019a57806370a08231146101ad57806387c80464146101d557806395d89b41146101e8575f80fd5b806318160ddd116100ce57806318160ddd1461015d57806323b872dd1461016f578063313ce567146101825780633eaaf86b14610191575f80fd5b806306fdde03146100ff578063095ea7b31461011d5780630bb3bfa8146101405780631249c58b14610155575b5f80fd5b61010761024b565b6040516101149190610779565b60405180910390f35b61013061012b3660046107df565b6102db565b6040519015158152602001610114565b61015361014e366004610807565b6102f4565b005b61015361041f565b6002545b604051908152602001610114565b61013061017d366004610807565b610486565b60405160128152602001610114565b61016160025481565b6101536101a83660046107df565b6104a9565b6101616101bb366004610840565b6001600160a01b03165f9081526020819052604090205490565b6101536101e33660046108fd565b6104e1565b610107610508565b6101306101fe3660046107df565b610517565b610107610524565b6101076105b0565b61016161022136600461096c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461025a9061099d565b80601f01602080910402602001604051908101604052809291908181526020018280546102869061099d565b80156102d15780601f106102a8576101008083540402835291602001916102d1565b820191905f5260205f20905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b5f336102e88185856105bd565b60019150505b92915050565b6001600160a01b03831661031e578060025f82825461031391906109e9565b909155506103939050565b6001600160a01b0383165f90815260208190526040902054818110156103755760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064015b60405180910390fd5b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166103af576002805482900390556103cd565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161041291815260200190565b60405180910390a3505050565b5f6006541161042c575f80fd5b610438336005546104a9565b60068054905f610447836109fc565b909155505060055460405190815233907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a2565b5f336104938582856105cf565b61049e85858561064a565b506001949350505050565b6001600160a01b0382166104d25760405163ec442f0560e01b81525f600482015260240161036c565b6104dd5f83836102f4565b5050565b60036104ed8582610a5e565b5060046104fa8482610a5e565b506006919091556005555050565b60606004805461025a9061099d565b5f336102e881858561064a565b600480546105319061099d565b80601f016020809104026020016040519081016040528092919081815260200182805461055d9061099d565b80156105a85780601f1061057f576101008083540402835291602001916105a8565b820191905f5260205f20905b81548152906001019060200180831161058b57829003601f168201915b505050505081565b600380546105319061099d565b6105ca83838360016106a7565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610644578181101561063657604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161036c565b61064484848484035f6106a7565b50505050565b6001600160a01b03831661067357604051634b637e8f60e11b81525f600482015260240161036c565b6001600160a01b03821661069c5760405163ec442f0560e01b81525f600482015260240161036c565b6105ca8383836102f4565b6001600160a01b0384166106d05760405163e602df0560e01b81525f600482015260240161036c565b6001600160a01b0383166106f957604051634a1406b160e11b81525f600482015260240161036c565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561064457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161076b91815260200190565b60405180910390a350505050565b5f6020808352835180828501525f5b818110156107a457858101830151858201604001528201610788565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107da575f80fd5b919050565b5f80604083850312156107f0575f80fd5b6107f9836107c4565b946020939093013593505050565b5f805f60608486031215610819575f80fd5b610822846107c4565b9250610830602085016107c4565b9150604084013590509250925092565b5f60208284031215610850575f80fd5b610859826107c4565b9392505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610883575f80fd5b813567ffffffffffffffff8082111561089e5761089e610860565b604051601f8301601f19908116603f011681019082821181831017156108c6576108c6610860565b816040528381528660208588010111156108de575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f8060808587031215610910575f80fd5b843567ffffffffffffffff80821115610927575f80fd5b61093388838901610874565b95506020870135915080821115610948575f80fd5b5061095587828801610874565b949794965050505060408301359260600135919050565b5f806040838503121561097d575f80fd5b610986836107c4565b9150610994602084016107c4565b90509250929050565b600181811c908216806109b157607f821691505b6020821081036109cf57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102ee576102ee6109d5565b5f81610a0a57610a0a6109d5565b505f190190565b601f8211156105ca575f81815260208120601f850160051c81016020861015610a375750805b601f850160051c820191505b81811015610a5657828155600101610a43565b505050505050565b815167ffffffffffffffff811115610a7857610a78610860565b610a8c81610a86845461099d565b84610a11565b602080601f831160018114610abf575f8415610aa85750858301515b5f19600386901b1c1916600185901b178555610a56565b5f85815260208120601f198616915b82811015610aed57888601518255948401946001909101908401610ace565b5085821015610b0a57878501515f19600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220b90f50dcca44a6e27d286e1c537ee9c79c6e9295027a09b9c27d5bc9b0e2726064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E6EC247 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E6EC247 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x87C80464 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xBB3BFA8 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x155 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x161 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x840 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x31E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x393 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3AF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x412 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD GT PUSH2 0x42C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x438 CALLER PUSH1 0x5 SLOAD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x447 DUP4 PUSH2 0x9FC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x493 DUP6 DUP3 DUP6 PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x49E DUP6 DUP6 DUP6 PUSH2 0x64A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x4DD PUSH0 DUP4 DUP4 PUSH2 0x2F4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH2 0x4ED DUP6 DUP3 PUSH2 0xA5E JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4FA DUP5 DUP3 PUSH2 0xA5E JUMP JUMPDEST POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x531 SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55D SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x57F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x531 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x5CA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x644 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x644 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6A7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x5CA DUP4 DUP4 DUP4 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x644 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x76B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x788 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7DA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7F9 DUP4 PUSH2 0x7C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x819 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x822 DUP5 PUSH2 0x7C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x830 PUSH1 0x20 DUP6 ADD PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x850 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x859 DUP3 PUSH2 0x7C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x883 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x89E JUMPI PUSH2 0x89E PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x8C6 JUMPI PUSH2 0x8C6 PUSH2 0x860 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x8DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x910 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x927 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x933 DUP9 DUP4 DUP10 ADD PUSH2 0x874 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x948 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x955 DUP8 DUP3 DUP9 ADD PUSH2 0x874 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x986 DUP4 PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x994 PUSH1 0x20 DUP5 ADD PUSH2 0x7C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH2 0x2EE PUSH2 0x9D5 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0x9D5 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5CA JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xA37 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA56 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA43 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA78 PUSH2 0x860 JUMP JUMPDEST PUSH2 0xA8C DUP2 PUSH2 0xA86 DUP5 SLOAD PUSH2 0x99D JUMP JUMPDEST DUP5 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xABF JUMPI PUSH0 DUP5 ISZERO PUSH2 0xAA8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xA56 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAED JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xACE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xB0A JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xF POP 0xDC 0xCA PREVRANDAO 0xA6 0xE2 PUSH30 0x286E1C537EE9C79C6E9295027A09B9C27D5BC9B0E2726064736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "129:619:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2128:91:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4421:190;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:6;;1162:22;1144:41;;1132:2;1117:18;4421:190:1;1004:187:6;6455:1133:1;;;;;;:::i;:::-;;:::i;:::-;;383:149:5;;;:::i;3230:99:1:-;3309:12;;3230:99;;;1675:25:6;;;1663:2;1648:18;3230:99:1;1529:177:6;5189:249:1;;;;;;:::i;:::-;;:::i;3081:84::-;;;3155:2;1853:36:6;;1841:2;1826:18;3081:84:1;1711:184:6;1668:27:1;;;;;;7941:211;;;;;;:::i;:::-;;:::i;3392:118::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3484:18:1;3457:7;3484:18;;;;;;;;;;;;3392:118;540:199:5;;;;;;:::i;:::-;;:::i;2338:95:1:-;;;:::i;3715:182::-;;;;;;:::i;:::-;;:::i;1730:21::-;;;:::i;1704:19::-;;;:::i;3960:142::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4067:18:1;;;4040:7;4067:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3960:142;2128:91;2173:13;2206:5;2199:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2128:91;:::o;4421:190::-;4494:4;752:10:4;4550:31:1;752:10:4;4566:7:1;4575:5;4550:8;:31::i;:::-;4599:4;4592:11;;;4421:190;;;;;:::o;6455:1133::-;-1:-1:-1;;;;;6543:18:1;;6539:552;;6697:5;6681:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6539:552:1;;-1:-1:-1;6539:552:1;;-1:-1:-1;;;;;6757:15:1;;6735:19;6757:15;;;;;;;;;;;6791:19;;;6787:117;;;6838:50;;-1:-1:-1;;;6838:50:1;;-1:-1:-1;;;;;4764:32:6;;6838:50:1;;;4746:51:6;4813:18;;;4806:34;;;4856:18;;;4849:34;;;4719:18;;6838:50:1;;;;;;;;6787:117;-1:-1:-1;;;;;7027:15:1;;:9;:15;;;;;;;;;;7045:19;;;;7027:37;;6539:552;-1:-1:-1;;;;;7107:16:1;;7103:435;;7273:12;:21;;;;;;;7103:435;;;-1:-1:-1;;;;;7489:13:1;;:9;:13;;;;;;;;;;:22;;;;;;7103:435;7570:2;-1:-1:-1;;;;;7555:25:1;7564:4;-1:-1:-1;;;;;7555:25:1;;7574:5;7555:25;;;;1675::6;;1663:2;1648:18;;1529:177;7555:25:1;;;;;;;;6455:1133;;;:::o;383:149:5:-;429:1;424:4;;:6;416:15;;;;;;442:25;448:10;459:7;;442:5;:25::i;:::-;478:4;:6;;;:4;:6;;;:::i;:::-;;;;-1:-1:-1;;516:7:5;;500:24;;1675:25:6;;;505:10:5;;500:24;;1663:2:6;1648:18;500:24:5;;;;;;;383:149::o;5189:249:1:-;5276:4;752:10:4;5334:37:1;5350:4;752:10:4;5365:5:1;5334:15;:37::i;:::-;5382:26;5392:4;5398:2;5402:5;5382:9;:26::i;:::-;-1:-1:-1;5426:4:1;;5189:249;-1:-1:-1;;;;5189:249:1:o;7941:211::-;-1:-1:-1;;;;;8010:21:1;;8006:93;;8055:32;;-1:-1:-1;;;8055:32:1;;8084:1;8055:32;;;5181:51:6;5154:18;;8055:32:1;5035:203:6;8006:93:1;8109:35;8125:1;8129:7;8138:5;8109:7;:35::i;:::-;7941:211;;:::o;540:199:5:-;642:5;:12;650:4;642:5;:12;:::i;:::-;-1:-1:-1;665:7:5;:16;675:6;665:7;:16;:::i;:::-;-1:-1:-1;692:4:5;:10;;;;713:7;:18;-1:-1:-1;;540:199:5:o;2338:95:1:-;2385:13;2418:7;2411:14;;;;;:::i;3715:182::-;3784:4;752:10:4;3840:27:1;752:10:4;3857:2:1;3861:5;3840:9;:27::i;1730:21::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1704:19::-;;;;;;;:::i;9244:130::-;9329:37;9338:5;9345:7;9354:5;9361:4;9329:8;:37::i;:::-;9244:130;;;:::o;10960:487::-;-1:-1:-1;;;;;4067:18:1;;;11060:24;4067:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11127:37:1;;11123:317;;11204:5;11185:16;:24;11181:132;;;11237:60;;-1:-1:-1;;;11237:60:1;;-1:-1:-1;;;;;4764:32:6;;11237:60:1;;;4746:51:6;4813:18;;;4806:34;;;4856:18;;;4849:34;;;4719:18;;11237:60:1;4544:345:6;11181:132:1;11356:57;11365:5;11372:7;11400:5;11381:16;:24;11407:5;11356:8;:57::i;:::-;11049:398;10960:487;;;:::o;5823:308::-;-1:-1:-1;;;;;5907:18:1;;5903:88;;5949:30;;-1:-1:-1;;;5949:30:1;;5976:1;5949:30;;;5181:51:6;5154:18;;5949:30:1;5035:203:6;5903:88:1;-1:-1:-1;;;;;6005:16:1;;6001:88;;6045:32;;-1:-1:-1;;;6045:32:1;;6074:1;6045:32;;;5181:51:6;5154:18;;6045:32:1;5035:203:6;6001:88:1;6099:24;6107:4;6113:2;6117:5;6099:7;:24::i;10225:443::-;-1:-1:-1;;;;;10338:19:1;;10334:91;;10381:32;;-1:-1:-1;;;10381:32:1;;10410:1;10381:32;;;5181:51:6;5154:18;;10381:32:1;5035:203:6;10334:91:1;-1:-1:-1;;;;;10439:21:1;;10435:92;;10484:31;;-1:-1:-1;;;10484:31:1;;10512:1;10484:31;;;5181:51:6;5154:18;;10484:31:1;5035:203:6;10435:92:1;-1:-1:-1;;;;;10537:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10583:78;;;;10634:7;-1:-1:-1;;;;;10618:31:1;10627:5;-1:-1:-1;;;;;10618:31:1;;10643:5;10618:31;;;;1675:25:6;;1663:2;1648:18;;1529:177;10618:31:1;;;;;;;;10225:443;;;;:::o;14:548:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:6;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:6:o;1196:328::-;1273:6;1281;1289;1342:2;1330:9;1321:7;1317:23;1313:32;1310:52;;;1358:1;1355;1348:12;1310:52;1381:29;1400:9;1381:29;:::i;:::-;1371:39;;1429:38;1463:2;1452:9;1448:18;1429:38;:::i;:::-;1419:48;;1514:2;1503:9;1499:18;1486:32;1476:42;;1196:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:6:o;2091:127::-;2152:10;2147:3;2143:20;2140:1;2133:31;2183:4;2180:1;2173:15;2207:4;2204:1;2197:15;2223:719;2266:5;2319:3;2312:4;2304:6;2300:17;2296:27;2286:55;;2337:1;2334;2327:12;2286:55;2373:6;2360:20;2399:18;2436:2;2432;2429:10;2426:36;;;2442:18;;:::i;:::-;2517:2;2511:9;2485:2;2571:13;;-1:-1:-1;;2567:22:6;;;2591:2;2563:31;2559:40;2547:53;;;2615:18;;;2635:22;;;2612:46;2609:72;;;2661:18;;:::i;:::-;2701:10;2697:2;2690:22;2736:2;2728:6;2721:18;2782:3;2775:4;2770:2;2762:6;2758:15;2754:26;2751:35;2748:55;;;2799:1;2796;2789:12;2748:55;2863:2;2856:4;2848:6;2844:17;2837:4;2829:6;2825:17;2812:54;2910:1;2903:4;2898:2;2890:6;2886:15;2882:26;2875:37;2930:6;2921:15;;;;;;2223:719;;;;:::o;2947:680::-;3053:6;3061;3069;3077;3130:3;3118:9;3109:7;3105:23;3101:33;3098:53;;;3147:1;3144;3137:12;3098:53;3187:9;3174:23;3216:18;3257:2;3249:6;3246:14;3243:34;;;3273:1;3270;3263:12;3243:34;3296:50;3338:7;3329:6;3318:9;3314:22;3296:50;:::i;:::-;3286:60;;3399:2;3388:9;3384:18;3371:32;3355:48;;3428:2;3418:8;3415:16;3412:36;;;3444:1;3441;3434:12;3412:36;;3467:52;3511:7;3500:8;3489:9;3485:24;3467:52;:::i;:::-;2947:680;;3457:62;;-1:-1:-1;;;;3566:2:6;3551:18;;3538:32;;3617:2;3602:18;3589:32;;2947:680;-1:-1:-1;2947:680:6:o;3632:260::-;3700:6;3708;3761:2;3749:9;3740:7;3736:23;3732:32;3729:52;;;3777:1;3774;3767:12;3729:52;3800:29;3819:9;3800:29;:::i;:::-;3790:39;;3848:38;3882:2;3871:9;3867:18;3848:38;:::i;:::-;3838:48;;3632:260;;;;;:::o;3897:380::-;3976:1;3972:12;;;;4019;;;4040:61;;4094:4;4086:6;4082:17;4072:27;;4040:61;4147:2;4139:6;4136:14;4116:18;4113:38;4110:161;;4193:10;4188:3;4184:20;4181:1;4174:31;4228:4;4225:1;4218:15;4256:4;4253:1;4246:15;4110:161;;3897:380;;;:::o;4282:127::-;4343:10;4338:3;4334:20;4331:1;4324:31;4374:4;4371:1;4364:15;4398:4;4395:1;4388:15;4414:125;4479:9;;;4500:10;;;4497:36;;;4513:18;;:::i;4894:136::-;4933:3;4961:5;4951:39;;4970:18;;:::i;:::-;-1:-1:-1;;;5006:18:6;;4894:136::o;5369:545::-;5471:2;5466:3;5463:11;5460:448;;;5507:1;5532:5;5528:2;5521:17;5577:4;5573:2;5563:19;5647:2;5635:10;5631:19;5628:1;5624:27;5618:4;5614:38;5683:4;5671:10;5668:20;5665:47;;;-1:-1:-1;5706:4:6;5665:47;5761:2;5756:3;5752:12;5749:1;5745:20;5739:4;5735:31;5725:41;;5816:82;5834:2;5827:5;5824:13;5816:82;;;5879:17;;;5860:1;5849:13;5816:82;;;5820:3;;;5369:545;;;:::o;6090:1352::-;6216:3;6210:10;6243:18;6235:6;6232:30;6229:56;;;6265:18;;:::i;:::-;6294:97;6384:6;6344:38;6376:4;6370:11;6344:38;:::i;:::-;6338:4;6294:97;:::i;:::-;6446:4;;6510:2;6499:14;;6527:1;6522:663;;;;7229:1;7246:6;7243:89;;;-1:-1:-1;7298:19:6;;;7292:26;7243:89;-1:-1:-1;;6047:1:6;6043:11;;;6039:24;6035:29;6025:40;6071:1;6067:11;;;6022:57;7345:81;;6492:944;;6522:663;5316:1;5309:14;;;5353:4;5340:18;;-1:-1:-1;;6558:20:6;;;6676:236;6690:7;6687:1;6684:14;6676:236;;;6779:19;;;6773:26;6758:42;;6871:27;;;;6839:1;6827:14;;;;6706:19;;6676:236;;;6680:3;6940:6;6931:7;6928:19;6925:201;;;7001:19;;;6995:26;-1:-1:-1;;7084:1:6;7080:14;;;7096:3;7076:24;7072:37;7068:42;7053:58;7038:74;;6925:201;-1:-1:-1;;;;;7172:1:6;7156:14;;;7152:22;7139:36;;-1:-1:-1;6090:1352:6:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "579200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_mint(address,uint256)": "50973",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"_totalSupply()": "2383",
								"_update(address,address,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2582",
								"decimals()": "243",
								"init(string,string,uint256,uint256)": "infinite",
								"mint()": "82927",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2303",
								"transfer(address,uint256)": "51238",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 129,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 129,
									"end": 748,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 271,
									"end": 375,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 271,
									"end": 375,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 271,
									"end": 375,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 271,
									"end": 375,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 271,
									"end": 375,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 375,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 375,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 271,
									"end": 375,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 271,
									"end": 375,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 271,
									"end": 375,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 271,
									"end": 375,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2017,
									"end": 2022,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2009,
									"end": 2022,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2022,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2022,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2009,
									"end": 2022,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2022,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2022,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2009,
									"end": 2022,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2022,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2009,
									"end": 2022,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2033,
									"end": 2040,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2033,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2043,
									"end": 2050,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2040,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2033,
									"end": 2050,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2050,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2033,
									"end": 2050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2058,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 319,
									"end": 367,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 325,
									"end": 335,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 356,
									"end": 364,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 356,
									"end": 364,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 356,
									"end": 364,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 356,
									"end": 366,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 356,
									"end": 366,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 351,
									"end": 366,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 351,
									"end": 366,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 351,
									"end": 353,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 351,
									"end": 366,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 351,
									"end": 366,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 351,
									"end": 366,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 351,
									"end": 366,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 337,
									"end": 366,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 337,
									"end": 366,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 337,
									"end": 348,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5F5E100"
								},
								{
									"begin": 337,
									"end": 366,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 337,
									"end": 366,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 337,
									"end": 366,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 337,
									"end": 366,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 319,
									"end": 324,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 319,
									"end": 367,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 319,
									"end": 367,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 319,
									"end": 367,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 129,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 129,
									"end": 748,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3081,
									"end": 3165,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3081,
									"end": 3165,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3155,
									"end": 3157,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3155,
									"end": 3157,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3081,
									"end": 3165,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7941,
									"end": 8152,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7941,
									"end": 8152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8010,
									"end": 8031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8010,
									"end": 8031,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8006,
									"end": 8099,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8006,
									"end": 8099,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8084,
									"end": 8085,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4569,
									"end": 4620,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4542,
									"end": 4560,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4542,
									"end": 4560,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8087,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8006,
									"end": 8099,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8006,
									"end": 8099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8109,
									"end": 8144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8125,
									"end": 8126,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8129,
									"end": 8136,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8138,
									"end": 8143,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8109,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8109,
									"end": 8144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8109,
									"end": 8144,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8109,
									"end": 8144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7941,
									"end": 8152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7941,
									"end": 8152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7941,
									"end": 8152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6455,
									"end": 7588,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6455,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6543,
									"end": 6561,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6543,
									"end": 6561,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6539,
									"end": 7091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6539,
									"end": 7091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6702,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6693,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6681,
									"end": 6693,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6681,
									"end": 6702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6681,
									"end": 6702,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6539,
									"end": 7091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6539,
									"end": 7091,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6539,
									"end": 7091,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6539,
									"end": 7091,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6539,
									"end": 7091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6735,
									"end": 6754,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6772,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6810,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6810,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6810,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6787,
									"end": 6904,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6787,
									"end": 6904,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6787,
									"end": 6904,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6838,
									"end": 6888,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6838,
									"end": 6888,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6838,
									"end": 6888,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6838,
									"end": 6888,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4981,
									"end": 5013,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4981,
									"end": 5013,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6838,
									"end": 6888,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6838,
									"end": 6888,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6838,
									"end": 6888,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4963,
									"end": 5014,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5030,
									"end": 5048,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5030,
									"end": 5048,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5030,
									"end": 5048,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5023,
									"end": 5057,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5023,
									"end": 5057,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5023,
									"end": 5057,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5073,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5073,
									"end": 5091,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5073,
									"end": 5091,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5066,
									"end": 5100,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5066,
									"end": 5100,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5066,
									"end": 5100,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4936,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4936,
									"end": 4954,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6838,
									"end": 6888,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4761,
									"end": 5106,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6787,
									"end": 6904,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6787,
									"end": 6904,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7036,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7042,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7045,
									"end": 7064,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7045,
									"end": 7064,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7045,
									"end": 7064,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7045,
									"end": 7064,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7064,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7027,
									"end": 7064,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6539,
									"end": 7091,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6539,
									"end": 7091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7107,
									"end": 7123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7107,
									"end": 7123,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7103,
									"end": 7538,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7103,
									"end": 7538,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7273,
									"end": 7285,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7273,
									"end": 7294,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7273,
									"end": 7294,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7273,
									"end": 7294,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7273,
									"end": 7294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7273,
									"end": 7294,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7273,
									"end": 7294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7273,
									"end": 7294,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7103,
									"end": 7538,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7103,
									"end": 7538,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7103,
									"end": 7538,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7103,
									"end": 7538,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7498,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7502,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7511,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7511,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7511,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7511,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7489,
									"end": 7511,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7103,
									"end": 7538,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7103,
									"end": 7538,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7570,
									"end": 7572,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7564,
									"end": 7568,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7574,
									"end": 7579,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5257,
									"end": 5282,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5257,
									"end": 5282,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5245,
									"end": 5247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5230,
									"end": 5248,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5230,
									"end": 5248,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5111,
									"end": 5288,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7555,
									"end": 7580,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6455,
									"end": 7588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6455,
									"end": 7588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6455,
									"end": 7588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6455,
									"end": 7588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2796,
									"end": 2806,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 2791,
									"end": 2794,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 2787,
									"end": 2807,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2785,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2777,
									"end": 2808,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2827,
									"end": 2831,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2824,
									"end": 2825,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2817,
									"end": 2832,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2851,
									"end": 2855,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 2856,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2999,
									"end": 3004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3034,
									"end": 3041,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3024,
									"end": 3032,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3021,
									"end": 3042,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3093,
									"end": 3097,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3090,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3085,
									"end": 3091,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3098,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3075,
									"end": 3079,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3072,
									"end": 3099,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3102,
									"end": 3120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3142,
									"end": 3150,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3138,
									"end": 3160,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3020,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 3289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3343,
									"end": 3348,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3373,
									"end": 3381,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3414,
									"end": 3415,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3499,
									"end": 3500,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3544,
									"end": 3548,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3563,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3588,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3662,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3652,
									"end": 3660,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3649,
									"end": 3666,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3669,
									"end": 3687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3839,
									"end": 3841,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3829,
									"end": 3837,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3826,
									"end": 3842,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3820,
									"end": 3823,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 3814,
									"end": 3818,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3811,
									"end": 3824,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3807,
									"end": 3843,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3801,
									"end": 3803,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 3791,
									"end": 3799,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3788,
									"end": 3804,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3785,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 3777,
									"end": 3781,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3786,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 3805,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3767,
									"end": 3844,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3980,
									"end": 3988,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3974,
									"end": 3978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3955,
									"end": 3989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4021,
									"end": 4022,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4017,
									"end": 4023,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4013,
									"end": 4032,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4004,
									"end": 4011,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4001,
									"end": 4033,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4036,
									"end": 4054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3294,
									"end": 4100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4233,
									"end": 4237,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 4223,
									"end": 4231,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4219,
									"end": 4238,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4213,
									"end": 4217,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4192,
									"end": 4239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4183,
									"end": 4239,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4105,
									"end": 4245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4351,
									"end": 4388,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4392,
									"end": 4410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4631,
									"end": 4756,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4631,
									"end": 4756,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4696,
									"end": 4705,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4696,
									"end": 4705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4696,
									"end": 4705,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4717,
									"end": 4727,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4717,
									"end": 4727,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4717,
									"end": 4727,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4714,
									"end": 4750,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4714,
									"end": 4750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4714,
									"end": 4750,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4730,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4730,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4730,
									"end": 4748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5111,
									"end": 5288,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5111,
									"end": 5288,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 129,
									"end": 748,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 748,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 129,
									"end": 748,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 748,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 129,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 748,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b90f50dcca44a6e27d286e1c537ee9c79c6e9295027a09b9c27d5bc9b0e2726064736f6c63430008140033",
									".code": [
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "4E6EC247"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "B09F1266"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "D28D8852"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "4E6EC247"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "87C80464"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "3EAAF86B"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "BB3BFA8"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "1249C58B"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 748,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2128,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2128,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4421,
											"end": 4611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4421,
											"end": 4611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6455,
											"end": 7588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6455,
											"end": 7588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 383,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3329,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3230,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3329,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3230,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1529,
											"end": 1706,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5189,
											"end": 5438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5189,
											"end": 5438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3165,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3081,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3081,
											"end": 3165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3157,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1668,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1695,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1668,
											"end": 1695,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1695,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7941,
											"end": 8152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 7941,
											"end": 8152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3392,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3510,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 739,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 540,
											"end": 739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 540,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 540,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 540,
											"end": 739,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 540,
											"end": 739,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 540,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 540,
											"end": 739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 739,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 540,
											"end": 739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 540,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 540,
											"end": 739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2338,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2338,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2338,
											"end": 2433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3715,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3715,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1730,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1704,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3960,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4078,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 4102,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2186,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2206,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2199,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2199,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4550,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4573,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4550,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4581,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4550,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4592,
											"end": 4603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6543,
											"end": 6561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6543,
											"end": 6561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 6539,
											"end": 7091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6697,
											"end": 6702,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6681,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6681,
											"end": 6702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6539,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6539,
											"end": 7091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6539,
											"end": 7091,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 7091,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 6539,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6735,
											"end": 6754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6810,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6904,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6787,
											"end": 6904,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4764,
											"end": 4796,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4764,
											"end": 4796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6904,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6787,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7042,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7064,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 7091,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6539,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7107,
											"end": 7123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7107,
											"end": 7123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7103,
											"end": 7538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7285,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7273,
											"end": 7294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7294,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7103,
											"end": 7538,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7538,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7103,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7511,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7538,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7103,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7574,
											"end": 7579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1706,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 7588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 424,
											"end": 428,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 424,
											"end": 430,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 416,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 416,
											"end": 431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 416,
											"end": 431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 416,
											"end": 431,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 416,
											"end": 431,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 416,
											"end": 431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 448,
											"end": 458,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 459,
											"end": 466,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 459,
											"end": 466,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 442,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 478,
											"end": 482,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 478,
											"end": 484,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 478,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 478,
											"end": 482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 478,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 478,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 478,
											"end": 484,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 478,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 478,
											"end": 484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 478,
											"end": 484,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 516,
											"end": 523,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 516,
											"end": 523,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 524,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 524,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 505,
											"end": 515,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 505,
											"end": 515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 524,
											"name": "PUSH",
											"source": 5,
											"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
										},
										{
											"begin": 500,
											"end": 524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 524,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 524,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 524,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 524,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 524,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 500,
											"end": 524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 524,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 383,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5334,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5350,
											"end": 5354,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 752,
											"end": 762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5370,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5334,
											"end": 5371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5371,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5334,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5392,
											"end": 5396,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5398,
											"end": 5400,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5407,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5382,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5408,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5382,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5426,
											"end": 5430,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5426,
											"end": 5430,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5438,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5189,
											"end": 5438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8010,
											"end": 8031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8010,
											"end": 8031,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8006,
											"end": 8099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8055,
											"end": 8087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8087,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8055,
											"end": 8087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5035,
											"end": 5238,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8006,
											"end": 8099,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8006,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 8109,
											"end": 8144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8144,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8109,
											"end": 8144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 8152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 8152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 739,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 540,
											"end": 739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 642,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 642,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 650,
											"end": 654,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 642,
											"end": 647,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 642,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 642,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 654,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 642,
											"end": 654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 665,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 675,
											"end": 681,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 665,
											"end": 672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 665,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 665,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 665,
											"end": 681,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 665,
											"end": 681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 692,
											"end": 696,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 692,
											"end": 702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 692,
											"end": 702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 692,
											"end": 702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 692,
											"end": 702,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 713,
											"end": 720,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 713,
											"end": 731,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 540,
											"end": 739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2338,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2418,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2411,
											"end": 2425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2425,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2411,
											"end": 2425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2411,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3715,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3840,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1730,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1730,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1704,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9374,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9244,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9338,
											"end": 9343,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9345,
											"end": 9352,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9361,
											"end": 9365,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9329,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9329,
											"end": 9366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9366,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9329,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10960,
											"end": 11447,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10960,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4078,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11127,
											"end": 11164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11127,
											"end": 11164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11123,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11123,
											"end": 11440,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11185,
											"end": 11201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11185,
											"end": 11209,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11181,
											"end": 11313,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11181,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11181,
											"end": 11313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11237,
											"end": 11297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11237,
											"end": 11297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4764,
											"end": 4796,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4764,
											"end": 4796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11237,
											"end": 11297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4544,
											"end": 4889,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11181,
											"end": 11313,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11181,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11365,
											"end": 11370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11405,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11397,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11405,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11356,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 11356,
											"end": 11413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11413,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11356,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11049,
											"end": 11447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10960,
											"end": 11447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10960,
											"end": 11447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10960,
											"end": 11447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10960,
											"end": 11447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 6131,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5823,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5903,
											"end": 5991,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5949,
											"end": 5979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5949,
											"end": 5979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5949,
											"end": 5979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5035,
											"end": 5238,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5903,
											"end": 5991,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5903,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6005,
											"end": 6021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6005,
											"end": 6021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6001,
											"end": 6089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5035,
											"end": 5238,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6089,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6001,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6099,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6107,
											"end": 6111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 6122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6099,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6099,
											"end": 6123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10668,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 10225,
											"end": 10668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10338,
											"end": 10357,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10338,
											"end": 10357,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10334,
											"end": 10425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10411,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5035,
											"end": 5238,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10425,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10334,
											"end": 10425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10439,
											"end": 10460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10439,
											"end": 10460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10435,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 10435,
											"end": 10527,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10484,
											"end": 10515,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10484,
											"end": 10515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10512,
											"end": 10513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10484,
											"end": 10515,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10484,
											"end": 10515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5035,
											"end": 5238,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 10527,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 10435,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10564,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10564,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10564,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10572,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10583,
											"end": 10661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10632,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10643,
											"end": 10648,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1706,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10649,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1524,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1196,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1339,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1328,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1317,
											"end": 1340,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1360,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1400,
											"end": 1409,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1381,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1371,
											"end": 1410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1371,
											"end": 1410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1463,
											"end": 1465,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1429,
											"end": 1467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1467,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1429,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1518,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1524,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1524,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1524,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2218,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2091,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2147,
											"end": 2150,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2143,
											"end": 2163,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2180,
											"end": 2181,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2211,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2212,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2316,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2304,
											"end": 2310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2323,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2286,
											"end": 2341,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2339,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2286,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2380,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2417,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2439,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2442,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2567,
											"end": 2589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2657,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2657,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2658,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2661,
											"end": 2679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2782,
											"end": 2785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2775,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2772,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2768,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2786,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2801,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2865,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2837,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2866,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2900,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3627,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2947,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3116,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3134,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3151,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3098,
											"end": 3151,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3151,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3098,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3196,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3197,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3263,
											"end": 3275,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3327,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3296,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3346,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3296,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3346,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3346,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3397,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3418,
											"end": 3426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3431,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3448,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3412,
											"end": 3448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3442,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3448,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3412,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3511,
											"end": 3518,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3498,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3467,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3519,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3467,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3627,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3627,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 3457,
											"end": 3519,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3457,
											"end": 3519,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3570,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3570,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3619,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3621,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2947,
											"end": 3627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3892,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3632,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3714,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3747,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3764,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3775,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3779,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3800,
											"end": 3829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3829,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3800,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3880,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3848,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3886,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3848,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4277,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3897,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 3977,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3972,
											"end": 3984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3984,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4040,
											"end": 4101,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4098,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 4086,
											"end": 4092,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4082,
											"end": 4099,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4040,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4136,
											"end": 4150,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4113,
											"end": 4151,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4110,
											"end": 4271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4188,
											"end": 4191,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4205,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4232,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4225,
											"end": 4226,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4218,
											"end": 4233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4260,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4253,
											"end": 4254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4261,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4271,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4110,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4277,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4409,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4282,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4353,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4338,
											"end": 4341,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4334,
											"end": 4354,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4378,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4371,
											"end": 4372,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4398,
											"end": 4402,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4395,
											"end": 4396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4403,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4539,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4414,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4510,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4513,
											"end": 4531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4894,
											"end": 5030,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4894,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4970,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5006,
											"end": 5024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4894,
											"end": 5030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5914,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5369,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5474,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5908,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5460,
											"end": 5908,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5508,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5537,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5577,
											"end": 5581,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5573,
											"end": 5575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5582,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5635,
											"end": 5645,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5629,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5624,
											"end": 5651,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5671,
											"end": 5681,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5688,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5712,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5665,
											"end": 5712,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5712,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5665,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 5763,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5756,
											"end": 5759,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5745,
											"end": 5765,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5898,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5816,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 5837,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5898,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5816,
											"end": 5898,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5879,
											"end": 5896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5879,
											"end": 5896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5879,
											"end": 5896,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5861,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5816,
											"end": 5898,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5898,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5816,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 7442,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6090,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6220,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6235,
											"end": 6241,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6229,
											"end": 6285,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6229,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6229,
											"end": 6285,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6265,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6265,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6283,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6265,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6384,
											"end": 6390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6376,
											"end": 6380,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6381,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6344,
											"end": 6382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6382,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6344,
											"end": 6382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6342,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6294,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6446,
											"end": 6450,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6512,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6499,
											"end": 6513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6513,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6522,
											"end": 7185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 7185,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6522,
											"end": 7185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7230,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7252,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7332,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7243,
											"end": 7332,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7317,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7317,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7318,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7332,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7243,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6043,
											"end": 6054,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6054,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6039,
											"end": 6063,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 6064,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6065,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6072,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6067,
											"end": 6078,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6078,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6079,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7426,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7426,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6492,
											"end": 7436,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 7185,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6522,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5323,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5323,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6558,
											"end": 6578,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6558,
											"end": 6578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6558,
											"end": 6578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 6912,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6676,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6698,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 6912,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6676,
											"end": 6912,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6779,
											"end": 6798,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6779,
											"end": 6798,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6779,
											"end": 6798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6799,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6800,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6871,
											"end": 6898,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6871,
											"end": 6898,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6871,
											"end": 6898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6871,
											"end": 6898,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6840,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6827,
											"end": 6841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6725,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6725,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6676,
											"end": 6912,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 6912,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6676,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 6683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6928,
											"end": 6947,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 7126,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6925,
											"end": 7126,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7021,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7084,
											"end": 7085,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7080,
											"end": 7094,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7094,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7096,
											"end": 7099,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 7076,
											"end": 7100,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7072,
											"end": 7109,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7110,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7053,
											"end": 7111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7038,
											"end": 7112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7038,
											"end": 7112,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 7126,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6925,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7156,
											"end": 7170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7156,
											"end": 7170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7156,
											"end": 7170,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7175,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6090,
											"end": 7442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"src/MyERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_mint(address,uint256)": "4e6ec247",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"_totalSupply()": "3eaaf86b",
							"_update(address,address,uint256)": "0bb3bfa8",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"init(string,string,uint256,uint256)": "87c80464",
							"mint()": "1249c58b",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_perMint\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"_mint(address,uint256)\":{\"details\":\"Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0). Relies on the `_update` mechanism Emits a {Transfer} event with `from` set to the zero address. NOTE: This function is not virtual, {_update} should be overridden instead.\"},\"_update(address,address,uint256)\":{\"details\":\"Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding this function. Emits a {Transfer} event.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MyERC20.sol\":\"MyERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3f0529927c972c64ae2414d62d2f73c44c5b33e45bddc17adf3f22051bc6a88c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7ccf38e2d5a13ab3877dd09fc398016ad7837fe986fd8042707c4781e5c41bc\",\"dweb:/ipfs/QmaP6Yjncp79hFkaTBeXdQ8QJgoqHtgpWsxCcWqbpA7Cdr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"src/MyERC20.sol\":{\"keccak256\":\"0x2f005b3810a75ebf51d2bb3d90377ba4f3c56f16d8a4be474efb87f0b9f85323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8982ef643c35dff33c5c5dd20339c4d234fc8d44e771c25d39c3a1c6dc5f892e\",\"dweb:/ipfs/QmZBvKqDqo1ic1wSwTWxGJ1yUBfp8cqxBbeE4JgmEBXH53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 792,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "perMint",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 794,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_num",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "142:142:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "296:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "316:314:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "642:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "708:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "700:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:49:0"
									},
									"src": "636:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "724:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "891:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "910:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:0"
									},
									"src": "885:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "934:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1108:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1137:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1129:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:18:0"
									},
									"src": "1102:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1155:350:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1517:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1544:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1569:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1561:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1588:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1580:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:52:0"
									},
									"src": "1511:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1604:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1793:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1822:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1814:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:18:0"
									},
									"src": "1787:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1840:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2050:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2070:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:17:0"
									},
									"src": "2044:43:0"
								}
							],
							"scope": 137,
							"src": "286:1804:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2094:144:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2250:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2271:223:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2506:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:0"
									},
									"src": "2500:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2548:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:0"
									},
									"src": "2689:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2743:294:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3049:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3078:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3070:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3094:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3086:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:48:0"
									},
									"src": "3043:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3126:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3293:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3313:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:16:0"
									},
									"src": "3287:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3337:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3511:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3541:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3533:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:18:0"
									},
									"src": "3505:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3559:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3822:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3849:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3875:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3867:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:35:0"
									},
									"src": "3816:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3892:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4081:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4111:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4103:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:0"
									},
									"src": "4075:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4129:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4341:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4371:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4363:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:18:0"
									},
									"src": "4335:46:0"
								}
							],
							"scope": 137,
							"src": "2240:2144:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4388:146:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4546:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4568:367:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4947:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4998:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5015:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "5007:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "5023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:66:0"
									},
									"src": "4941:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "5048:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5215:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:16:0"
									},
									"src": "5209:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5260:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5434:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5465:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5457:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:0"
									},
									"src": "5428:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5483:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5755:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5784:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5810:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5802:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:33:0"
									},
									"src": "5749:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5825:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6014:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6045:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "6037:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:0"
									},
									"src": "6008:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "6063:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6275:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:18:0"
									},
									"src": "6269:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6324:285:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6621:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6655:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6674:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6666:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:41:0"
									},
									"src": "6615:73:0"
								}
							],
							"scope": 137,
							"src": "4536:2155:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "114:6579:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "136:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "144:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "174:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "182:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "239:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "247:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "289:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "297:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1461:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1461:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1470:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1470:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1470:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1478:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1478:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1494:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1494:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1494:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "358:1074:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1452:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1558:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1514:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1530:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1522:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1514:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1541:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1648:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1576:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1592:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1584:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1576:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1619:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1611:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1603:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1630:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3eaaf86b",
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1683:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1668:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1668:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d28d8852",
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1718:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1704:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1704:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b09f1266",
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1744:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1730:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1730:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1998:60:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "2009:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2009:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "2009:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "2033:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2043:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2033:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2033:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1760:176:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1968:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1954:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1954:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1989:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1975:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1975:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:0:1"
									},
									"scope": 651,
									"src": "1942:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2188:31:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2199:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2066:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2137:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2141:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2173:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2173:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:15:1"
									},
									"scope": 651,
									"src": "2128:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2400:33:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2418:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2411:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2227:105:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2347:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2353:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2385:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2385:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:15:1"
									},
									"scope": 651,
									"src": "2338:95:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3137:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3155:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3148:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2441:634:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3090:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3130:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3130:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:7:1"
									},
									"scope": 651,
									"src": "3081:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3291:38:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3309:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3302:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3173:51:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3239:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3250:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3282:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3281:9:1"
									},
									"scope": 651,
									"src": "3230:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3466:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3484:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3494:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3484:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3477:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3337:49:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3401:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3419:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3411:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3411:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3410:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:9:1"
									},
									"scope": 651,
									"src": "3392:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3790:107:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3809:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3801:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3801:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3817:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3817:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3801:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3850:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3857:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3861:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3840:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3840:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3885:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3878:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3518:191:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3753:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3745:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3732:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3784:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3784:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:6:1"
									},
									"scope": 651,
									"src": "3715:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4049:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4067:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4079:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4067:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4067:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "4060:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3905:49:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3969:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3979:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4002:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3994:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4040:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4039:9:1"
									},
									"scope": 651,
									"src": "3960:142:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4500:111:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4519:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4511:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4511:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4527:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4527:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4511:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4559:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4566:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4575:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4550:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4550:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4550:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4599:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4592:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "4110:305:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4446:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4463:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4455:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4437:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4494:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4494:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4493:6:1"
									},
									"scope": 651,
									"src": "4421:190:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5282:156:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5301:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5293:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5293:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5311:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5311:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5350:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5356:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5334:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5334:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5392:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5398:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5402:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5382:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5382:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5382:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5426:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5419:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4619:564:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5198:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5211:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5233:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5225:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5245:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5237:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5276:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5276:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5275:6:1"
									},
									"scope": 651,
									"src": "5189:249:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5892:239:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5907:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5923:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5915:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5915:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5915:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5907:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5903:88:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5927:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5976:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5968:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5968:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5968:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5949:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5949:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5942:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "6005:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6019:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6011:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6011:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6011:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6005:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "6001:88:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "6023:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6074:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6066:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6066:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6066:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "6045:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6045:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "6038:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "6107:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6113:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6117:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "6099:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "6099:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5446:371:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5832:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5850:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5842:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5842:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5856:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5868:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5841:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5892:0:1"
									},
									"scope": 651,
									"src": "5823:308:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6528:1060:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6543:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6559:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6551:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6551:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6551:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6543:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6720:371:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6743:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6735:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6735:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6757:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6767:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6757:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6735:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6791:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6805:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6791:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6787:117:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6812:92:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6863:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6869:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6882:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6838:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6838:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6831:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6918:162:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7027:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "7037:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7027:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "7045:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "7059:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7045:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7027:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "7027:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6539:552:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6563:151:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6681:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6697:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6681:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6681:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "7107:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7121:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7113:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7113:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7113:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7107:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7327:211:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7342:185:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7489:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7499:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7489:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7506:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7489:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7489:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "7103:435:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "7125:196:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "7140:170:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7273:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7289:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7273:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7273:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7564:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7570:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7574:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7555:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7555:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7550:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "6139:310:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"functionSelector": "0bb3bfa8",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6464:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6480:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6472:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6472:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6494:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6486:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6486:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6506:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6498:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6498:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6528:0:1"
									},
									"scope": 651,
									"src": "6455:1133:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7995:157:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "8010:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8029:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8021:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8021:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8021:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8010:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "8006:93:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "8033:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8084:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8076:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8076:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8076:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "8055:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8055:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "8048:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8125:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8117:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8117:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8117:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8129:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "8138:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8109:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8109:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8109:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7596:339:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"functionSelector": "4e6ec247",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7950:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7964:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7956:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7956:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7973:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7955:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7995:0:1"
									},
									"scope": 651,
									"src": "7941:211:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8536:155:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8551:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8570:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8562:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8562:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8562:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8551:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8547:91:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8574:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8623:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8615:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8615:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8615:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8596:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8596:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8589:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8656:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8673:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8665:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8665:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8665:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8677:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8648:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8648:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8648:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "8160:314:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8489:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8503:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8495:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8494:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8536:0:1"
									},
									"scope": 651,
									"src": "8480:211:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9318:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9338:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9345:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9354:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9361:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9329:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9329:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9329:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8699:539:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9253:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9270:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9262:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9285:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9277:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9277:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9302:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9294:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9261:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9318:0:1"
									},
									"scope": 651,
									"src": "9244:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10323:345:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10338:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10355:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10347:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10347:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10338:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10334:91:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10359:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10410:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10402:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10402:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10402:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10381:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10381:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10374:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10439:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10458:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10450:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10450:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10450:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10439:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10435:92:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10462:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10512:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10504:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10504:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10504:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10484:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10484:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10477:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10537:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10549:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10537:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10556:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10537:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10567:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10537:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10537:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10587:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10583:78:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10598:63:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10627:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10634:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10643:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10618:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10618:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10613:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9382:837:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10234:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10251:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10243:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10266:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10258:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10283:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10275:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10295:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10290:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10290:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10242:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10323:0:1"
									},
									"scope": 651,
									"src": "10225:443:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "11049:398:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11068:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "11060:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11060:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "11097:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "11104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "11087:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11087:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11060:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "11127:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11152:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11152:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11147:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11147:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11161:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11147:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11127:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "11123:317:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "11166:274:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "11185:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "11204:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11185:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "11181:132:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "11211:102:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "11264:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11273:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11291:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "11237:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11237:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "11230:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11327:102:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11365:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11372:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11381:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11400:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11381:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11407:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11356:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11356:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11356:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10676:278:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10969:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10993:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10985:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11008:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "11000:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11025:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "11017:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11017:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10984:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11049:0:1"
									},
									"scope": 651,
									"src": "10960:487:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1434:10016:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "108:11344:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "137:72:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "221:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "235:163:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "410:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "435:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "419:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "457:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "441:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "469:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "461:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:57:2"
									},
									"src": "404:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "484:151:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "647:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "672:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "656:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "695:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "679:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "712:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "704:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:63:2"
									},
									"src": "641:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "727:67:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "846:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:2"
									},
									"scope": 729,
									"src": "800:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "863:73:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "951:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "969:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "961:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1001:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:9:2"
									},
									"scope": 729,
									"src": "942:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "1018:219:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1252:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1269:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1261:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1281:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1273:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1306:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:6:2"
									},
									"scope": 729,
									"src": "1243:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1320:270:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1605:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1623:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1615:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1638:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1630:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1670:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:9:2"
									},
									"scope": 729,
									"src": "1596:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1687:681:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2383:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2399:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2391:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2416:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2408:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2441:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2441:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:6:2"
									},
									"scope": 729,
									"src": "2374:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2455:305:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2775:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2796:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2788:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2822:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2814:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2847:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2847:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:6:2"
									},
									"scope": 729,
									"src": "2766:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "211:2645:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "109:2749:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "156:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "164:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"315:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "315:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "315:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "197:88:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "297:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "329:56:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "400:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "430:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "430:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:15:3"
									},
									"scope": 755,
									"src": "391:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "453:58:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "526:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "558:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "558:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:15:3"
									},
									"scope": 755,
									"src": "517:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "581:67:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "663:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "671:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "697:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "697:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:7:3"
									},
									"scope": 755,
									"src": "654:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "287:420:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "128:581:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "657:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "734:36:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "745:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "725:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:4"
									},
									"scope": 785,
									"src": "672:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "845:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "856:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "829:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:4"
									},
									"scope": 785,
									"src": "778:101:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "959:27:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "977:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "970:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "896:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "950:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:4"
									},
									"scope": 785,
									"src": "887:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "639:350:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:887:4"
				},
				"id": 4
			},
			"src/MyERC20.sol": {
				"ast": {
					"absolutePath": "src/MyERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"MyERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"file": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 878,
							"sourceUnit": 652,
							"src": "59:68:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"149:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "149:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "149:5:5"
								}
							],
							"canonicalName": "MyERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 877,
							"linearizedBaseContracts": [
								877,
								651,
								41,
								755,
								729,
								785
							],
							"name": "MyERC20",
							"nameLocation": "138:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "perMint",
									"nameLocation": "175:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 877,
									"src": "162:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 791,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "162:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 794,
									"mutability": "mutable",
									"name": "_num",
									"nameLocation": "207:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 877,
									"src": "189:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 793,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "189:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885",
									"id": 800,
									"name": "Mint",
									"nameLocation": "226:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "247:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "231:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "255:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "250:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "230:32:5"
									},
									"src": "220:43:5"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "309:66:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 808,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "325:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "329:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "325:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "337:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	},
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "341:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "347:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "341:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	}
																},
																"src": "337:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "351:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 816,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "356:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "356:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "351:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "337:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "319:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "319:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "319:48:5"
											}
										]
									},
									"id": 823,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "291:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "302:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 805,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 802,
												"name": "ERC20",
												"nameLocations": [
													"285:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "285:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "285:23:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:2:5"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:0:5"
									},
									"scope": 877,
									"src": "271:104:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "405:127:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "_num",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "424:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "429:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "424:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "416:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "416:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "416:15:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 833,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "448:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "452:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "448:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "perMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "459:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 832,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "442:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "442:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "442:25:5"
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "478:6:5",
													"subExpression": {
														"id": 838,
														"name": "_num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "478:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "478:6:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 842,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "505:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "509:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "505:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "perMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "516:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "500:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "500:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "495:29:5"
											}
										]
									},
									"functionSelector": "1249c58b",
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "392:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:2:5"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:0:5"
									},
									"scope": 877,
									"src": "383:149:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "631:108:5",
										"statements": [
											{
												"expression": {
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 859,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "642:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 860,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "650:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "642:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "642:12:5"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 863,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "665:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 864,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "675:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "665:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "665:16:5"
											},
											{
												"expression": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 867,
														"name": "_num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "692:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 868,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "699:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "692:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "692:10:5"
											},
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "perMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "713:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "_perMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "723:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "713:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "713:18:5"
											}
										]
									},
									"functionSelector": "87c80464",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nameLocation": "549:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "568:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "554:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "554:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "588:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "574:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "574:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "604:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "596:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "_perMint",
												"nameLocation": "614:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "609:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "609:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:70:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:0:5"
									},
									"scope": 877,
									"src": "540:199:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 878,
							"src": "129:619:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								800
							]
						}
					],
					"src": "33:715:5"
				},
				"id": 5
			}
		}
	}
}