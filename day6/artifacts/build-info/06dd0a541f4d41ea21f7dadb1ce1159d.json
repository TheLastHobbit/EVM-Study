{
	"id": "06dd0a541f4d41ea21f7dadb1ce1159d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"day6/MyERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./TokenBank.sol\";\r\ncontract MTK is ERC20 {\r\n    constructor() ERC20(\"MyToken\", \"MTK\") {\r\n       _mint(msg.sender, 1 * 10 ** 8 * 10 **decimals());\r\n    }\r\n\r\n    function _isContract(address _address) internal view returns (bool) {\r\n    uint32 size;\r\n    assembly {\r\n        size := extcodesize(_address)\r\n    }\r\n    return (size > 0);\r\n    }\r\n    function transferWithCallback(address recipient,uint256 amount) external returns(bool){\r\n        \r\n        if(_isContract(recipient)){\r\n            bool rv = TokenBank(recipient).tokenReceive(msg.sender,amount);\r\n            require(rv, \"No tokensReceived\");\r\n        }\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n}"
			},
			"day6/TokenBank.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./MyToken.sol\";\r\n\r\ncontract TokenBank {\r\n    mapping (address account=>uint256) private _balance;\r\n    address private admin;\r\n    MyToken public  mytoken; \r\n\r\n    event Deposit(address account,uint256 value);\r\n\r\n    event WithDraw(uint256 value);\r\n\r\n    constructor(MyToken mytoken){\r\n        mytoken = mytoken;\r\n        admin = msg.sender;\r\n    }\r\n\r\n// 注意要先approve给Bank\r\n    function deposit(uint256 value) external {\r\n        address account = msg.sender;\r\n        require(mytoken.transferfrom(account, address(this), value),\"transfer failed\");\r\n        _balance[account] += value;\r\n        emit Deposit(account, value);\r\n    }\r\n\r\n    function withDraw() external {\r\n        require(msg.sender==admin);\r\n        uint256 value= _balance[address(this)];\r\n        require(mytoken.transfer(msg.sender, value),\"transfer fail\");\r\n        _balance[msg.sender] = 0;\r\n        emit WithDraw(value);\r\n    }\r\n\r\n    function getbalance(address account) external view returns(uint256){\r\n        return _balance[account];\r\n    }\r\n\r\n    function tokenReceive(address from,uint256 value) external  returns(bool){\r\n        _balance[address(this)] +=value;\r\n        return true;\r\n    }\r\n\r\n    \r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"day6/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport {IMyToken} from \"./IMyToken.sol\";\r\nimport \"./TokenBank.sol\";\r\n// import \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\n// 抽象合约可以选择性地实现接口中的函数，而普通合约在继承接口时需要实现接口中的所有函数。\r\nabstract contract MyToken is IMyToken{\r\n\r\n    mapping(address account => uint256)private _balances;\r\n    mapping (address owner =>mapping (address spender=>uint256))private _allowances;\r\n\r\n\r\n    uint256 private _totalSupply;\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    constructor(string memory name,string memory symbol){\r\n        _name=name;\r\n        _symbol=symbol;\r\n    }\r\n\r\n// 在Solidity中，对于固定大小的返回值类型（如uint256），编译器会自动将其数据位置设置为默认的\"memory\"，因此不需要显式指定数据位置。\r\n\r\n// 而对于动态大小的返回值类型（如string），编译器无法确定其大小，因此需要显式指定数据位置为\"memory\"或\"calldata\"。\r\n    function name()public view returns (string memory){\r\n        return _name;\r\n    }\r\n\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address to,uint256 value) external override returns(bool){\r\n        address owner = msg.sender;\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n   function _isContract(address _address) internal view returns (bool) {\r\n    uint32 size;\r\n    assembly {\r\n        size := extcodesize(_address)\r\n    }\r\n    return (size > 0);\r\n}\r\n    function transferWithCallback(address recipient,uint256 amount) external returns(bool){\r\n        \r\n        if(_isContract(recipient)){\r\n            bool rv = TokenBank(recipient).tokenReceive(msg.sender,amount);\r\n            require(rv, \"No tokensReceived\");\r\n        }\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    function _transfer(address from,address to,uint256 value)internal {\r\n       if(from==address(0)){\r\n        revert();\r\n       }\r\n       if(to==address(0)){\r\n        revert();\r\n       }\r\n       _updata(from, to, value);\r\n    }\r\n\r\n    function approve(address spender,uint256 value) external override returns (bool){\r\n        address owner =  msg.sender;\r\n        _approve(owner, spender, value,true);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner,address spender)external override returns (uint256){\r\n        uint256 value = _allowances[owner][spender];\r\n        return value;\r\n    }\r\n\r\n    function transferfrom(address from,address to,uint256 value)external override returns(bool){\r\n        address spender  = msg.sender;\r\n        _spendAllowance(from,spender,value);\r\n        _updata(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner,address spender,uint256 value,bool emitEvent)internal {\r\n        if(owner==address(0)){\r\n            revert();\r\n        }\r\n        if (spender==address(0)){\r\n            revert();\r\n        }\r\n        _allowances[owner][spender]=value;\r\n        if(emitEvent){\r\n            emit Approve(owner,spender,value);\r\n        }\r\n\r\n    }\r\n\r\n    function _spendAllowance(address owner,address spender,uint256 value) internal virtual {\r\n        uint256 currentAllowance = _allowances[owner][spender];\r\n        if(value>currentAllowance){\r\n            revert();\r\n        }\r\n        // 不需要触发事件\r\n        _approve(owner, spender,currentAllowance-value, false);\r\n    }\r\n\r\n\r\n    function _mint(address account,uint256 value) internal {\r\n        _updata(address(0), account, value);\r\n    }\r\n\r\n    function _updata(address from ,address to,uint256 value) internal virtual {\r\n        if(from==address(0)){\r\n            _totalSupply+=value;\r\n        }else{\r\n            uint256 frombalance = _balances[from];\r\n            if(frombalance<value){\r\n                revert();//yichang\r\n            }else {\r\n                _balances[from]=frombalance-value;\r\n            }\r\n\r\n        }\r\n        \r\n        if(to==address(0)){\r\n            _totalSupply-=value;\r\n        }else {\r\n            _balances[to]+=value;\r\n        }\r\n\r\n        emit Transfer(from,to,value);\r\n    }\r\n    \r\n\r\n}"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"day6/IMyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IMyToken {\r\n        // 在Solidity中，indexed是一个关键字，用于声明事件参数。\r\n    // 当在事件声明中使用indexed修饰符时，表示该参数将被索引，以便在日志中进行快速搜索和过滤。\r\n    event Transfer(address indexed from,address indexed to, uint256 value);\r\n\r\n    event Approve(address indexed owner,address indexed spender,uint256 value);\r\n\r\n// 在Solidity中，external和view是函数修饰符，用于声明函数的可见性和状态。\r\n\r\n// external修饰符表示该函数只能通过外部调用进行访问，即只能通过合约外部的消息调用来触发该函数。\r\n// 这意味着该函数不能在合约内部直接调用，只能由其他合约或外部账户通过交易调用。\r\n\r\n// view修饰符表示该函数不会修改合约的状态。它只用于读取数据，而不会对合约的状态进行修改。\r\n// 这意味着在调用该函数期间，不会产生任何状态变化，也不会消耗任何燃气（gas）。\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf (address account) external view returns(uint256);\r\n    function transfer(address to,uint256 value) external returns(bool);\r\n\r\n    function allowance(address owner,address spender) external returns(uint256);\r\n\r\n    function approve(address spender,uint256 value)external returns(bool);\r\n\r\n    function transferfrom(address from,address to,uint256 value) external returns(bool);\r\n    \r\n    \r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"day6/IMyToken.sol": {
				"IMyToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approve",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferfrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferfrom(address,address,uint256)": "63b0545f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferfrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"day6/IMyToken.sol\":\"IMyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"day6/IMyToken.sol\":{\"keccak256\":\"0xbf0a600473187eab5720e8ba157d3798d175a6e675ffd56e3c131e20bc4d64bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69bf44aacf5f48a455ec76a0467426a875a4f8534f70a31a4abe2dee8136c487\",\"dweb:/ipfs/QmeJDAeXu3M15h2CaSRRzq357iqoZtn3E7wTPshjoUbsAV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"day6/MyERC20.sol": {
				"MTK": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferWithCallback",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"day6/MyERC20.sol\":143:822  contract MTK is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"day6/MyERC20.sol\":172:276  constructor() ERC20(\"MyToken\", \"MTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d544b)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"day6/MyERC20.sol\":220:268  _mint(msg.sender, 1 * 10 ** 8 * 10 **decimals()) */\n  tag_9\n    /* \"day6/MyERC20.sol\":226:236  msg.sender */\n  caller\n    /* \"day6/MyERC20.sol\":257:267  decimals() */\n  tag_10\n    /* \"day6/MyERC20.sol\":257:265  decimals */\n  shl(0x20, tag_11)\n    /* \"day6/MyERC20.sol\":257:267  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"day6/MyERC20.sol\":252:267  10 **decimals() */\n  tag_12\n  swap1\n    /* \"day6/MyERC20.sol\":252:254  10 */\n  0x0a\n    /* \"day6/MyERC20.sol\":252:267  10 **decimals() */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"day6/MyERC20.sol\":238:267  1 * 10 ** 8 * 10 **decimals() */\n  tag_14\n  swap1\n    /* \"day6/MyERC20.sol\":238:249  1 * 10 ** 8 */\n  0x05f5e100\n    /* \"day6/MyERC20.sol\":238:267  1 * 10 ** 8 * 10 **decimals() */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"day6/MyERC20.sol\":220:225  _mint */\n  tag_16\n    /* \"day6/MyERC20.sol\":220:268  _mint(msg.sender, 1 * 10 ** 8 * 10 **decimals()) */\n  jump\t// in\ntag_9:\n    /* \"day6/MyERC20.sol\":143:822  contract MTK is ERC20 {... */\n  jump(tag_45)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4529:4580   */\n  mstore\n    /* \"#utility.yul\":4502:4520   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_23\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  tag_24\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_29\n  swap1\n  pop\n  jump\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4941:4973   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4923:4974   */\n  mstore\n    /* \"#utility.yul\":4990:5008   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4983:5017   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5033:5051   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5026:5060   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4896:4914   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_21\n    /* \"#utility.yul\":4721:5066   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_34)\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_35\n  swap2\n    /* \"#utility.yul\":5217:5242   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5205:5207   */\n  0x20\n    /* \"#utility.yul\":5190:5208   */\n  add\n  swap1\n    /* \"#utility.yul\":5071:5248   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_37:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_38:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_48:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_49:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_40:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_53:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_54:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_52:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_60\n  tag_37\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1555:1652   */\n  tag_61\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_62\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_38\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_40\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_65:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_63)\n    /* \"#utility.yul\":1776:2439   */\ntag_64:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_68:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_71:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_63:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2701:2828   */\ntag_42:\n    /* \"#utility.yul\":2762:2772   */\n  0x4e487b71\n    /* \"#utility.yul\":2757:2760   */\n  0xe0\n    /* \"#utility.yul\":2753:2773   */\n  shl\n    /* \"#utility.yul\":2750:2751   */\n  0x00\n    /* \"#utility.yul\":2743:2774   */\n  mstore\n    /* \"#utility.yul\":2793:2797   */\n  0x11\n    /* \"#utility.yul\":2790:2791   */\n  0x04\n    /* \"#utility.yul\":2783:2798   */\n  mstore\n    /* \"#utility.yul\":2817:2821   */\n  0x24\n    /* \"#utility.yul\":2814:2815   */\n  0x00\n    /* \"#utility.yul\":2807:2822   */\n  revert\n    /* \"#utility.yul\":2833:3249   */\ntag_43:\n    /* \"#utility.yul\":2922:2923   */\n  0x01\n    /* \"#utility.yul\":2959:2964   */\n  dup2\n    /* \"#utility.yul\":2922:2923   */\n  dup2\n    /* \"#utility.yul\":2973:3243   */\ntag_74:\n    /* \"#utility.yul\":2994:3001   */\n  dup1\n    /* \"#utility.yul\":2984:2992   */\n  dup6\n    /* \"#utility.yul\":2981:3002   */\n  gt\n    /* \"#utility.yul\":2973:3243   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3053:3057   */\n  dup2\n    /* \"#utility.yul\":3049:3050   */\n  0x00\n    /* \"#utility.yul\":3045:3051   */\n  not\n    /* \"#utility.yul\":3041:3058   */\n  div\n    /* \"#utility.yul\":3035:3039   */\n  dup3\n    /* \"#utility.yul\":3032:3059   */\n  gt\n    /* \"#utility.yul\":3029:3082   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3062:3080   */\n  tag_78\n  tag_42\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3112:3119   */\n  dup1\n    /* \"#utility.yul\":3102:3110   */\n  dup6\n    /* \"#utility.yul\":3098:3120   */\n  and\n    /* \"#utility.yul\":3095:3150   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3132:3148   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3095:3150   */\ntag_79:\n    /* \"#utility.yul\":3211:3233   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3171:3186   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":2973:3243   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":2977:2980   */\n  pop\n    /* \"#utility.yul\":2833:3249   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3254:4060   */\ntag_44:\n    /* \"#utility.yul\":3303:3308   */\n  0x00\n    /* \"#utility.yul\":3333:3341   */\n  dup3\n    /* \"#utility.yul\":3323:3403   */\n  tag_81\n  jumpi\n  pop\n    /* \"#utility.yul\":3374:3375   */\n  0x01\n    /* \"#utility.yul\":3388:3393   */\n  jump(tag_80)\n    /* \"#utility.yul\":3323:3403   */\ntag_81:\n    /* \"#utility.yul\":3422:3426   */\n  dup2\n    /* \"#utility.yul\":3412:3488   */\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":3459:3460   */\n  0x00\n    /* \"#utility.yul\":3473:3478   */\n  jump(tag_80)\n    /* \"#utility.yul\":3412:3488   */\ntag_82:\n    /* \"#utility.yul\":3504:3508   */\n  dup2\n    /* \"#utility.yul\":3522:3523   */\n  0x01\n    /* \"#utility.yul\":3517:3576   */\n  dup2\n  eq\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3590:3591   */\n  0x02\n    /* \"#utility.yul\":3585:3715   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3497:3715   */\n  jump(tag_83)\n    /* \"#utility.yul\":3517:3576   */\ntag_84:\n    /* \"#utility.yul\":3547:3548   */\n  0x01\n    /* \"#utility.yul\":3538:3548   */\n  swap2\n  pop\n    /* \"#utility.yul\":3561:3566   */\n  pop\n  jump(tag_80)\n    /* \"#utility.yul\":3585:3715   */\ntag_85:\n    /* \"#utility.yul\":3622:3625   */\n  0xff\n    /* \"#utility.yul\":3612:3620   */\n  dup5\n    /* \"#utility.yul\":3609:3626   */\n  gt\n    /* \"#utility.yul\":3606:3649   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3629:3647   */\n  tag_87\n  tag_42\n  jump\t// in\ntag_87:\n  pop\n  pop\n    /* \"#utility.yul\":3685:3686   */\n  0x01\n    /* \"#utility.yul\":3671:3687   */\n  dup3\n  shl\n    /* \"#utility.yul\":3700:3705   */\n  jump(tag_80)\n    /* \"#utility.yul\":3497:3715   */\ntag_83:\n  pop\n    /* \"#utility.yul\":3799:3801   */\n  0x20\n    /* \"#utility.yul\":3789:3797   */\n  dup4\n    /* \"#utility.yul\":3786:3802   */\n  lt\n    /* \"#utility.yul\":3780:3783   */\n  0x0133\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3771:3784   */\n  lt\n    /* \"#utility.yul\":3767:3803   */\n  and\n    /* \"#utility.yul\":3761:3763   */\n  0x4e\n    /* \"#utility.yul\":3751:3759   */\n  dup5\n    /* \"#utility.yul\":3748:3764   */\n  lt\n    /* \"#utility.yul\":3743:3745   */\n  0x0b\n    /* \"#utility.yul\":3737:3741   */\n  dup5\n    /* \"#utility.yul\":3734:3746   */\n  lt\n    /* \"#utility.yul\":3730:3765   */\n  and\n    /* \"#utility.yul\":3727:3804   */\n  or\n    /* \"#utility.yul\":3724:3883   */\n  iszero\n  tag_88\n  jumpi\n  pop\n    /* \"#utility.yul\":3836:3855   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3868:3873   */\n  jump(tag_80)\n    /* \"#utility.yul\":3724:3883   */\ntag_88:\n    /* \"#utility.yul\":3915:3949   */\n  tag_89\n    /* \"#utility.yul\":3940:3948   */\n  dup4\n    /* \"#utility.yul\":3934:3938   */\n  dup4\n    /* \"#utility.yul\":3915:3949   */\n  tag_43\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3985:3991   */\n  dup1\n    /* \"#utility.yul\":3981:3982   */\n  0x00\n    /* \"#utility.yul\":3977:3983   */\n  not\n    /* \"#utility.yul\":3973:3992   */\n  div\n    /* \"#utility.yul\":3964:3971   */\n  dup3\n    /* \"#utility.yul\":3961:3993   */\n  gt\n    /* \"#utility.yul\":3958:4016   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3996:4014   */\n  tag_91\n  tag_42\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4034:4054   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3254:4060   */\ntag_80:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4065:4205   */\ntag_13:\n    /* \"#utility.yul\":4123:4128   */\n  0x00\n    /* \"#utility.yul\":4152:4199   */\n  tag_93\n    /* \"#utility.yul\":4193:4197   */\n  0xff\n    /* \"#utility.yul\":4183:4191   */\n  dup5\n    /* \"#utility.yul\":4179:4198   */\n  and\n    /* \"#utility.yul\":4173:4177   */\n  dup4\n    /* \"#utility.yul\":4152:4199   */\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4143:4199   */\n  swap4\n    /* \"#utility.yul\":4065:4205   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4210:4378   */\ntag_15:\n    /* \"#utility.yul\":4283:4292   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4314:4323   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4331:4346   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4325:4347   */\n  dup5\n  eq\n    /* \"#utility.yul\":4311:4348   */\n  or\n    /* \"#utility.yul\":4301:4372   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4352:4370   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":4591:4716   */\ntag_28:\n    /* \"#utility.yul\":4656:4665   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4677:4687   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4674:4710   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4690:4708   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":5071:5248   */\ntag_45:\n    /* \"day6/MyERC20.sol\":143:822  contract MTK is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"day6/MyERC20.sol\":143:822  contract MTK is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1a825b75\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_16\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"day6/MyERC20.sol\":470:819  function transferWithCallback(address recipient,uint256 amount) external returns(bool){... */\n    tag_6:\n      tag_18\n      tag_29\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_18\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_16\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_24\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_14\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_18\n      tag_50\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_24\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_61\n      swap1\n      tag_60\n      jump\t// in\n    tag_61:\n      dup1\n      iszero\n      tag_62\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_63\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_62)\n    tag_63:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_64:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_64\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_65:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"day6/MyERC20.sol\":470:819  function transferWithCallback(address recipient,uint256 amount) external returns(bool){... */\n    tag_30:\n        /* \"day6/MyERC20.sol\":551:555  bool */\n      0x00\n        /* \"day6/MyERC20.sol\":405:426  extcodesize(_address) */\n      dup3\n      extcodesize\n        /* \"day6/MyERC20.sol\":447:455  size > 0 */\n      0xffffffff\n      and\n      iszero\n        /* \"day6/MyERC20.sol\":577:739  if(_isContract(recipient)){... */\n      tag_74\n      jumpi\n        /* \"day6/MyERC20.sol\":628:680  TokenBank(recipient).tokenReceive(msg.sender,amount) */\n      mload(0x40)\n      shl(0xe1, 0x281e1587)\n      dup2\n      mstore\n        /* \"day6/MyERC20.sol\":662:672  msg.sender */\n      caller\n        /* \"day6/MyERC20.sol\":628:680  TokenBank(recipient).tokenReceive(msg.sender,amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2915:2966   */\n      mstore\n        /* \"#utility.yul\":2982:3000   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2975:3009   */\n      dup4\n      swap1\n      mstore\n        /* \"day6/MyERC20.sol\":618:625  bool rv */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"day6/MyERC20.sol\":628:661  TokenBank(recipient).tokenReceive */\n      dup6\n      and\n      swap1\n      0x503c2b0e\n      swap1\n        /* \"#utility.yul\":2888:2906   */\n      0x44\n      add\n        /* \"day6/MyERC20.sol\":628:680  TokenBank(recipient).tokenReceive(msg.sender,amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"day6/MyERC20.sol\":618:680  bool rv = TokenBank(recipient).tokenReceive(msg.sender,amount) */\n      swap1\n      pop\n        /* \"day6/MyERC20.sol\":703:705  rv */\n      dup1\n        /* \"day6/MyERC20.sol\":695:727  require(rv, \"No tokensReceived\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3504:3506   */\n      0x20\n        /* \"day6/MyERC20.sol\":695:727  require(rv, \"No tokensReceived\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3486:3507   */\n      mstore\n        /* \"#utility.yul\":3543:3545   */\n      0x11\n        /* \"#utility.yul\":3523:3541   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3516:3546   */\n      mstore\n      shl(0x7a, 0x139bc81d1bdad95b9cd49958d95a5d9959)\n        /* \"#utility.yul\":3562:3580   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3555:3602   */\n      mstore\n        /* \"#utility.yul\":3619:3637   */\n      0x64\n      add\n        /* \"day6/MyERC20.sol\":695:727  require(rv, \"No tokensReceived\") */\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"day6/MyERC20.sol\":603:739  {... */\n      pop\n        /* \"day6/MyERC20.sol\":577:739  if(_isContract(recipient)){... */\n    tag_74:\n        /* \"day6/MyERC20.sol\":749:789  _transfer(msg.sender, recipient, amount) */\n      tag_84\n        /* \"day6/MyERC20.sol\":759:769  msg.sender */\n      caller\n        /* \"day6/MyERC20.sol\":771:780  recipient */\n      dup5\n        /* \"day6/MyERC20.sol\":782:788  amount */\n      dup5\n        /* \"day6/MyERC20.sol\":749:758  _transfer */\n      tag_85\n        /* \"day6/MyERC20.sol\":749:789  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"day6/MyERC20.sol\":807:811  true */\n      0x01\n        /* \"day6/MyERC20.sol\":470:819  function transferWithCallback(address recipient,uint256 amount) external returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_90:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3794:3845   */\n      mstore\n        /* \"#utility.yul\":3767:3785   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_82\n        /* \"#utility.yul\":3648:3851   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3794:3845   */\n      mstore\n        /* \"#utility.yul\":3767:3785   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_82\n        /* \"#utility.yul\":3648:3851   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4076:4108   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4058:4109   */\n      mstore\n        /* \"#utility.yul\":4125:4143   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4118:4152   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4168:4186   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4161:4195   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4031:4049   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_82\n        /* \"#utility.yul\":3856:4201   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3794:3845   */\n      mstore\n        /* \"#utility.yul\":3767:3785   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_82\n        /* \"#utility.yul\":3648:3851   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3794:3845   */\n      mstore\n        /* \"#utility.yul\":3767:3785   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_82\n        /* \"#utility.yul\":3648:3851   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_129\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_134\n      swap1\n      pop\n      jump\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4076:4108   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4058:4109   */\n      mstore\n        /* \"#utility.yul\":4125:4143   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4118:4152   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4168:4186   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4161:4195   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4031:4049   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_82\n        /* \"#utility.yul\":3856:4201   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_138)\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_139\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_17:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_20:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_34:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_43:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_55:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_60:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3020:3297   */\n    tag_80:\n        /* \"#utility.yul\":3087:3093   */\n      0x00\n        /* \"#utility.yul\":3140:3142   */\n      0x20\n        /* \"#utility.yul\":3128:3137   */\n      dup3\n        /* \"#utility.yul\":3119:3126   */\n      dup5\n        /* \"#utility.yul\":3115:3138   */\n      sub\n        /* \"#utility.yul\":3111:3143   */\n      slt\n        /* \"#utility.yul\":3108:3160   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":3156:3157   */\n      0x00\n        /* \"#utility.yul\":3153:3154   */\n      dup1\n        /* \"#utility.yul\":3146:3158   */\n      revert\n        /* \"#utility.yul\":3108:3160   */\n    tag_170:\n        /* \"#utility.yul\":3188:3197   */\n      dup2\n        /* \"#utility.yul\":3182:3198   */\n      mload\n        /* \"#utility.yul\":3241:3246   */\n      dup1\n        /* \"#utility.yul\":3234:3247   */\n      iszero\n        /* \"#utility.yul\":3227:3248   */\n      iszero\n        /* \"#utility.yul\":3220:3225   */\n      dup2\n        /* \"#utility.yul\":3217:3249   */\n      eq\n        /* \"#utility.yul\":3207:3267   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":3263:3264   */\n      0x00\n        /* \"#utility.yul\":3260:3261   */\n      dup1\n        /* \"#utility.yul\":3253:3265   */\n      revert\n        /* \"#utility.yul\":4206:4428   */\n    tag_133:\n        /* \"#utility.yul\":4271:4280   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4292:4302   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4289:4422   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":4344:4354   */\n      0x4e487b71\n        /* \"#utility.yul\":4339:4342   */\n      0xe0\n        /* \"#utility.yul\":4335:4355   */\n      shl\n        /* \"#utility.yul\":4332:4333   */\n      0x00\n        /* \"#utility.yul\":4325:4356   */\n      mstore\n        /* \"#utility.yul\":4379:4383   */\n      0x11\n        /* \"#utility.yul\":4376:4377   */\n      0x04\n        /* \"#utility.yul\":4369:4384   */\n      mstore\n        /* \"#utility.yul\":4407:4411   */\n      0x24\n        /* \"#utility.yul\":4404:4405   */\n      0x00\n        /* \"#utility.yul\":4397:4412   */\n      revert\n\n    auxdata: 0xa2646970667358221220bd8f657d9c9d568ee364129257d5245cde2c552f5cfc2f8a076cb08de8bfaab364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 179,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 243,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 174,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5250:9",
										"nodeType": "YulBlock",
										"src": "0:5250:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:9",
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:9",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:9",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:9",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nativeSrc": "66:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nativeSrc": "56:31:9",
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nativeSrc": "56:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:9",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:9",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nativeSrc": "96:15:9",
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nativeSrc": "96:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:9",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:9",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nativeSrc": "120:15:9",
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nativeSrc": "120:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nativeSrc": "201:325:9",
													"nodeType": "YulBlock",
													"src": "201:325:9",
													"statements": [
														{
															"nativeSrc": "211:22:9",
															"nodeType": "YulAssignment",
															"src": "211:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:9",
																		"nodeType": "YulLiteral",
																		"src": "225:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:9"
																},
																"nativeSrc": "221:12:9",
																"nodeType": "YulFunctionCall",
																"src": "221:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:9"
																}
															]
														},
														{
															"nativeSrc": "242:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:9",
																		"nodeType": "YulLiteral",
																		"src": "278:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:9"
																},
																"nativeSrc": "268:12:9",
																"nodeType": "YulFunctionCall",
																"src": "268:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:9",
																	"nodeType": "YulTypedName",
																	"src": "246:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:9",
																"nodeType": "YulBlock",
																"src": "319:31:9",
																"statements": [
																	{
																		"nativeSrc": "321:27:9",
																		"nodeType": "YulAssignment",
																		"src": "321:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:9",
																					"nodeType": "YulLiteral",
																					"src": "343:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:9"
																			},
																			"nativeSrc": "331:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:9"
																},
																"nativeSrc": "292:26:9",
																"nodeType": "YulFunctionCall",
																"src": "292:26:9"
															},
															"nativeSrc": "289:61:9",
															"nodeType": "YulIf",
															"src": "289:61:9"
														},
														{
															"body": {
																"nativeSrc": "409:111:9",
																"nodeType": "YulBlock",
																"src": "409:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:9",
																					"nodeType": "YulLiteral",
																					"src": "430:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:9",
																							"nodeType": "YulLiteral",
																							"src": "437:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:9",
																							"nodeType": "YulLiteral",
																							"src": "442:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:9"
																					},
																					"nativeSrc": "433:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:9"
																			},
																			"nativeSrc": "423:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:9"
																		},
																		"nativeSrc": "423:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:9",
																					"nodeType": "YulLiteral",
																					"src": "474:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:9",
																					"nodeType": "YulLiteral",
																					"src": "477:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:9"
																			},
																			"nativeSrc": "467:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:9"
																		},
																		"nativeSrc": "467:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:9",
																					"nodeType": "YulLiteral",
																					"src": "502:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:9",
																					"nodeType": "YulLiteral",
																					"src": "505:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:9"
																			},
																			"nativeSrc": "495:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:9"
																		},
																		"nativeSrc": "495:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:9",
																				"nodeType": "YulLiteral",
																				"src": "396:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:9"
																		},
																		"nativeSrc": "385:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:9"
																},
																"nativeSrc": "362:38:9",
																"nodeType": "YulFunctionCall",
																"src": "362:38:9"
															},
															"nativeSrc": "359:161:9",
															"nodeType": "YulIf",
															"src": "359:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:9",
														"nodeType": "YulTypedName",
														"src": "181:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:9",
														"nodeType": "YulTypedName",
														"src": "190:6:9",
														"type": ""
													}
												],
												"src": "146:380:9"
											},
											{
												"body": {
													"nativeSrc": "587:65:9",
													"nodeType": "YulBlock",
													"src": "587:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:9",
																		"nodeType": "YulLiteral",
																		"src": "604:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:9"
																},
																"nativeSrc": "597:14:9",
																"nodeType": "YulFunctionCall",
																"src": "597:14:9"
															},
															"nativeSrc": "597:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:9"
														},
														{
															"nativeSrc": "620:26:9",
															"nodeType": "YulAssignment",
															"src": "620:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:9",
																		"nodeType": "YulLiteral",
																		"src": "638:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:9",
																		"nodeType": "YulLiteral",
																		"src": "641:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:9"
																},
																"nativeSrc": "628:18:9",
																"nodeType": "YulFunctionCall",
																"src": "628:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:9",
														"nodeType": "YulTypedName",
														"src": "570:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:9",
														"nodeType": "YulTypedName",
														"src": "578:4:9",
														"type": ""
													}
												],
												"src": "531:121:9"
											},
											{
												"body": {
													"nativeSrc": "738:437:9",
													"nodeType": "YulBlock",
													"src": "738:437:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:9",
																"nodeType": "YulBlock",
																"src": "771:398:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:9",
																					"nodeType": "YulLiteral",
																					"src": "792:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:9"
																			},
																			"nativeSrc": "785:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:9"
																		},
																		"nativeSrc": "785:16:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:9"
																	},
																	{
																		"nativeSrc": "814:30:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:9",
																					"nodeType": "YulLiteral",
																					"src": "836:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:9",
																					"nodeType": "YulLiteral",
																					"src": "839:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:9"
																			},
																			"nativeSrc": "826:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:9",
																				"nodeType": "YulTypedName",
																				"src": "818:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:9",
																							"nodeType": "YulLiteral",
																							"src": "890:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:9",
																									"nodeType": "YulLiteral",
																									"src": "909:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:9"
																							},
																							"nativeSrc": "893:19:9",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:9"
																					},
																					"nativeSrc": "886:27:9",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:9"
																			},
																			"nativeSrc": "876:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:9",
																				"nodeType": "YulTypedName",
																				"src": "861:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:9",
																			"nodeType": "YulBlock",
																			"src": "951:23:9",
																			"statements": [
																				{
																					"nativeSrc": "953:19:9",
																					"nodeType": "YulAssignment",
																					"src": "953:19:9",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:9",
																					"nodeType": "YulLiteral",
																					"src": "945:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:9"
																			},
																			"nativeSrc": "930:20:9",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:9"
																		},
																		"nativeSrc": "927:47:9",
																		"nodeType": "YulIf",
																		"src": "927:47:9"
																	},
																	{
																		"nativeSrc": "987:41:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:9",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:9",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:9"
																							},
																							"nativeSrc": "1014:12:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:9"
																					},
																					"nativeSrc": "1007:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:9"
																			},
																			"nativeSrc": "997:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:9"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:9",
																				"nodeType": "YulTypedName",
																				"src": "991:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:9",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:9",
																			"nodeType": "YulBlock",
																			"src": "1139:20:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:9"
																						},
																						"nativeSrc": "1141:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:9"
																					},
																					"nativeSrc": "1141:16:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:9"
																			},
																			"nativeSrc": "1086:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:9"
																		},
																		"nativeSrc": "1078:81:9",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:9",
																			"nodeType": "YulBlock",
																			"src": "1100:26:9",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:9",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:9"
																						},
																						"nativeSrc": "1111:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:9",
																			"nodeType": "YulBlock",
																			"src": "1082:3:9",
																			"statements": []
																		},
																		"src": "1078:81:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:9",
																		"nodeType": "YulLiteral",
																		"src": "759:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:9"
																},
																"nativeSrc": "751:11:9",
																"nodeType": "YulFunctionCall",
																"src": "751:11:9"
															},
															"nativeSrc": "748:421:9",
															"nodeType": "YulIf",
															"src": "748:421:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:9",
														"nodeType": "YulTypedName",
														"src": "710:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:9",
														"nodeType": "YulTypedName",
														"src": "717:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:9",
														"nodeType": "YulTypedName",
														"src": "722:10:9",
														"type": ""
													}
												],
												"src": "657:518:9"
											},
											{
												"body": {
													"nativeSrc": "1265:81:9",
													"nodeType": "YulBlock",
													"src": "1265:81:9",
													"statements": [
														{
															"nativeSrc": "1275:65:9",
															"nodeType": "YulAssignment",
															"src": "1275:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:9",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:9"
																								},
																								"nativeSrc": "1304:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:9",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:9"
																								},
																								"nativeSrc": "1317:6:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:9"
																						},
																						"nativeSrc": "1300:24:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:9"
																				},
																				"nativeSrc": "1296:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:9"
																		},
																		"nativeSrc": "1286:40:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:9"
																		},
																		"nativeSrc": "1328:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:9"
																},
																"nativeSrc": "1283:57:9",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:9",
														"nodeType": "YulTypedName",
														"src": "1242:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:9",
														"nodeType": "YulTypedName",
														"src": "1248:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:9",
														"nodeType": "YulTypedName",
														"src": "1256:4:9",
														"type": ""
													}
												],
												"src": "1180:166:9"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:9",
													"nodeType": "YulBlock",
													"src": "1447:1249:9",
													"statements": [
														{
															"nativeSrc": "1457:24:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:9"
																},
																"nativeSrc": "1471:10:9",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:9",
																"nodeType": "YulBlock",
																"src": "1524:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:9"
																			},
																			"nativeSrc": "1526:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:9"
																		},
																		"nativeSrc": "1526:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:9"
																				},
																				"nativeSrc": "1508:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:9"
																		},
																		"nativeSrc": "1504:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:9"
																},
																"nativeSrc": "1493:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:9"
															},
															"nativeSrc": "1490:56:9",
															"nodeType": "YulIf",
															"src": "1490:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:9"
																				},
																				"nativeSrc": "1631:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:9",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:9"
																		},
																		"nativeSrc": "1605:38:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:9"
																},
																"nativeSrc": "1555:97:9",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:9"
															},
															"nativeSrc": "1555:97:9",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:9"
														},
														{
															"nativeSrc": "1661:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:9",
																"nodeType": "YulLiteral",
																"src": "1678:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:9",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:9",
																"nodeType": "YulLiteral",
																"src": "1707:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:9",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:9",
															"nodeType": "YulAssignment",
															"src": "1720:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:9",
																"nodeType": "YulLiteral",
																"src": "1733:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:9",
																		"nodeType": "YulBlock",
																		"src": "1783:656:9",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:9",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:9"
																							},
																							"nativeSrc": "1824:7:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:9"
																					},
																					"nativeSrc": "1812:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:9",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:9",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:9"
																					},
																					"nativeSrc": "1859:35:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:9",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:9",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:9",
																					"nodeType": "YulBlock",
																					"src": "1994:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:9"
																												},
																												"nativeSrc": "2033:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:9"
																										},
																										"nativeSrc": "2027:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:9"
																								},
																								"nativeSrc": "2012:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:9"
																							},
																							"nativeSrc": "2012:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:9"
																						},
																						{
																							"nativeSrc": "2071:24:9",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:9"
																								},
																								"nativeSrc": "2081:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:9",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:9",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:9"
																								},
																								"nativeSrc": "2125:27:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:9"
																					},
																					"nativeSrc": "1938:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:9"
																				},
																				"nativeSrc": "1930:236:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:9",
																					"nodeType": "YulBlock",
																					"src": "1953:28:9",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:9",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:9",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:9"
																								},
																								"nativeSrc": "1960:19:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:9",
																					"nodeType": "YulBlock",
																					"src": "1934:3:9",
																					"statements": []
																				},
																				"src": "1930:236:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:9",
																					"nodeType": "YulBlock",
																					"src": "2214:166:9",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:9"
																										},
																										"nativeSrc": "2255:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:9"
																								},
																								"nativeSrc": "2249:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:9",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:9",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:9",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:9",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:9"
																																		},
																																		"nativeSrc": "2334:14:9",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:9",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:9"
																																},
																																"nativeSrc": "2330:24:9",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:9",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:9"
																																},
																																"nativeSrc": "2356:6:9",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:9",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:9"
																														},
																														"nativeSrc": "2326:37:9",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:9"
																												},
																												"nativeSrc": "2322:42:9",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:9"
																										},
																										"nativeSrc": "2307:58:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:9"
																								},
																								"nativeSrc": "2292:74:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:9"
																							},
																							"nativeSrc": "2292:74:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:9"
																					},
																					"nativeSrc": "2182:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:9"
																				},
																				"nativeSrc": "2179:201:9",
																				"nodeType": "YulIf",
																				"src": "2179:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:9",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:9"
																									},
																									"nativeSrc": "2410:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:9",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:9"
																							},
																							"nativeSrc": "2406:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:9"
																					},
																					"nativeSrc": "2393:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:9"
																				},
																				"nativeSrc": "2393:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:9"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:9",
																	"nodeType": "YulCase",
																	"src": "1776:663:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:9",
																		"nodeType": "YulBlock",
																		"src": "2456:234:9",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:9",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:9",
																					"nodeType": "YulBlock",
																					"src": "2519:67:9",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:9",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:9"
																										},
																										"nativeSrc": "2552:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:9"
																								},
																								"nativeSrc": "2546:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:9"
																				},
																				"nativeSrc": "2497:89:9",
																				"nodeType": "YulIf",
																				"src": "2497:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:9"
																							},
																							"nativeSrc": "2612:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:9"
																					},
																					"nativeSrc": "2599:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:9"
																				},
																				"nativeSrc": "2599:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:9"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:9",
																	"nodeType": "YulCase",
																	"src": "2448:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:9"
																},
																"nativeSrc": "1753:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:9"
															},
															"nativeSrc": "1746:944:9",
															"nodeType": "YulSwitch",
															"src": "1746:944:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:9",
														"nodeType": "YulTypedName",
														"src": "1432:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:9",
														"nodeType": "YulTypedName",
														"src": "1438:3:9",
														"type": ""
													}
												],
												"src": "1351:1345:9"
											},
											{
												"body": {
													"nativeSrc": "2733:95:9",
													"nodeType": "YulBlock",
													"src": "2733:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2750:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2750:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2757:3:9",
																				"nodeType": "YulLiteral",
																				"src": "2757:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2762:10:9",
																				"nodeType": "YulLiteral",
																				"src": "2762:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2753:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:9"
																		},
																		"nativeSrc": "2753:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2753:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2743:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:9"
																},
																"nativeSrc": "2743:31:9",
																"nodeType": "YulFunctionCall",
																"src": "2743:31:9"
															},
															"nativeSrc": "2743:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "2743:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2790:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2793:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2793:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2783:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:9"
																},
																"nativeSrc": "2783:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2783:15:9"
															},
															"nativeSrc": "2783:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2783:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2814:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2814:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2817:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2817:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2807:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:9"
																},
																"nativeSrc": "2807:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2807:15:9"
															},
															"nativeSrc": "2807:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2807:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2701:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2701:127:9"
											},
											{
												"body": {
													"nativeSrc": "2897:352:9",
													"nodeType": "YulBlock",
													"src": "2897:352:9",
													"statements": [
														{
															"nativeSrc": "2907:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2907:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2922:1:9",
																"nodeType": "YulLiteral",
																"src": "2922:1:9",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "2911:7:9",
																	"nodeType": "YulTypedName",
																	"src": "2911:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2932:10:9",
															"nodeType": "YulAssignment",
															"src": "2932:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2941:1:9",
																"nodeType": "YulLiteral",
																"src": "2941:1:9",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2932:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2932:5:9"
																}
															]
														},
														{
															"nativeSrc": "2951:13:9",
															"nodeType": "YulAssignment",
															"src": "2951:13:9",
															"value": {
																"name": "_base",
																"nativeSrc": "2959:5:9",
																"nodeType": "YulIdentifier",
																"src": "2959:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2951:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2951:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3015:228:9",
																"nodeType": "YulBlock",
																"src": "3015:228:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3060:22:9",
																			"nodeType": "YulBlock",
																			"src": "3060:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3062:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "3062:16:9"
																						},
																						"nativeSrc": "3062:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3062:18:9"
																					},
																					"nativeSrc": "3062:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "3062:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3035:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "3035:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3049:1:9",
																									"nodeType": "YulLiteral",
																									"src": "3049:1:9",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3045:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "3045:3:9"
																							},
																							"nativeSrc": "3045:6:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3045:6:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3053:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3053:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3041:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3041:3:9"
																					},
																					"nativeSrc": "3041:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3041:17:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3032:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "3032:2:9"
																			},
																			"nativeSrc": "3032:27:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3032:27:9"
																		},
																		"nativeSrc": "3029:53:9",
																		"nodeType": "YulIf",
																		"src": "3029:53:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "3121:29:9",
																			"nodeType": "YulBlock",
																			"src": "3121:29:9",
																			"statements": [
																				{
																					"nativeSrc": "3123:25:9",
																					"nodeType": "YulAssignment",
																					"src": "3123:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3136:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "3136:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3143:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "3143:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3132:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3132:3:9"
																						},
																						"nativeSrc": "3132:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3132:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3123:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "3123:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3102:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "3102:8:9"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3112:7:9",
																					"nodeType": "YulIdentifier",
																					"src": "3112:7:9"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3098:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3098:3:9"
																			},
																			"nativeSrc": "3098:22:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3098:22:9"
																		},
																		"nativeSrc": "3095:55:9",
																		"nodeType": "YulIf",
																		"src": "3095:55:9"
																	},
																	{
																		"nativeSrc": "3163:23:9",
																		"nodeType": "YulAssignment",
																		"src": "3163:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3175:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "3175:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3181:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "3181:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3171:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3171:3:9"
																			},
																			"nativeSrc": "3171:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3171:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3163:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3163:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3199:34:9",
																		"nodeType": "YulAssignment",
																		"src": "3199:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3215:7:9",
																					"nodeType": "YulIdentifier",
																					"src": "3215:7:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3224:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "3224:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3211:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:9"
																			},
																			"nativeSrc": "3211:22:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3211:22:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3199:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "3199:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2984:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2984:8:9"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "2994:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2994:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2981:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2981:2:9"
																},
																"nativeSrc": "2981:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2981:21:9"
															},
															"nativeSrc": "2973:270:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3003:3:9",
																"nodeType": "YulBlock",
																"src": "3003:3:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2977:3:9",
																"nodeType": "YulBlock",
																"src": "2977:3:9",
																"statements": []
															},
															"src": "2973:270:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2833:416:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "2861:5:9",
														"nodeType": "YulTypedName",
														"src": "2861:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2868:8:9",
														"nodeType": "YulTypedName",
														"src": "2868:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2881:5:9",
														"nodeType": "YulTypedName",
														"src": "2881:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2888:4:9",
														"nodeType": "YulTypedName",
														"src": "2888:4:9",
														"type": ""
													}
												],
												"src": "2833:416:9"
											},
											{
												"body": {
													"nativeSrc": "3313:747:9",
													"nodeType": "YulBlock",
													"src": "3313:747:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3351:52:9",
																"nodeType": "YulBlock",
																"src": "3351:52:9",
																"statements": [
																	{
																		"nativeSrc": "3365:10:9",
																		"nodeType": "YulAssignment",
																		"src": "3365:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3374:1:9",
																			"nodeType": "YulLiteral",
																			"src": "3374:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3365:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3365:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3388:5:9",
																		"nodeType": "YulLeave",
																		"src": "3388:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3333:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "3333:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3326:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:9"
																},
																"nativeSrc": "3326:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3326:16:9"
															},
															"nativeSrc": "3323:80:9",
															"nodeType": "YulIf",
															"src": "3323:80:9"
														},
														{
															"body": {
																"nativeSrc": "3436:52:9",
																"nodeType": "YulBlock",
																"src": "3436:52:9",
																"statements": [
																	{
																		"nativeSrc": "3450:10:9",
																		"nodeType": "YulAssignment",
																		"src": "3450:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3459:1:9",
																			"nodeType": "YulLiteral",
																			"src": "3459:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3450:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3450:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3473:5:9",
																		"nodeType": "YulLeave",
																		"src": "3473:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3422:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3422:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3415:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:9"
																},
																"nativeSrc": "3415:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3415:12:9"
															},
															"nativeSrc": "3412:76:9",
															"nodeType": "YulIf",
															"src": "3412:76:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3524:52:9",
																		"nodeType": "YulBlock",
																		"src": "3524:52:9",
																		"statements": [
																			{
																				"nativeSrc": "3538:10:9",
																				"nodeType": "YulAssignment",
																				"src": "3538:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3547:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3547:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3538:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3538:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3561:5:9",
																				"nodeType": "YulLeave",
																				"src": "3561:5:9"
																			}
																		]
																	},
																	"nativeSrc": "3517:59:9",
																	"nodeType": "YulCase",
																	"src": "3517:59:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3522:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3592:123:9",
																		"nodeType": "YulBlock",
																		"src": "3592:123:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3627:22:9",
																					"nodeType": "YulBlock",
																					"src": "3627:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3629:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "3629:16:9"
																								},
																								"nativeSrc": "3629:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3629:18:9"
																							},
																							"nativeSrc": "3629:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "3629:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3612:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "3612:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3622:3:9",
																							"nodeType": "YulLiteral",
																							"src": "3622:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3609:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "3609:2:9"
																					},
																					"nativeSrc": "3609:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3609:17:9"
																				},
																				"nativeSrc": "3606:43:9",
																				"nodeType": "YulIf",
																				"src": "3606:43:9"
																			},
																			{
																				"nativeSrc": "3662:25:9",
																				"nodeType": "YulAssignment",
																				"src": "3662:25:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3675:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "3675:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3685:1:9",
																							"nodeType": "YulLiteral",
																							"src": "3685:1:9",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3671:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3671:3:9"
																					},
																					"nativeSrc": "3671:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3671:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3662:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3662:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3700:5:9",
																				"nodeType": "YulLeave",
																				"src": "3700:5:9"
																			}
																		]
																	},
																	"nativeSrc": "3585:130:9",
																	"nodeType": "YulCase",
																	"src": "3585:130:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3590:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3590:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3504:4:9",
																"nodeType": "YulIdentifier",
																"src": "3504:4:9"
															},
															"nativeSrc": "3497:218:9",
															"nodeType": "YulSwitch",
															"src": "3497:218:9"
														},
														{
															"body": {
																"nativeSrc": "3813:70:9",
																"nodeType": "YulBlock",
																"src": "3813:70:9",
																"statements": [
																	{
																		"nativeSrc": "3827:28:9",
																		"nodeType": "YulAssignment",
																		"src": "3827:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3840:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "3840:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3846:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "3846:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3836:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3836:3:9"
																			},
																			"nativeSrc": "3836:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3836:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3827:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3827:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3868:5:9",
																		"nodeType": "YulLeave",
																		"src": "3868:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3737:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3737:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3743:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3743:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3734:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3734:2:9"
																				},
																				"nativeSrc": "3734:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3734:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3751:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "3751:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3761:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3761:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3748:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3748:2:9"
																				},
																				"nativeSrc": "3748:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3748:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3730:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3730:3:9"
																		},
																		"nativeSrc": "3730:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3730:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3774:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3774:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3780:3:9",
																						"nodeType": "YulLiteral",
																						"src": "3780:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3771:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3771:2:9"
																				},
																				"nativeSrc": "3771:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3771:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3789:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "3789:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3799:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3799:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3786:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3786:2:9"
																				},
																				"nativeSrc": "3786:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3786:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3767:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:9"
																		},
																		"nativeSrc": "3767:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3727:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3727:2:9"
																},
																"nativeSrc": "3727:77:9",
																"nodeType": "YulFunctionCall",
																"src": "3727:77:9"
															},
															"nativeSrc": "3724:159:9",
															"nodeType": "YulIf",
															"src": "3724:159:9"
														},
														{
															"nativeSrc": "3892:57:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3892:57:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3934:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3934:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3940:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "3940:8:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3915:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3915:18:9"
																},
																"nativeSrc": "3915:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3915:34:9"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3896:7:9",
																	"nodeType": "YulTypedName",
																	"src": "3896:7:9",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "3905:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3905:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3994:22:9",
																"nodeType": "YulBlock",
																"src": "3994:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3996:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3996:16:9"
																			},
																			"nativeSrc": "3996:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3996:18:9"
																		},
																		"nativeSrc": "3996:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3996:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3964:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3964:7:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3981:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3981:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3977:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3977:3:9"
																				},
																				"nativeSrc": "3977:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3977:6:9"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "3985:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3985:6:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3973:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3973:3:9"
																		},
																		"nativeSrc": "3973:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3973:19:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3961:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3961:2:9"
																},
																"nativeSrc": "3961:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3961:32:9"
															},
															"nativeSrc": "3958:58:9",
															"nodeType": "YulIf",
															"src": "3958:58:9"
														},
														{
															"nativeSrc": "4025:29:9",
															"nodeType": "YulAssignment",
															"src": "4025:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4038:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "4038:7:9"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4047:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4047:6:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4034:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4034:3:9"
																},
																"nativeSrc": "4034:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4034:20:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4025:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3254:806:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3284:4:9",
														"nodeType": "YulTypedName",
														"src": "3284:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3290:8:9",
														"nodeType": "YulTypedName",
														"src": "3290:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3303:5:9",
														"nodeType": "YulTypedName",
														"src": "3303:5:9",
														"type": ""
													}
												],
												"src": "3254:806:9"
											},
											{
												"body": {
													"nativeSrc": "4133:72:9",
													"nodeType": "YulBlock",
													"src": "4133:72:9",
													"statements": [
														{
															"nativeSrc": "4143:56:9",
															"nodeType": "YulAssignment",
															"src": "4143:56:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4173:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4173:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4183:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "4183:8:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4193:4:9",
																				"nodeType": "YulLiteral",
																				"src": "4193:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4179:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:9"
																		},
																		"nativeSrc": "4179:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4179:19:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4152:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "4152:20:9"
																},
																"nativeSrc": "4152:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4152:47:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4143:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4143:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4065:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4104:4:9",
														"nodeType": "YulTypedName",
														"src": "4104:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4110:8:9",
														"nodeType": "YulTypedName",
														"src": "4110:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4123:5:9",
														"nodeType": "YulTypedName",
														"src": "4123:5:9",
														"type": ""
													}
												],
												"src": "4065:140:9"
											},
											{
												"body": {
													"nativeSrc": "4262:116:9",
													"nodeType": "YulBlock",
													"src": "4262:116:9",
													"statements": [
														{
															"nativeSrc": "4272:20:9",
															"nodeType": "YulAssignment",
															"src": "4272:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4287:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4287:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4290:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4290:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4283:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:9"
																},
																"nativeSrc": "4283:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4283:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4272:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4272:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4350:22:9",
																"nodeType": "YulBlock",
																"src": "4350:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4352:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4352:16:9"
																			},
																			"nativeSrc": "4352:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4352:18:9"
																		},
																		"nativeSrc": "4352:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4352:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4321:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "4321:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4314:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4314:6:9"
																				},
																				"nativeSrc": "4314:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4314:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4328:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "4328:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4335:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "4335:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4344:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "4344:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4331:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4331:3:9"
																						},
																						"nativeSrc": "4331:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4331:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4325:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "4325:2:9"
																				},
																				"nativeSrc": "4325:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4325:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4311:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4311:2:9"
																		},
																		"nativeSrc": "4311:37:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4304:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:9"
																},
																"nativeSrc": "4304:45:9",
																"nodeType": "YulFunctionCall",
																"src": "4304:45:9"
															},
															"nativeSrc": "4301:71:9",
															"nodeType": "YulIf",
															"src": "4301:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4210:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4241:1:9",
														"nodeType": "YulTypedName",
														"src": "4241:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4244:1:9",
														"nodeType": "YulTypedName",
														"src": "4244:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4250:7:9",
														"nodeType": "YulTypedName",
														"src": "4250:7:9",
														"type": ""
													}
												],
												"src": "4210:168:9"
											},
											{
												"body": {
													"nativeSrc": "4484:102:9",
													"nodeType": "YulBlock",
													"src": "4484:102:9",
													"statements": [
														{
															"nativeSrc": "4494:26:9",
															"nodeType": "YulAssignment",
															"src": "4494:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4506:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4506:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4517:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4502:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4502:3:9"
																},
																"nativeSrc": "4502:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4502:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4494:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4494:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4536:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4551:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4567:3:9",
																								"nodeType": "YulLiteral",
																								"src": "4567:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4572:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4572:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4563:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4563:3:9"
																						},
																						"nativeSrc": "4563:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4563:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4576:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4576:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4559:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4559:3:9"
																				},
																				"nativeSrc": "4559:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4559:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4547:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:9"
																		},
																		"nativeSrc": "4547:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4547:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4529:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:9"
																},
																"nativeSrc": "4529:51:9",
																"nodeType": "YulFunctionCall",
																"src": "4529:51:9"
															},
															"nativeSrc": "4529:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "4529:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4383:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4453:9:9",
														"nodeType": "YulTypedName",
														"src": "4453:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4464:6:9",
														"nodeType": "YulTypedName",
														"src": "4464:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4475:4:9",
														"nodeType": "YulTypedName",
														"src": "4475:4:9",
														"type": ""
													}
												],
												"src": "4383:203:9"
											},
											{
												"body": {
													"nativeSrc": "4639:77:9",
													"nodeType": "YulBlock",
													"src": "4639:77:9",
													"statements": [
														{
															"nativeSrc": "4649:16:9",
															"nodeType": "YulAssignment",
															"src": "4649:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4660:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4660:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4663:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4663:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4656:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4656:3:9"
																},
																"nativeSrc": "4656:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4656:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4649:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4649:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4688:22:9",
																"nodeType": "YulBlock",
																"src": "4688:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4690:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4690:16:9"
																			},
																			"nativeSrc": "4690:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4690:18:9"
																		},
																		"nativeSrc": "4690:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4690:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4680:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4680:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4683:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4683:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4677:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4677:2:9"
																},
																"nativeSrc": "4677:10:9",
																"nodeType": "YulFunctionCall",
																"src": "4677:10:9"
															},
															"nativeSrc": "4674:36:9",
															"nodeType": "YulIf",
															"src": "4674:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4591:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4622:1:9",
														"nodeType": "YulTypedName",
														"src": "4622:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4625:1:9",
														"nodeType": "YulTypedName",
														"src": "4625:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4631:3:9",
														"nodeType": "YulTypedName",
														"src": "4631:3:9",
														"type": ""
													}
												],
												"src": "4591:125:9"
											},
											{
												"body": {
													"nativeSrc": "4878:188:9",
													"nodeType": "YulBlock",
													"src": "4878:188:9",
													"statements": [
														{
															"nativeSrc": "4888:26:9",
															"nodeType": "YulAssignment",
															"src": "4888:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4900:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4900:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4911:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4911:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4896:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:9"
																},
																"nativeSrc": "4896:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4896:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4888:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4888:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4930:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4930:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4945:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4945:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4961:3:9",
																								"nodeType": "YulLiteral",
																								"src": "4961:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4966:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4966:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4957:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4957:3:9"
																						},
																						"nativeSrc": "4957:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4957:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4970:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4970:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4953:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4953:3:9"
																				},
																				"nativeSrc": "4953:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4953:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4941:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4941:3:9"
																		},
																		"nativeSrc": "4941:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4941:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4923:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:9"
																},
																"nativeSrc": "4923:51:9",
																"nodeType": "YulFunctionCall",
																"src": "4923:51:9"
															},
															"nativeSrc": "4923:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "4923:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4994:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4994:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5005:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5005:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4990:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:9"
																		},
																		"nativeSrc": "4990:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4990:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5010:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5010:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4983:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4983:6:9"
																},
																"nativeSrc": "4983:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4983:34:9"
															},
															"nativeSrc": "4983:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4983:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5037:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5037:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5048:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5048:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5033:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5033:3:9"
																		},
																		"nativeSrc": "5033:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5053:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5053:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5026:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:9"
																},
																"nativeSrc": "5026:34:9",
																"nodeType": "YulFunctionCall",
																"src": "5026:34:9"
															},
															"nativeSrc": "5026:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "5026:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4721:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4831:9:9",
														"nodeType": "YulTypedName",
														"src": "4831:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4842:6:9",
														"nodeType": "YulTypedName",
														"src": "4842:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4850:6:9",
														"nodeType": "YulTypedName",
														"src": "4850:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4858:6:9",
														"nodeType": "YulTypedName",
														"src": "4858:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4869:4:9",
														"nodeType": "YulTypedName",
														"src": "4869:4:9",
														"type": ""
													}
												],
												"src": "4721:345:9"
											},
											{
												"body": {
													"nativeSrc": "5172:76:9",
													"nodeType": "YulBlock",
													"src": "5172:76:9",
													"statements": [
														{
															"nativeSrc": "5182:26:9",
															"nodeType": "YulAssignment",
															"src": "5182:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5194:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5205:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5190:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:9"
																},
																"nativeSrc": "5190:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5190:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5182:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5182:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5224:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5224:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5235:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5235:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5217:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:9"
																},
																"nativeSrc": "5217:25:9",
																"nodeType": "YulFunctionCall",
																"src": "5217:25:9"
															},
															"nativeSrc": "5217:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "5217:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5071:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5141:9:9",
														"nodeType": "YulTypedName",
														"src": "5141:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5152:6:9",
														"nodeType": "YulTypedName",
														"src": "5152:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5163:4:9",
														"nodeType": "YulTypedName",
														"src": "5163:4:9",
														"type": ""
													}
												],
												"src": "5071:177:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b81525081600390816200005e9190620002c0565b5060046200006d8282620002c0565b505050620000a83362000085620000ae60201b60201c565b6200009290600a6200049b565b620000a2906305f5e100620004b2565b620000b3565b620004e2565b601290565b6001600160a01b038216620000e25760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b620000ef5f8383620000f3565b5050565b6001600160a01b03831662000121578060025f828254620001159190620004cc565b90915550620001939050565b6001600160a01b0383165f9081526020819052604090205481811015620001755760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000d9565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620001b157600280548290039055620001cf565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021591815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200024b57607f821691505b6020821081036200026a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002bb57805f5260205f20601f840160051c81016020851015620002975750805b601f840160051c820191505b81811015620002b8575f8155600101620002a3565b50505b505050565b81516001600160401b03811115620002dc57620002dc62000222565b620002f481620002ed845462000236565b8462000270565b602080601f8311600181146200032a575f8415620003125750858301515b5f19600386901b1c1916600185901b17855562000384565b5f85815260208120601f198616915b828110156200035a5788860151825594840194600190910190840162000339565b50858210156200037857878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115620003e057815f1904821115620003c457620003c46200038c565b80851615620003d257918102915b93841c9390800290620003a5565b509250929050565b5f82620003f85750600162000495565b816200040657505f62000495565b81600181146200041f57600281146200042a576200044a565b600191505062000495565b60ff8411156200043e576200043e6200038c565b50506001821b62000495565b5060208310610133831016604e8410600b84101617156200046f575081810a62000495565b6200047b8383620003a0565b805f19048211156200049157620004916200038c565b0290505b92915050565b5f620004ab60ff841683620003e8565b9392505050565b80820281158282048414176200049557620004956200038c565b808201808211156200049557620004956200038c565b61080d80620004f05f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063313ce56711610063578063313ce5671461011857806370a082311461012757806395d89b411461014f578063a9059cbb14610157578063dd62ed3e1461016a575f80fd5b806306fdde031461009f578063095ea7b3146100bd57806318160ddd146100e05780631a825b75146100f257806323b872dd14610105575b5f80fd5b6100a76101a2565b6040516100b49190610648565b60405180910390f35b6100d06100cb3660046106af565b610232565b60405190151581526020016100b4565b6002545b6040519081526020016100b4565b6100d06101003660046106af565b61024b565b6100d06101133660046106d7565b610327565b604051601281526020016100b4565b6100e4610135366004610710565b6001600160a01b03165f9081526020819052604090205490565b6100a761034a565b6100d06101653660046106af565b610359565b6100e4610178366004610730565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b190610761565b80601f01602080910402602001604051908101604052809291908181526020018280546101dd90610761565b80156102285780601f106101ff57610100808354040283529160200191610228565b820191905f5260205f20905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b5f3361023f818585610366565b60019150505b92915050565b5f823b63ffffffff16156103135760405163281e158760e11b8152336004820152602481018390525f906001600160a01b0385169063503c2b0e906044016020604051808303815f875af11580156102a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c99190610799565b9050806103115760405162461bcd60e51b8152602060048201526011602482015270139bc81d1bdad95b9cd49958d95a5d9959607a1b60448201526064015b60405180910390fd5b505b61031e338484610378565b50600192915050565b5f336103348582856103d5565b61033f858585610378565b506001949350505050565b6060600480546101b190610761565b5f3361023f818585610378565b6103738383836001610450565b505050565b6001600160a01b0383166103a157604051634b637e8f60e11b81525f6004820152602401610308565b6001600160a01b0382166103ca5760405163ec442f0560e01b81525f6004820152602401610308565b610373838383610522565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461044a578181101561043c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610308565b61044a84848484035f610450565b50505050565b6001600160a01b0384166104795760405163e602df0560e01b81525f6004820152602401610308565b6001600160a01b0383166104a257604051634a1406b160e11b81525f6004820152602401610308565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561044a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161051491815260200190565b60405180910390a350505050565b6001600160a01b03831661054c578060025f82825461054191906107b8565b909155506105bc9050565b6001600160a01b0383165f908152602081905260409020548181101561059e5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610308565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166105d8576002805482900390556105f6565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161063b91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b8181101561067457858101830151858201604001528201610658565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106aa575f80fd5b919050565b5f80604083850312156106c0575f80fd5b6106c983610694565b946020939093013593505050565b5f805f606084860312156106e9575f80fd5b6106f284610694565b925061070060208501610694565b9150604084013590509250925092565b5f60208284031215610720575f80fd5b61072982610694565b9392505050565b5f8060408385031215610741575f80fd5b61074a83610694565b915061075860208401610694565b90509250929050565b600181811c9082168061077557607f821691505b60208210810361079357634e487b7160e01b5f52602260045260245ffd5b50919050565b5f602082840312156107a9575f80fd5b81518015158114610729575f80fd5b8082018082111561024557634e487b7160e01b5f52601160045260245ffdfea2646970667358221220bd8f657d9c9d568ee364129257d5245cde2c552f5cfc2f8a076cb08de8bfaab364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5E SWAP2 SWAP1 PUSH3 0x2C0 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x6D DUP3 DUP3 PUSH3 0x2C0 JUMP JUMPDEST POP POP POP PUSH3 0xA8 CALLER PUSH3 0x85 PUSH3 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x92 SWAP1 PUSH1 0xA PUSH3 0x49B JUMP JUMPDEST PUSH3 0xA2 SWAP1 PUSH4 0x5F5E100 PUSH3 0x4B2 JUMP JUMPDEST PUSH3 0xB3 JUMP JUMPDEST PUSH3 0x4E2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xEF PUSH0 DUP4 DUP4 PUSH3 0xF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x121 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x115 SWAP2 SWAP1 PUSH3 0x4CC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x193 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x175 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1B1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x1CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x215 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x24B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x26A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2BB JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x297 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2B8 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2A3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2DC JUMPI PUSH3 0x2DC PUSH3 0x222 JUMP JUMPDEST PUSH3 0x2F4 DUP2 PUSH3 0x2ED DUP5 SLOAD PUSH3 0x236 JUMP JUMPDEST DUP5 PUSH3 0x270 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x32A JUMPI PUSH0 DUP5 ISZERO PUSH3 0x312 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x384 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x35A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x339 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x378 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3E0 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x3C4 JUMPI PUSH3 0x3C4 PUSH3 0x38C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3D2 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3A5 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x3F8 JUMPI POP PUSH1 0x1 PUSH3 0x495 JUMP JUMPDEST DUP2 PUSH3 0x406 JUMPI POP PUSH0 PUSH3 0x495 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x41F JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x42A JUMPI PUSH3 0x44A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x495 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x43E JUMPI PUSH3 0x43E PUSH3 0x38C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x495 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x46F JUMPI POP DUP2 DUP2 EXP PUSH3 0x495 JUMP JUMPDEST PUSH3 0x47B DUP4 DUP4 PUSH3 0x3A0 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x491 JUMPI PUSH3 0x491 PUSH3 0x38C JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4AB PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x495 JUMPI PUSH3 0x495 PUSH3 0x38C JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x495 JUMPI PUSH3 0x495 PUSH3 0x38C JUMP JUMPDEST PUSH2 0x80D DUP1 PUSH3 0x4F0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x1A825B75 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x105 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0x34A JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B1 SWAP1 PUSH2 0x761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DD SWAP1 PUSH2 0x761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23F DUP2 DUP6 DUP6 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 EXTCODESIZE PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH4 0x281E1587 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x503C2B0E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x311 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81D1BDAD95B9CD49958D95A5D9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x31E CALLER DUP5 DUP5 PUSH2 0x378 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x334 DUP6 DUP3 DUP6 PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x33F DUP6 DUP6 DUP6 PUSH2 0x378 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B1 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23F DUP2 DUP6 DUP6 PUSH2 0x378 JUMP JUMPDEST PUSH2 0x373 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x450 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x308 JUMP JUMPDEST PUSH2 0x373 DUP4 DUP4 DUP4 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x44A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x308 JUMP JUMPDEST PUSH2 0x44A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x450 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x514 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5BC SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5D8 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x63B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x658 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6AA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C9 DUP4 PUSH2 0x694 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F2 DUP5 PUSH2 0x694 JUMP JUMPDEST SWAP3 POP PUSH2 0x700 PUSH1 0x20 DUP6 ADD PUSH2 0x694 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x720 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x729 DUP3 PUSH2 0x694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x741 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x74A DUP4 PUSH2 0x694 JUMP JUMPDEST SWAP2 POP PUSH2 0x758 PUSH1 0x20 DUP5 ADD PUSH2 0x694 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x775 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x793 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x729 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x245 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD DUP16 PUSH6 0x7D9C9D568EE3 PUSH5 0x129257D524 0x5C 0xDE 0x2C SSTORE 0x2F 0x5C 0xFC 0x2F DUP11 SMOD PUSH13 0xB08DE8BFAAB364736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "143:679:6:-:0;;;172:104;;;;;;;;;;1896:113:1;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:1;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;220:48:6::1;226:10;257;:8;;;:10;;:::i;:::-;252:15;::::0;:2:::1;:15;:::i;:::-;238:29;::::0;:11:::1;:29;:::i;:::-;220:5;:48::i;:::-;143:679:::0;;3002:82:1;3075:2;;3002:82::o;7721:208::-;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;4529:51:9;4502:18;;7835:32:1;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;4941:32:9;;6649:50:1;;;4923:51:9;4990:18;;;4983:34;;;5033:18;;;5026:34;;;4896:18;;6649:50:1;4721:345:9;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;5217::9;;5205:2;5190:18;;5071:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:127:9:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:9;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:9;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:9;;;2546:26;2497:89;-1:-1:-1;;1308:1:9;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:9;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:9;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;2701:127::-;2762:10;2757:3;2753:20;2750:1;2743:31;2793:4;2790:1;2783:15;2817:4;2814:1;2807:15;2833:416;2922:1;2959:5;2922:1;2973:270;2994:7;2984:8;2981:21;2973:270;;;3053:4;3049:1;3045:6;3041:17;3035:4;3032:27;3029:53;;;3062:18;;:::i;:::-;3112:7;3102:8;3098:22;3095:55;;;3132:16;;;;3095:55;3211:22;;;;3171:15;;;;2973:270;;;2977:3;2833:416;;;;;:::o;3254:806::-;3303:5;3333:8;3323:80;;-1:-1:-1;3374:1:9;3388:5;;3323:80;3422:4;3412:76;;-1:-1:-1;3459:1:9;3473:5;;3412:76;3504:4;3522:1;3517:59;;;;3590:1;3585:130;;;;3497:218;;3517:59;3547:1;3538:10;;3561:5;;;3585:130;3622:3;3612:8;3609:17;3606:43;;;3629:18;;:::i;:::-;-1:-1:-1;;3685:1:9;3671:16;;3700:5;;3497:218;;3799:2;3789:8;3786:16;3780:3;3774:4;3771:13;3767:36;3761:2;3751:8;3748:16;3743:2;3737:4;3734:12;3730:35;3727:77;3724:159;;;-1:-1:-1;3836:19:9;;;3868:5;;3724:159;3915:34;3940:8;3934:4;3915:34;:::i;:::-;3985:6;3981:1;3977:6;3973:19;3964:7;3961:32;3958:58;;;3996:18;;:::i;:::-;4034:20;;-1:-1:-1;3254:806:9;;;;;:::o;4065:140::-;4123:5;4152:47;4193:4;4183:8;4179:19;4173:4;4152:47;:::i;:::-;4143:56;4065:140;-1:-1:-1;;;4065:140:9:o;4210:168::-;4283:9;;;4314;;4331:15;;;4325:22;;4311:37;4301:71;;4352:18;;:::i;4591:125::-;4656:9;;;4677:10;;;4674:36;;;4690:18;;:::i;5071:177::-;143:679:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 870,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1104,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_isContract_900": {
									"entryPoint": null,
									"id": 900,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 981,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 888,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 1314,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 562,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 418,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 842,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 807,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferWithCallback_940": {
									"entryPoint": 587,
									"id": 940,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 857,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fdae5dfc34ba716375f1e399fa1e32af4b0ef938606027d4a89160d010bf9dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4430:9",
										"nodeType": "YulBlock",
										"src": "0:4430:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:9",
													"nodeType": "YulBlock",
													"src": "135:427:9",
													"statements": [
														{
															"nativeSrc": "145:12:9",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:9",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:9",
																"nodeType": "YulLiteral",
																"src": "155:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:9",
																	"nodeType": "YulTypedName",
																	"src": "149:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:9",
																		"nodeType": "YulLiteral",
																		"src": "184:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nativeSrc": "166:21:9",
																"nodeType": "YulFunctionCall",
																"src": "166:21:9"
															},
															"nativeSrc": "166:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:9"
														},
														{
															"nativeSrc": "196:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:9"
																},
																"nativeSrc": "210:13:9",
																"nodeType": "YulFunctionCall",
																"src": "210:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:9",
																	"nodeType": "YulTypedName",
																	"src": "200:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:9",
																				"nodeType": "YulLiteral",
																				"src": "254:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:9"
																		},
																		"nativeSrc": "239:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:9"
																},
																"nativeSrc": "232:34:9",
																"nodeType": "YulFunctionCall",
																"src": "232:34:9"
															},
															"nativeSrc": "232:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:9"
														},
														{
															"nativeSrc": "275:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:9",
																"nodeType": "YulLiteral",
																"src": "284:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:9",
																	"nodeType": "YulTypedName",
																	"src": "279:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:9",
																"nodeType": "YulBlock",
																"src": "344:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:9"
																							},
																							"nativeSrc": "369:17:9",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:9",
																							"nodeType": "YulLiteral",
																							"src": "388:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:9"
																					},
																					"nativeSrc": "365:26:9",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:9"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:9",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:9"
																									},
																									"nativeSrc": "403:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:9"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:9",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:9"
																							},
																							"nativeSrc": "399:23:9",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:9"
																					},
																					"nativeSrc": "393:30:9",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:9"
																			},
																			"nativeSrc": "358:66:9",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:9"
																		},
																		"nativeSrc": "358:66:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:9"
																},
																"nativeSrc": "302:13:9",
																"nodeType": "YulFunctionCall",
																"src": "302:13:9"
															},
															"nativeSrc": "294:140:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:9",
																"nodeType": "YulBlock",
																"src": "316:19:9",
																"statements": [
																	{
																		"nativeSrc": "318:15:9",
																		"nodeType": "YulAssignment",
																		"src": "318:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:9"
																			},
																			"nativeSrc": "323:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:9",
																"nodeType": "YulBlock",
																"src": "298:3:9",
																"statements": []
															},
															"src": "294:140:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:9"
																				},
																				"nativeSrc": "454:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:9",
																				"nodeType": "YulLiteral",
																				"src": "478:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:9"
																		},
																		"nativeSrc": "450:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:9",
																		"nodeType": "YulLiteral",
																		"src": "483:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:9"
																},
																"nativeSrc": "443:42:9",
																"nodeType": "YulFunctionCall",
																"src": "443:42:9"
															},
															"nativeSrc": "443:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:9"
														},
														{
															"nativeSrc": "494:62:9",
															"nodeType": "YulAssignment",
															"src": "494:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:9",
																								"nodeType": "YulLiteral",
																								"src": "537:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:9"
																						},
																						"nativeSrc": "525:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:9",
																								"nodeType": "YulLiteral",
																								"src": "546:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:9"
																						},
																						"nativeSrc": "542:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:9"
																				},
																				"nativeSrc": "521:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:9"
																		},
																		"nativeSrc": "506:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:9",
																		"nodeType": "YulLiteral",
																		"src": "553:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:9"
																},
																"nativeSrc": "502:54:9",
																"nodeType": "YulFunctionCall",
																"src": "502:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:9",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:9",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:9",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:548:9"
											},
											{
												"body": {
													"nativeSrc": "616:124:9",
													"nodeType": "YulBlock",
													"src": "616:124:9",
													"statements": [
														{
															"nativeSrc": "626:29:9",
															"nodeType": "YulAssignment",
															"src": "626:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:9"
																},
																"nativeSrc": "635:20:9",
																"nodeType": "YulFunctionCall",
																"src": "635:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:9",
																"nodeType": "YulBlock",
																"src": "718:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:9",
																					"nodeType": "YulLiteral",
																					"src": "727:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:9",
																					"nodeType": "YulLiteral",
																					"src": "730:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:9"
																			},
																			"nativeSrc": "720:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:9"
																		},
																		"nativeSrc": "720:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:9",
																										"nodeType": "YulLiteral",
																										"src": "703:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:9",
																										"nodeType": "YulLiteral",
																										"src": "708:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:9"
																								},
																								"nativeSrc": "699:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:9",
																								"nodeType": "YulLiteral",
																								"src": "712:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:9"
																						},
																						"nativeSrc": "695:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:9"
																				},
																				"nativeSrc": "684:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:9"
																		},
																		"nativeSrc": "674:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:9"
																},
																"nativeSrc": "667:50:9",
																"nodeType": "YulFunctionCall",
																"src": "667:50:9"
															},
															"nativeSrc": "664:70:9",
															"nodeType": "YulIf",
															"src": "664:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:9",
														"nodeType": "YulTypedName",
														"src": "595:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:9",
														"nodeType": "YulTypedName",
														"src": "606:5:9",
														"type": ""
													}
												],
												"src": "567:173:9"
											},
											{
												"body": {
													"nativeSrc": "832:167:9",
													"nodeType": "YulBlock",
													"src": "832:167:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:9",
																"nodeType": "YulBlock",
																"src": "878:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:9",
																					"nodeType": "YulLiteral",
																					"src": "887:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:9",
																					"nodeType": "YulLiteral",
																					"src": "890:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:9"
																			},
																			"nativeSrc": "880:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:9"
																		},
																		"nativeSrc": "880:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:9"
																		},
																		"nativeSrc": "849:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:9",
																		"nodeType": "YulLiteral",
																		"src": "874:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:9"
																},
																"nativeSrc": "845:32:9",
																"nodeType": "YulFunctionCall",
																"src": "845:32:9"
															},
															"nativeSrc": "842:52:9",
															"nodeType": "YulIf",
															"src": "842:52:9"
														},
														{
															"nativeSrc": "903:39:9",
															"nodeType": "YulAssignment",
															"src": "903:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:9"
																},
																"nativeSrc": "913:29:9",
																"nodeType": "YulFunctionCall",
																"src": "913:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:9"
																}
															]
														},
														{
															"nativeSrc": "951:42:9",
															"nodeType": "YulAssignment",
															"src": "951:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:9",
																				"nodeType": "YulLiteral",
																				"src": "989:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:9"
																		},
																		"nativeSrc": "974:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:9"
																},
																"nativeSrc": "961:32:9",
																"nodeType": "YulFunctionCall",
																"src": "961:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:9",
														"nodeType": "YulTypedName",
														"src": "790:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:9",
														"nodeType": "YulTypedName",
														"src": "801:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:9",
														"nodeType": "YulTypedName",
														"src": "813:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:9",
														"nodeType": "YulTypedName",
														"src": "821:6:9",
														"type": ""
													}
												],
												"src": "745:254:9"
											},
											{
												"body": {
													"nativeSrc": "1099:92:9",
													"nodeType": "YulBlock",
													"src": "1099:92:9",
													"statements": [
														{
															"nativeSrc": "1109:26:9",
															"nodeType": "YulAssignment",
															"src": "1109:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:9"
																},
																"nativeSrc": "1117:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:9"
																				},
																				"nativeSrc": "1169:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:9"
																		},
																		"nativeSrc": "1162:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:9"
																},
																"nativeSrc": "1144:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:9"
															},
															"nativeSrc": "1144:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:9",
														"nodeType": "YulTypedName",
														"src": "1068:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:9",
														"nodeType": "YulTypedName",
														"src": "1079:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:9",
														"nodeType": "YulTypedName",
														"src": "1090:4:9",
														"type": ""
													}
												],
												"src": "1004:187:9"
											},
											{
												"body": {
													"nativeSrc": "1297:76:9",
													"nodeType": "YulBlock",
													"src": "1297:76:9",
													"statements": [
														{
															"nativeSrc": "1307:26:9",
															"nodeType": "YulAssignment",
															"src": "1307:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:9"
																},
																"nativeSrc": "1315:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:9"
																},
																"nativeSrc": "1342:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:9"
															},
															"nativeSrc": "1342:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:9",
														"nodeType": "YulTypedName",
														"src": "1266:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:9",
														"nodeType": "YulTypedName",
														"src": "1277:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:9",
														"nodeType": "YulTypedName",
														"src": "1288:4:9",
														"type": ""
													}
												],
												"src": "1196:177:9"
											},
											{
												"body": {
													"nativeSrc": "1482:224:9",
													"nodeType": "YulBlock",
													"src": "1482:224:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:9",
																"nodeType": "YulBlock",
																"src": "1528:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:9"
																			},
																			"nativeSrc": "1530:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:9"
																		},
																		"nativeSrc": "1530:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:9"
																		},
																		"nativeSrc": "1499:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:9"
																},
																"nativeSrc": "1495:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:9"
															},
															"nativeSrc": "1492:52:9",
															"nodeType": "YulIf",
															"src": "1492:52:9"
														},
														{
															"nativeSrc": "1553:39:9",
															"nodeType": "YulAssignment",
															"src": "1553:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:9"
																},
																"nativeSrc": "1563:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:9"
																}
															]
														},
														{
															"nativeSrc": "1601:48:9",
															"nodeType": "YulAssignment",
															"src": "1601:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:9"
																		},
																		"nativeSrc": "1630:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:9"
																},
																"nativeSrc": "1611:38:9",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:9"
																}
															]
														},
														{
															"nativeSrc": "1658:42:9",
															"nodeType": "YulAssignment",
															"src": "1658:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:9"
																		},
																		"nativeSrc": "1681:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:9"
																},
																"nativeSrc": "1668:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:9",
														"nodeType": "YulTypedName",
														"src": "1432:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:9",
														"nodeType": "YulTypedName",
														"src": "1443:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:9",
														"nodeType": "YulTypedName",
														"src": "1455:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:9",
														"nodeType": "YulTypedName",
														"src": "1463:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:9",
														"nodeType": "YulTypedName",
														"src": "1471:6:9",
														"type": ""
													}
												],
												"src": "1378:328:9"
											},
											{
												"body": {
													"nativeSrc": "1808:87:9",
													"nodeType": "YulBlock",
													"src": "1808:87:9",
													"statements": [
														{
															"nativeSrc": "1818:26:9",
															"nodeType": "YulAssignment",
															"src": "1818:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:9"
																},
																"nativeSrc": "1826:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:9"
																		},
																		"nativeSrc": "1871:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:9"
																},
																"nativeSrc": "1853:36:9",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:9"
															},
															"nativeSrc": "1853:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:9",
														"nodeType": "YulTypedName",
														"src": "1777:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:9",
														"nodeType": "YulTypedName",
														"src": "1788:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:9",
														"nodeType": "YulTypedName",
														"src": "1799:4:9",
														"type": ""
													}
												],
												"src": "1711:184:9"
											},
											{
												"body": {
													"nativeSrc": "1970:116:9",
													"nodeType": "YulBlock",
													"src": "1970:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:9",
																"nodeType": "YulBlock",
																"src": "2016:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:9"
																			},
																			"nativeSrc": "2018:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:9"
																		},
																		"nativeSrc": "2018:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:9"
																		},
																		"nativeSrc": "1987:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:9"
																},
																"nativeSrc": "1983:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:9"
															},
															"nativeSrc": "1980:52:9",
															"nodeType": "YulIf",
															"src": "1980:52:9"
														},
														{
															"nativeSrc": "2041:39:9",
															"nodeType": "YulAssignment",
															"src": "2041:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:9"
																},
																"nativeSrc": "2051:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:9",
														"nodeType": "YulTypedName",
														"src": "1936:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:9",
														"nodeType": "YulTypedName",
														"src": "1947:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:9",
														"nodeType": "YulTypedName",
														"src": "1959:6:9",
														"type": ""
													}
												],
												"src": "1900:186:9"
											},
											{
												"body": {
													"nativeSrc": "2178:173:9",
													"nodeType": "YulBlock",
													"src": "2178:173:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:9",
																"nodeType": "YulBlock",
																"src": "2224:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:9"
																			},
																			"nativeSrc": "2226:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:9"
																		},
																		"nativeSrc": "2226:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:9"
																		},
																		"nativeSrc": "2195:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:9"
																},
																"nativeSrc": "2191:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:9"
															},
															"nativeSrc": "2188:52:9",
															"nodeType": "YulIf",
															"src": "2188:52:9"
														},
														{
															"nativeSrc": "2249:39:9",
															"nodeType": "YulAssignment",
															"src": "2249:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:9"
																},
																"nativeSrc": "2259:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:9"
																}
															]
														},
														{
															"nativeSrc": "2297:48:9",
															"nodeType": "YulAssignment",
															"src": "2297:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2330:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:9"
																		},
																		"nativeSrc": "2326:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2307:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:9"
																},
																"nativeSrc": "2307:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2307:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2297:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2091:260:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:9",
														"nodeType": "YulTypedName",
														"src": "2136:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:9",
														"nodeType": "YulTypedName",
														"src": "2147:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:9",
														"nodeType": "YulTypedName",
														"src": "2159:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2167:6:9",
														"nodeType": "YulTypedName",
														"src": "2167:6:9",
														"type": ""
													}
												],
												"src": "2091:260:9"
											},
											{
												"body": {
													"nativeSrc": "2411:325:9",
													"nodeType": "YulBlock",
													"src": "2411:325:9",
													"statements": [
														{
															"nativeSrc": "2421:22:9",
															"nodeType": "YulAssignment",
															"src": "2421:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2438:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2431:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:9"
																},
																"nativeSrc": "2431:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2431:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2421:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:9"
																}
															]
														},
														{
															"nativeSrc": "2452:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2482:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2478:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:9"
																},
																"nativeSrc": "2478:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2478:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2456:18:9",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2529:31:9",
																"nodeType": "YulBlock",
																"src": "2529:31:9",
																"statements": [
																	{
																		"nativeSrc": "2531:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2531:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2545:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2553:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2541:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:9"
																			},
																			"nativeSrc": "2541:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2531:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2509:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2502:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:9"
																},
																"nativeSrc": "2502:26:9",
																"nodeType": "YulFunctionCall",
																"src": "2502:26:9"
															},
															"nativeSrc": "2499:61:9",
															"nodeType": "YulIf",
															"src": "2499:61:9"
														},
														{
															"body": {
																"nativeSrc": "2619:111:9",
																"nodeType": "YulBlock",
																"src": "2619:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2647:3:9",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2652:10:9",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2643:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:9"
																					},
																					"nativeSrc": "2643:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2633:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:9"
																			},
																			"nativeSrc": "2633:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:9"
																		},
																		"nativeSrc": "2633:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2684:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2687:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2677:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:9"
																			},
																			"nativeSrc": "2677:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:9"
																		},
																		"nativeSrc": "2677:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:9"
																			},
																			"nativeSrc": "2705:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:9"
																		},
																		"nativeSrc": "2705:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2575:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2598:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2595:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:9"
																		},
																		"nativeSrc": "2595:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2572:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:9"
																},
																"nativeSrc": "2572:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2572:38:9"
															},
															"nativeSrc": "2569:161:9",
															"nodeType": "YulIf",
															"src": "2569:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2356:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2391:4:9",
														"nodeType": "YulTypedName",
														"src": "2391:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2400:6:9",
														"nodeType": "YulTypedName",
														"src": "2400:6:9",
														"type": ""
													}
												],
												"src": "2356:380:9"
											},
											{
												"body": {
													"nativeSrc": "2870:145:9",
													"nodeType": "YulBlock",
													"src": "2870:145:9",
													"statements": [
														{
															"nativeSrc": "2880:26:9",
															"nodeType": "YulAssignment",
															"src": "2880:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2892:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2892:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2903:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2903:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2888:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:9"
																},
																"nativeSrc": "2888:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2888:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2880:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2880:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2922:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2922:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2937:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2937:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2953:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2953:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2958:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2958:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2949:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2949:3:9"
																						},
																						"nativeSrc": "2949:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2949:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2962:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2962:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2945:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2945:3:9"
																				},
																				"nativeSrc": "2945:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2945:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2933:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2933:3:9"
																		},
																		"nativeSrc": "2933:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2933:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2915:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2915:6:9"
																},
																"nativeSrc": "2915:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2915:51:9"
															},
															"nativeSrc": "2915:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2915:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2986:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2986:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2997:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2997:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2982:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:3:9"
																		},
																		"nativeSrc": "2982:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3002:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3002:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:34:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:34:9"
															},
															"nativeSrc": "2975:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "2975:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2741:274:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2831:9:9",
														"nodeType": "YulTypedName",
														"src": "2831:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2842:6:9",
														"nodeType": "YulTypedName",
														"src": "2842:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2850:6:9",
														"nodeType": "YulTypedName",
														"src": "2850:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2861:4:9",
														"nodeType": "YulTypedName",
														"src": "2861:4:9",
														"type": ""
													}
												],
												"src": "2741:274:9"
											},
											{
												"body": {
													"nativeSrc": "3098:199:9",
													"nodeType": "YulBlock",
													"src": "3098:199:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3144:16:9",
																"nodeType": "YulBlock",
																"src": "3144:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3153:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3153:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3156:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3156:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3146:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3146:6:9"
																			},
																			"nativeSrc": "3146:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3146:12:9"
																		},
																		"nativeSrc": "3146:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3146:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3119:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3119:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3128:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3128:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3115:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3115:3:9"
																		},
																		"nativeSrc": "3115:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3115:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3140:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3140:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3111:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3111:3:9"
																},
																"nativeSrc": "3111:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3111:32:9"
															},
															"nativeSrc": "3108:52:9",
															"nodeType": "YulIf",
															"src": "3108:52:9"
														},
														{
															"nativeSrc": "3169:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3169:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3188:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3188:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3182:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3182:5:9"
																},
																"nativeSrc": "3182:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3182:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3173:5:9",
																	"nodeType": "YulTypedName",
																	"src": "3173:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3251:16:9",
																"nodeType": "YulBlock",
																"src": "3251:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3260:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3260:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3263:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3263:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3253:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3253:6:9"
																			},
																			"nativeSrc": "3253:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3253:12:9"
																		},
																		"nativeSrc": "3253:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3220:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3220:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3241:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "3241:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3234:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "3234:6:9"
																						},
																						"nativeSrc": "3234:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3234:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3227:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3227:6:9"
																				},
																				"nativeSrc": "3227:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3227:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3217:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3217:2:9"
																		},
																		"nativeSrc": "3217:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3217:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3210:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:9"
																},
																"nativeSrc": "3210:40:9",
																"nodeType": "YulFunctionCall",
																"src": "3210:40:9"
															},
															"nativeSrc": "3207:60:9",
															"nodeType": "YulIf",
															"src": "3207:60:9"
														},
														{
															"nativeSrc": "3276:15:9",
															"nodeType": "YulAssignment",
															"src": "3276:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "3286:5:9",
																"nodeType": "YulIdentifier",
																"src": "3286:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3276:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3020:277:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3064:9:9",
														"nodeType": "YulTypedName",
														"src": "3064:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3075:7:9",
														"nodeType": "YulTypedName",
														"src": "3075:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3087:6:9",
														"nodeType": "YulTypedName",
														"src": "3087:6:9",
														"type": ""
													}
												],
												"src": "3020:277:9"
											},
											{
												"body": {
													"nativeSrc": "3476:167:9",
													"nodeType": "YulBlock",
													"src": "3476:167:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3493:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3493:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3504:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3504:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3486:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:9"
																},
																"nativeSrc": "3486:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3486:21:9"
															},
															"nativeSrc": "3486:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3486:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3527:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3527:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3538:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3538:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3523:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3523:3:9"
																		},
																		"nativeSrc": "3523:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3543:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3543:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3516:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3516:6:9"
																},
																"nativeSrc": "3516:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3516:30:9"
															},
															"nativeSrc": "3516:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3516:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3566:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3566:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3577:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3577:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3562:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:9"
																		},
																		"nativeSrc": "3562:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:18:9"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e735265636569766564",
																		"kind": "string",
																		"nativeSrc": "3582:19:9",
																		"nodeType": "YulLiteral",
																		"src": "3582:19:9",
																		"type": "",
																		"value": "No tokensReceived"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3555:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3555:6:9"
																},
																"nativeSrc": "3555:47:9",
																"nodeType": "YulFunctionCall",
																"src": "3555:47:9"
															},
															"nativeSrc": "3555:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "3555:47:9"
														},
														{
															"nativeSrc": "3611:26:9",
															"nodeType": "YulAssignment",
															"src": "3611:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3623:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3623:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3634:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3634:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3619:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:9"
																},
																"nativeSrc": "3619:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3619:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3611:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3611:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fdae5dfc34ba716375f1e399fa1e32af4b0ef938606027d4a89160d010bf9dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3302:341:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3453:9:9",
														"nodeType": "YulTypedName",
														"src": "3453:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3467:4:9",
														"nodeType": "YulTypedName",
														"src": "3467:4:9",
														"type": ""
													}
												],
												"src": "3302:341:9"
											},
											{
												"body": {
													"nativeSrc": "3749:102:9",
													"nodeType": "YulBlock",
													"src": "3749:102:9",
													"statements": [
														{
															"nativeSrc": "3759:26:9",
															"nodeType": "YulAssignment",
															"src": "3759:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3771:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3771:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3782:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3767:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3767:3:9"
																},
																"nativeSrc": "3767:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3767:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3759:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3759:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3801:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3801:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3816:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3816:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3832:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3832:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3837:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3837:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3828:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3828:3:9"
																						},
																						"nativeSrc": "3828:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3828:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3841:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3841:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3824:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3824:3:9"
																				},
																				"nativeSrc": "3824:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3824:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3812:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3812:3:9"
																		},
																		"nativeSrc": "3812:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3812:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3794:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3794:6:9"
																},
																"nativeSrc": "3794:51:9",
																"nodeType": "YulFunctionCall",
																"src": "3794:51:9"
															},
															"nativeSrc": "3794:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "3794:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3648:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3718:9:9",
														"nodeType": "YulTypedName",
														"src": "3718:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3729:6:9",
														"nodeType": "YulTypedName",
														"src": "3729:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3740:4:9",
														"nodeType": "YulTypedName",
														"src": "3740:4:9",
														"type": ""
													}
												],
												"src": "3648:203:9"
											},
											{
												"body": {
													"nativeSrc": "4013:188:9",
													"nodeType": "YulBlock",
													"src": "4013:188:9",
													"statements": [
														{
															"nativeSrc": "4023:26:9",
															"nodeType": "YulAssignment",
															"src": "4023:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4035:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4035:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4046:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4046:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4031:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4031:3:9"
																},
																"nativeSrc": "4031:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4031:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4023:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4023:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4065:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4065:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4080:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4080:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4096:3:9",
																								"nodeType": "YulLiteral",
																								"src": "4096:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4101:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4101:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4092:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4092:3:9"
																						},
																						"nativeSrc": "4092:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4092:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4105:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4105:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4088:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4088:3:9"
																				},
																				"nativeSrc": "4088:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4088:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4076:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:9"
																		},
																		"nativeSrc": "4076:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4076:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4058:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4058:6:9"
																},
																"nativeSrc": "4058:51:9",
																"nodeType": "YulFunctionCall",
																"src": "4058:51:9"
															},
															"nativeSrc": "4058:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "4058:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4129:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4129:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4140:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4140:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4125:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4125:3:9"
																		},
																		"nativeSrc": "4125:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4125:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4145:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:9"
																},
																"nativeSrc": "4118:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4118:34:9"
															},
															"nativeSrc": "4118:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4118:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4172:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4172:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4183:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4183:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4168:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:9"
																		},
																		"nativeSrc": "4168:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4168:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4188:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4188:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4161:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4161:6:9"
																},
																"nativeSrc": "4161:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4161:34:9"
															},
															"nativeSrc": "4161:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4161:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3856:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3966:9:9",
														"nodeType": "YulTypedName",
														"src": "3966:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3977:6:9",
														"nodeType": "YulTypedName",
														"src": "3977:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3985:6:9",
														"nodeType": "YulTypedName",
														"src": "3985:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3993:6:9",
														"nodeType": "YulTypedName",
														"src": "3993:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4004:4:9",
														"nodeType": "YulTypedName",
														"src": "4004:4:9",
														"type": ""
													}
												],
												"src": "3856:345:9"
											},
											{
												"body": {
													"nativeSrc": "4254:174:9",
													"nodeType": "YulBlock",
													"src": "4254:174:9",
													"statements": [
														{
															"nativeSrc": "4264:16:9",
															"nodeType": "YulAssignment",
															"src": "4264:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4275:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4275:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4278:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4278:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4271:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4271:3:9"
																},
																"nativeSrc": "4271:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4271:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4264:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4264:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4311:111:9",
																"nodeType": "YulBlock",
																"src": "4311:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4332:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4332:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4339:3:9",
																							"nodeType": "YulLiteral",
																							"src": "4339:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4344:10:9",
																							"nodeType": "YulLiteral",
																							"src": "4344:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4335:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4335:3:9"
																					},
																					"nativeSrc": "4335:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4335:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4325:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4325:6:9"
																			},
																			"nativeSrc": "4325:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4325:31:9"
																		},
																		"nativeSrc": "4325:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4325:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4376:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4376:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4379:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4379:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4369:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4369:6:9"
																			},
																			"nativeSrc": "4369:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4369:15:9"
																		},
																		"nativeSrc": "4369:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4369:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4404:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4404:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4407:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4407:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4397:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:9"
																			},
																			"nativeSrc": "4397:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4397:15:9"
																		},
																		"nativeSrc": "4397:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4397:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4295:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4295:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4298:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4298:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4292:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4292:2:9"
																},
																"nativeSrc": "4292:10:9",
																"nodeType": "YulFunctionCall",
																"src": "4292:10:9"
															},
															"nativeSrc": "4289:133:9",
															"nodeType": "YulIf",
															"src": "4289:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4206:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4237:1:9",
														"nodeType": "YulTypedName",
														"src": "4237:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4240:1:9",
														"nodeType": "YulTypedName",
														"src": "4240:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4246:3:9",
														"nodeType": "YulTypedName",
														"src": "4246:3:9",
														"type": ""
													}
												],
												"src": "4206:222:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fdae5dfc34ba716375f1e399fa1e32af4b0ef938606027d4a89160d010bf9dbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No tokensReceived\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063313ce56711610063578063313ce5671461011857806370a082311461012757806395d89b411461014f578063a9059cbb14610157578063dd62ed3e1461016a575f80fd5b806306fdde031461009f578063095ea7b3146100bd57806318160ddd146100e05780631a825b75146100f257806323b872dd14610105575b5f80fd5b6100a76101a2565b6040516100b49190610648565b60405180910390f35b6100d06100cb3660046106af565b610232565b60405190151581526020016100b4565b6002545b6040519081526020016100b4565b6100d06101003660046106af565b61024b565b6100d06101133660046106d7565b610327565b604051601281526020016100b4565b6100e4610135366004610710565b6001600160a01b03165f9081526020819052604090205490565b6100a761034a565b6100d06101653660046106af565b610359565b6100e4610178366004610730565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b190610761565b80601f01602080910402602001604051908101604052809291908181526020018280546101dd90610761565b80156102285780601f106101ff57610100808354040283529160200191610228565b820191905f5260205f20905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b5f3361023f818585610366565b60019150505b92915050565b5f823b63ffffffff16156103135760405163281e158760e11b8152336004820152602481018390525f906001600160a01b0385169063503c2b0e906044016020604051808303815f875af11580156102a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c99190610799565b9050806103115760405162461bcd60e51b8152602060048201526011602482015270139bc81d1bdad95b9cd49958d95a5d9959607a1b60448201526064015b60405180910390fd5b505b61031e338484610378565b50600192915050565b5f336103348582856103d5565b61033f858585610378565b506001949350505050565b6060600480546101b190610761565b5f3361023f818585610378565b6103738383836001610450565b505050565b6001600160a01b0383166103a157604051634b637e8f60e11b81525f6004820152602401610308565b6001600160a01b0382166103ca5760405163ec442f0560e01b81525f6004820152602401610308565b610373838383610522565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461044a578181101561043c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610308565b61044a84848484035f610450565b50505050565b6001600160a01b0384166104795760405163e602df0560e01b81525f6004820152602401610308565b6001600160a01b0383166104a257604051634a1406b160e11b81525f6004820152602401610308565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561044a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161051491815260200190565b60405180910390a350505050565b6001600160a01b03831661054c578060025f82825461054191906107b8565b909155506105bc9050565b6001600160a01b0383165f908152602081905260409020548181101561059e5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610308565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166105d8576002805482900390556105f6565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161063b91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b8181101561067457858101830151858201604001528201610658565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106aa575f80fd5b919050565b5f80604083850312156106c0575f80fd5b6106c983610694565b946020939093013593505050565b5f805f606084860312156106e9575f80fd5b6106f284610694565b925061070060208501610694565b9150604084013590509250925092565b5f60208284031215610720575f80fd5b61072982610694565b9392505050565b5f8060408385031215610741575f80fd5b61074a83610694565b915061075860208401610694565b90509250929050565b600181811c9082168061077557607f821691505b60208210810361079357634e487b7160e01b5f52602260045260245ffd5b50919050565b5f602082840312156107a9575f80fd5b81518015158114610729575f80fd5b8082018082111561024557634e487b7160e01b5f52601160045260245ffdfea2646970667358221220bd8f657d9c9d568ee364129257d5245cde2c552f5cfc2f8a076cb08de8bfaab364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x1A825B75 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x105 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0x34A JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B1 SWAP1 PUSH2 0x761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DD SWAP1 PUSH2 0x761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23F DUP2 DUP6 DUP6 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 EXTCODESIZE PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH4 0x281E1587 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x503C2B0E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x311 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81D1BDAD95B9CD49958D95A5D9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x31E CALLER DUP5 DUP5 PUSH2 0x378 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x334 DUP6 DUP3 DUP6 PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x33F DUP6 DUP6 DUP6 PUSH2 0x378 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B1 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23F DUP2 DUP6 DUP6 PUSH2 0x378 JUMP JUMPDEST PUSH2 0x373 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x450 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x308 JUMP JUMPDEST PUSH2 0x373 DUP4 DUP4 DUP4 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x44A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x308 JUMP JUMPDEST PUSH2 0x44A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x450 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x514 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5BC SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5D8 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x63B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x658 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6AA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C9 DUP4 PUSH2 0x694 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F2 DUP5 PUSH2 0x694 JUMP JUMPDEST SWAP3 POP PUSH2 0x700 PUSH1 0x20 DUP6 ADD PUSH2 0x694 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x720 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x729 DUP3 PUSH2 0x694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x741 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x74A DUP4 PUSH2 0x694 JUMP JUMPDEST SWAP2 POP PUSH2 0x758 PUSH1 0x20 DUP5 ADD PUSH2 0x694 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x775 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x793 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x729 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x245 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD DUP16 PUSH6 0x7D9C9D568EE3 PUSH5 0x129257D524 0x5C 0xDE 0x2C SSTORE 0x2F 0x5C 0xFC 0x2F DUP11 SMOD PUSH13 0xB08DE8BFAAB364736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "143:679:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:9;;1162:22;1144:41;;1132:2;1117:18;4293:186:1;1004:187:9;3144:97:1;3222:12;;3144:97;;;1342:25:9;;;1330:2;1315:18;3144:97:1;1196:177:9;470:349:6;;;;;;:::i;:::-;;:::i;5039:244:1:-;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1853:36:9;;1841:2;1826:18;3002:82:1;1711:184:9;3299:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:1;3364:7;3390:18;;;;;;;;;;;;3299:116;2276:93;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:1;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:4;4420:31:1;735:10:4;4436:7:1;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;470:349:6:-;551:4;405:21;;447:8;;;577:162;;628:52;;-1:-1:-1;;;628:52:6;;662:10;628:52;;;2915:51:9;2982:18;;;2975:34;;;618:7:6;;-1:-1:-1;;;;;628:33:6;;;;;2888:18:9;;628:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;618:62;;703:2;695:32;;;;-1:-1:-1;;;695:32:6;;3504:2:9;695:32:6;;;3486:21:9;3543:2;3523:18;;;3516:30;-1:-1:-1;;;3562:18:9;;;3555:47;3619:18;;695:32:6;;;;;;;;;603:136;577:162;749:40;759:10;771:9;782:6;749:9;:40::i;:::-;-1:-1:-1;807:4:6;470:349;;;;:::o;5039:244:1:-;5126:4;735:10:4;5182:37:1;5198:4;735:10:4;5213:5:1;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:1;;5039:244;-1:-1:-1;;;;5039:244:1:o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:4;3733:27:1;735:10:4;3750:2:1;3754:5;3733:9;:27::i;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:1;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:1;;5807:1;5780:30;;;3794:51:9;3767:18;;5780:30:1;3648:203:9;5735:86:1;-1:-1:-1;;;;;5834:16:1;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:1;;5902:1;5873:32;;;3794:51:9;3767:18;;5873:32:1;3648:203:9;5830:86:1;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;10663:477::-;-1:-1:-1;;;;;3952:18:1;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:1;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:1;;-1:-1:-1;;;;;4076:32:9;;10936:60:1;;;4058:51:9;4125:18;;;4118:34;;;4168:18;;;4161:34;;;4031:18;;10936:60:1;3856:345:9;10881:130:1;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;9949:432::-;-1:-1:-1;;;;;10061:19:1;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:1;;10132:1;10103:32;;;3794:51:9;3767:18;;10103:32:1;3648:203:9;10057:89:1;-1:-1:-1;;;;;10159:21:1;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:1;;10231:1;10203:31;;;3794:51:9;3767:18;;10203:31:1;3648:203:9;10155:90:1;-1:-1:-1;;;;;10254:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:1;10342:5;-1:-1:-1;;;;;10333:31:1;;10358:5;10333:31;;;;1342:25:9;;1330:2;1315:18;;1196:177;10333:31:1;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;4076:32:9;;6649:50:1;;;4058:51:9;4125:18;;;4118:34;;;4168:18;;;4161:34;;;4031:18;;6649:50:1;3856:345:9;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;1342::9;;1330:2;1315:18;;1196:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:548:9:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:9;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:9:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:9:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3020:277::-;3087:6;3140:2;3128:9;3119:7;3115:23;3111:32;3108:52;;;3156:1;3153;3146:12;3108:52;3188:9;3182:16;3241:5;3234:13;3227:21;3220:5;3217:32;3207:60;;3263:1;3260;3253:12;4206:222;4271:9;;;4292:10;;;4289:133;;;4344:10;4339:3;4335:20;4332:1;4325:31;4379:4;4376:1;4369:15;4407:4;4404:1;4397:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "412200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2559",
								"decimals()": "176",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51282",
								"transferFrom(address,address,uint256)": "infinite",
								"transferWithCallback(address,uint256)": "infinite"
							},
							"internal": {
								"_isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 143,
									"end": 822,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 143,
									"end": 822,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 143,
									"end": 822,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 172,
									"end": 276,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 172,
									"end": 276,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 172,
									"end": 276,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 172,
									"end": 276,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 172,
									"end": 276,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 172,
									"end": 276,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 276,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 172,
									"end": 276,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 172,
									"end": 276,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 172,
									"end": 276,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 172,
									"end": 276,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 220,
									"end": 268,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 226,
									"end": 236,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 257,
									"end": 267,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 257,
									"end": 265,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 257,
									"end": 265,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 257,
									"end": 265,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 257,
									"end": 267,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 257,
									"end": 267,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 257,
									"end": 267,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 257,
									"end": 267,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 257,
									"end": 267,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 267,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 252,
									"end": 267,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 254,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 252,
									"end": 267,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 252,
									"end": 267,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 267,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 252,
									"end": 267,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 238,
									"end": 267,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 238,
									"end": 267,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 238,
									"end": 249,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5F5E100"
								},
								{
									"begin": 238,
									"end": 267,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 238,
									"end": 267,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 238,
									"end": 267,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 238,
									"end": 267,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 220,
									"end": 225,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 220,
									"end": 268,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 220,
									"end": 268,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 220,
									"end": 268,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 143,
									"end": 822,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 143,
									"end": 822,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4580,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4502,
									"end": 4520,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4502,
									"end": 4520,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4941,
									"end": 4973,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4941,
									"end": 4973,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4923,
									"end": 4974,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4896,
									"end": 4914,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4896,
									"end": 4914,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4721,
									"end": 5066,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5217,
									"end": 5242,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5217,
									"end": 5242,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5205,
									"end": 5207,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2701,
									"end": 2828,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 2701,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2762,
									"end": 2772,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 2757,
									"end": 2760,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2753,
									"end": 2773,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2750,
									"end": 2751,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2774,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2793,
									"end": 2797,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2790,
									"end": 2791,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2783,
									"end": 2798,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2817,
									"end": 2821,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2814,
									"end": 2815,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2822,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2959,
									"end": 2964,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 3001,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2984,
									"end": 2992,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3002,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3045,
									"end": 3051,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3035,
									"end": 3039,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3059,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 3062,
									"end": 3080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3102,
									"end": 3110,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3098,
									"end": 3120,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2977,
									"end": 2980,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 3249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3303,
									"end": 3308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3333,
									"end": 3341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3374,
									"end": 3375,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3388,
									"end": 3393,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3388,
									"end": 3393,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3422,
									"end": 3426,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3459,
									"end": 3460,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3504,
									"end": 3508,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3590,
									"end": 3591,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3547,
									"end": 3548,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3538,
									"end": 3548,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3538,
									"end": 3548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3622,
									"end": 3625,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 3612,
									"end": 3620,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3609,
									"end": 3626,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 3629,
									"end": 3647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3685,
									"end": 3686,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3671,
									"end": 3687,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3671,
									"end": 3687,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3700,
									"end": 3705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3700,
									"end": 3705,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3799,
									"end": 3801,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3789,
									"end": 3797,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3786,
									"end": 3802,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "PUSH",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3771,
									"end": 3784,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3767,
									"end": 3803,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3761,
									"end": 3763,
									"name": "PUSH",
									"source": 9,
									"value": "4E"
								},
								{
									"begin": 3751,
									"end": 3759,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3748,
									"end": 3764,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3743,
									"end": 3745,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 3737,
									"end": 3741,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3734,
									"end": 3746,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3730,
									"end": 3765,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3727,
									"end": 3804,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 3868,
									"end": 3873,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3868,
									"end": 3873,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 3940,
									"end": 3948,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3934,
									"end": 3938,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3915,
									"end": 3949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3985,
									"end": 3991,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3981,
									"end": 3982,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3977,
									"end": 3983,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3973,
									"end": 3992,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3964,
									"end": 3971,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3961,
									"end": 3993,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 3996,
									"end": 4014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4034,
									"end": 4054,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4034,
									"end": 4054,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3254,
									"end": 4060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4123,
									"end": 4128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 4193,
									"end": 4197,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 4183,
									"end": 4191,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4179,
									"end": 4198,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4177,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4152,
									"end": 4199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4199,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4065,
									"end": 4205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4311,
									"end": 4348,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 4352,
									"end": 4370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4591,
									"end": 4716,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4591,
									"end": 4716,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4690,
									"end": 4708,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 4690,
									"end": 4708,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 4690,
									"end": 4708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 143,
									"end": 822,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 822,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 822,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 822,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 822,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 143,
									"end": 822,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 822,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd8f657d9c9d568ee364129257d5245cde2c552f5cfc2f8a076cb08de8bfaab364736f6c63430008160033",
									".code": [
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "1A825B75"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 822,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 470,
											"end": 819,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 470,
											"end": 819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 470,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 470,
											"end": 819,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 470,
											"end": 819,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 470,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 819,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 470,
											"end": 819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 470,
											"end": 819,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 405,
											"end": 426,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 447,
											"end": 455,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 447,
											"end": 455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 447,
											"end": 455,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 577,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 577,
											"end": 739,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "281E1587"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 662,
											"end": 672,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 2966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 3009,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 3009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 3009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 618,
											"end": 625,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 628,
											"end": 661,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 628,
											"end": 661,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 628,
											"end": 661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 661,
											"name": "PUSH",
											"source": 6,
											"value": "503C2B0E"
										},
										{
											"begin": 628,
											"end": 661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2906,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2888,
											"end": 2906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 628,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 628,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 703,
											"end": 705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 695,
											"end": 727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3506,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3545,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3516,
											"end": 3546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81D1BDAD95B9CD49958D95A5D9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3562,
											"end": 3580,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3562,
											"end": 3580,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3555,
											"end": 3602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3619,
											"end": 3637,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3619,
											"end": 3637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 695,
											"end": 727,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 695,
											"end": 727,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 577,
											"end": 739,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 577,
											"end": 739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 759,
											"end": 769,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 782,
											"end": 788,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 749,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 749,
											"end": 789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 749,
											"end": 789,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 749,
											"end": 789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 470,
											"end": 819,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 470,
											"end": 819,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 470,
											"end": 819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3648,
											"end": 3851,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3648,
											"end": 3851,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4076,
											"end": 4108,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4108,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4109,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3856,
											"end": 4201,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3648,
											"end": 3851,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3648,
											"end": 3851,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4076,
											"end": 4108,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4108,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4109,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3856,
											"end": 4201,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3297,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3020,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3142,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3126,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3138,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3111,
											"end": 3143,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3160,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3108,
											"end": 3160,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3158,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3160,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3108,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3198,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3234,
											"end": 3247,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3227,
											"end": 3248,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3249,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3207,
											"end": 3267,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3265,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4206,
											"end": 4428,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 4206,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4302,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4289,
											"end": 4422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4344,
											"end": 4354,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 4339,
											"end": 4342,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4335,
											"end": 4355,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4356,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4379,
											"end": 4383,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4376,
											"end": 4377,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4404,
											"end": 4405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4412,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"day6/IMyToken.sol",
								"day6/MyERC20.sol",
								"day6/MyToken.sol",
								"day6/TokenBank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferWithCallback(address,uint256)": "1a825b75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferWithCallback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"day6/MyERC20.sol\":\"MTK\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"day6/IMyToken.sol\":{\"keccak256\":\"0xbf0a600473187eab5720e8ba157d3798d175a6e675ffd56e3c131e20bc4d64bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69bf44aacf5f48a455ec76a0467426a875a4f8534f70a31a4abe2dee8136c487\",\"dweb:/ipfs/QmeJDAeXu3M15h2CaSRRzq357iqoZtn3E7wTPshjoUbsAV\"]},\"day6/MyERC20.sol\":{\"keccak256\":\"0x9dbc17267ea6329cafaea9264920d4c77121f05c69d0a40fd2144184795893af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5abd098902ebe97d4bd88867506067004f923a2f4acb96052ba78f0984b0aa84\",\"dweb:/ipfs/Qmc28fc5vDf7yfPFZJMi3fG88DZ3GQdvBNd2xW4tVbjCCa\"]},\"day6/MyToken.sol\":{\"keccak256\":\"0x3bc93d438568ad5f0f379ff29d8cc7d880e0e1ae8154b6cc39c05795b0b1f7a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8736790ba3b47e3af938428436979b986bd4c0e10bd3147ed758c8095549cbfe\",\"dweb:/ipfs/QmRZFmkVmw5qagqZy2DAj6BecAZeYsiZro6W4LSWywy3m1\"]},\"day6/TokenBank.sol\":{\"keccak256\":\"0xbcfe3e63fbd05b244efc6733d04413af5d77adc0aca578fd3c315a45252630dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cb0c7fac45a32683afa381ea01be0a2689dbe7b7a0b1a927f8f96dcb23d7fa\",\"dweb:/ipfs/QmZHRgXcmNTnBEYq2hF5Stvyt9kwvjkbfJVFkjpDRcqaWk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "day6/MyERC20.sol:MTK",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "day6/MyERC20.sol:MTK",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "day6/MyERC20.sol:MTK",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "day6/MyERC20.sol:MTK",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "day6/MyERC20.sol:MTK",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"day6/MyToken.sol": {
				"MyToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approve",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferWithCallback",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferfrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferWithCallback(address,uint256)": "1a825b75",
							"transferfrom(address,address,uint256)": "63b0545f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferWithCallback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferfrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"day6/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"day6/IMyToken.sol\":{\"keccak256\":\"0xbf0a600473187eab5720e8ba157d3798d175a6e675ffd56e3c131e20bc4d64bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69bf44aacf5f48a455ec76a0467426a875a4f8534f70a31a4abe2dee8136c487\",\"dweb:/ipfs/QmeJDAeXu3M15h2CaSRRzq357iqoZtn3E7wTPshjoUbsAV\"]},\"day6/MyToken.sol\":{\"keccak256\":\"0x3bc93d438568ad5f0f379ff29d8cc7d880e0e1ae8154b6cc39c05795b0b1f7a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8736790ba3b47e3af938428436979b986bd4c0e10bd3147ed758c8095549cbfe\",\"dweb:/ipfs/QmRZFmkVmw5qagqZy2DAj6BecAZeYsiZro6W4LSWywy3m1\"]},\"day6/TokenBank.sol\":{\"keccak256\":\"0xbcfe3e63fbd05b244efc6733d04413af5d77adc0aca578fd3c315a45252630dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cb0c7fac45a32683afa381ea01be0a2689dbe7b7a0b1a927f8f96dcb23d7fa\",\"dweb:/ipfs/QmZHRgXcmNTnBEYq2hF5Stvyt9kwvjkbfJVFkjpDRcqaWk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 952,
								"contract": "day6/MyToken.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 958,
								"contract": "day6/MyToken.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 960,
								"contract": "day6/MyToken.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 962,
								"contract": "day6/MyToken.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 964,
								"contract": "day6/MyToken.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"day6/TokenBank.sol": {
				"TokenBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract MyToken",
									"name": "mytoken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "WithDraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getbalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mytoken",
							"outputs": [
								{
									"internalType": "contract MyToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "tokenReceive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withDraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"day6/TokenBank.sol\":88:1259  contract TokenBank {... */\n  mstore(0x40, 0x80)\n    /* \"day6/TokenBank.sol\":324:417  constructor(MyToken mytoken){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  pop\n    /* \"day6/TokenBank.sol\":391:396  admin */\n  0x01\n    /* \"day6/TokenBank.sol\":391:409  admin = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"day6/TokenBank.sol\":399:409  msg.sender */\n  caller\n    /* \"day6/TokenBank.sol\":391:409  admin = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"day6/TokenBank.sol\":88:1259  contract TokenBank {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:320   */\ntag_3:\n    /* \"#utility.yul\":100:106   */\n  0x00\n    /* \"#utility.yul\":153:155   */\n  0x20\n    /* \"#utility.yul\":141:150   */\n  dup3\n    /* \"#utility.yul\":132:139   */\n  dup5\n    /* \"#utility.yul\":128:151   */\n  sub\n    /* \"#utility.yul\":124:156   */\n  slt\n    /* \"#utility.yul\":121:173   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":169:170   */\n  0x00\n    /* \"#utility.yul\":166:167   */\n  dup1\n    /* \"#utility.yul\":159:171   */\n  revert\n    /* \"#utility.yul\":121:173   */\ntag_9:\n    /* \"#utility.yul\":195:211   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":240:271   */\n  dup2\n  and\n    /* \"#utility.yul\":230:272   */\n  dup2\n  eq\n    /* \"#utility.yul\":220:290   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":286:287   */\n  0x00\n    /* \"#utility.yul\":283:284   */\n  dup1\n    /* \"#utility.yul\":276:288   */\n  revert\n    /* \"#utility.yul\":220:290   */\ntag_10:\n    /* \"#utility.yul\":309:314   */\n  swap4\n    /* \"#utility.yul\":14:320   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"day6/TokenBank.sol\":88:1259  contract TokenBank {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"day6/TokenBank.sol\":88:1259  contract TokenBank {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0fdb1c10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x503c2b0e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5eab74fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x68116177\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"day6/TokenBank.sol\":717:977  function withDraw() external {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"day6/TokenBank.sol\":1103:1248  function tokenReceive(address from,uint256 value) external  returns(bool){... */\n    tag_4:\n      tag_10\n      tag_11\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n        /* \"#utility.yul\":616:630   */\n      swap1\n      iszero\n        /* \"#utility.yul\":609:631   */\n      iszero\n        /* \"#utility.yul\":591:632   */\n      dup2\n      mstore\n        /* \"#utility.yul\":579:581   */\n      0x20\n        /* \"#utility.yul\":564:582   */\n      add\n        /* \"day6/TokenBank.sol\":1103:1248  function tokenReceive(address from,uint256 value) external  returns(bool){... */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"day6/TokenBank.sol\":200:223  MyToken public  mytoken */\n    tag_5:\n      sload(0x02)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":823:855   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":805:856   */\n      dup2\n      mstore\n        /* \"#utility.yul\":793:795   */\n      0x20\n        /* \"#utility.yul\":778:796   */\n      add\n        /* \"day6/TokenBank.sol\":200:223  MyToken public  mytoken */\n      tag_14\n        /* \"#utility.yul\":643:862   */\n      jump\n        /* \"day6/TokenBank.sol\":985:1095  function getbalance(address account) external view returns(uint256){... */\n    tag_6:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"day6/TokenBank.sol\":1070:1087  _balance[account] */\n      and\n        /* \"day6/TokenBank.sol\":1044:1051  uint256 */\n      0x00\n        /* \"day6/TokenBank.sol\":1070:1087  _balance[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"day6/TokenBank.sol\":985:1095  function getbalance(address account) external view returns(uint256){... */\n      jump\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1204:1229   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1192:1194   */\n      0x20\n        /* \"#utility.yul\":1177:1195   */\n      add\n        /* \"day6/TokenBank.sol\":985:1095  function getbalance(address account) external view returns(uint256){... */\n      tag_14\n        /* \"#utility.yul\":1058:1235   */\n      jump\n        /* \"day6/TokenBank.sol\":456:709  function deposit(uint256 value) external {... */\n    tag_7:\n      tag_8\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n        /* \"day6/TokenBank.sol\":717:977  function withDraw() external {... */\n    tag_9:\n        /* \"day6/TokenBank.sol\":777:782  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"day6/TokenBank.sol\":765:775  msg.sender */\n      caller\n        /* \"day6/TokenBank.sol\":765:782  msg.sender==admin */\n      eq\n        /* \"day6/TokenBank.sol\":757:783  require(msg.sender==admin) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"day6/TokenBank.sol\":826:830  this */\n      address\n        /* \"day6/TokenBank.sol\":794:807  uint256 value */\n      0x00\n        /* \"day6/TokenBank.sol\":809:832  _balance[address(this)] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"day6/TokenBank.sol\":851:858  mytoken */\n      sload(0x02)\n        /* \"day6/TokenBank.sol\":851:886  mytoken.transfer(msg.sender, value) */\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"day6/TokenBank.sol\":868:878  msg.sender */\n      caller\n        /* \"day6/TokenBank.sol\":851:886  mytoken.transfer(msg.sender, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1599:1650   */\n      mstore\n        /* \"#utility.yul\":1666:1684   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1659:1693   */\n      dup3\n      swap1\n      mstore\n        /* \"day6/TokenBank.sol\":809:832  _balance[address(this)] */\n      swap1\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"day6/TokenBank.sol\":851:858  mytoken */\n      and\n      swap1\n        /* \"day6/TokenBank.sol\":851:867  mytoken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1572:1590   */\n      0x44\n      add\n        /* \"day6/TokenBank.sol\":851:886  mytoken.transfer(msg.sender, value) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"day6/TokenBank.sol\":843:903  require(mytoken.transfer(msg.sender, value),\"transfer fail\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2188:2190   */\n      0x20\n        /* \"day6/TokenBank.sol\":843:903  require(mytoken.transfer(msg.sender, value),\"transfer fail\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2170:2191   */\n      mstore\n        /* \"#utility.yul\":2227:2229   */\n      0x0d\n        /* \"#utility.yul\":2207:2225   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2200:2230   */\n      mstore\n      shl(0x9a, 0x1d1c985b9cd9995c8819985a5b)\n        /* \"#utility.yul\":2246:2264   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2239:2282   */\n      mstore\n        /* \"#utility.yul\":2299:2317   */\n      0x64\n      add\n        /* \"day6/TokenBank.sol\":843:903  require(mytoken.transfer(msg.sender, value),\"transfer fail\") */\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"day6/TokenBank.sol\":923:933  msg.sender */\n      caller\n        /* \"day6/TokenBank.sol\":937:938  0 */\n      0x00\n        /* \"day6/TokenBank.sol\":914:934  _balance[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"day6/TokenBank.sol\":914:938  _balance[msg.sender] = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"day6/TokenBank.sol\":954:969  WithDraw(value) */\n      swap1\n      mload\n        /* \"#utility.yul\":1204:1229   */\n      dup3\n      dup2\n      mstore\n        /* \"day6/TokenBank.sol\":954:969  WithDraw(value) */\n      0xcbe159bbfa02836af5ba6d951958879a5d0b207331524c51ef4a58c95421e312\n      swap2\n        /* \"#utility.yul\":1177:1195   */\n      add\n        /* \"day6/TokenBank.sol\":954:969  WithDraw(value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"day6/TokenBank.sol\":746:977  {... */\n      pop\n        /* \"day6/TokenBank.sol\":717:977  function withDraw() external {... */\n      jump\t// out\n        /* \"day6/TokenBank.sol\":1103:1248  function tokenReceive(address from,uint256 value) external  returns(bool){... */\n    tag_13:\n        /* \"day6/TokenBank.sol\":1204:1208  this */\n      address\n        /* \"day6/TokenBank.sol\":1171:1175  bool */\n      0x00\n        /* \"day6/TokenBank.sol\":1187:1210  _balance[address(this)] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"day6/TokenBank.sol\":1187:1218  _balance[address(this)] +=value */\n      dup1\n      sload\n        /* \"day6/TokenBank.sol\":1213:1218  value */\n      dup4\n      swap2\n        /* \"day6/TokenBank.sol\":1187:1210  _balance[address(this)] */\n      swap1\n        /* \"day6/TokenBank.sol\":1171:1175  bool */\n      dup4\n      swap1\n        /* \"day6/TokenBank.sol\":1187:1218  _balance[address(this)] +=value */\n      tag_43\n      swap1\n        /* \"day6/TokenBank.sol\":1213:1218  value */\n      dup5\n      swap1\n        /* \"day6/TokenBank.sol\":1187:1218  _balance[address(this)] +=value */\n      tag_44\n      jump\t// in\n    tag_43:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"day6/TokenBank.sol\":1236:1240  true */\n      0x01\n      swap2\n      pop\n      pop\n        /* \"day6/TokenBank.sol\":1103:1248  function tokenReceive(address from,uint256 value) external  returns(bool){... */\n    tag_42:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"day6/TokenBank.sol\":456:709  function deposit(uint256 value) external {... */\n    tag_29:\n        /* \"day6/TokenBank.sol\":555:562  mytoken */\n      sload(0x02)\n        /* \"day6/TokenBank.sol\":555:606  mytoken.transferfrom(account, address(this), value) */\n      mload(0x40)\n      shl(0xe0, 0x63b0545f)\n      dup2\n      mstore\n        /* \"day6/TokenBank.sol\":526:536  msg.sender */\n      caller\n        /* \"day6/TokenBank.sol\":555:606  mytoken.transferfrom(account, address(this), value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2795:2829   */\n      dup2\n      swap1\n      mstore\n        /* \"day6/TokenBank.sol\":593:597  this */\n      address\n        /* \"#utility.yul\":2845:2863   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2838:2881   */\n      mstore\n        /* \"#utility.yul\":2897:2915   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2890:2924   */\n      dup5\n      swap1\n      mstore\n        /* \"day6/TokenBank.sol\":526:536  msg.sender */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"day6/TokenBank.sol\":555:562  mytoken */\n      and\n      swap1\n        /* \"day6/TokenBank.sol\":555:575  mytoken.transferfrom */\n      0x63b0545f\n      swap1\n        /* \"#utility.yul\":2730:2748   */\n      0x64\n      add\n        /* \"day6/TokenBank.sol\":555:606  mytoken.transferfrom(account, address(this), value) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_51:\n        /* \"day6/TokenBank.sol\":547:625  require(mytoken.transferfrom(account, address(this), value),\"transfer failed\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3137:3139   */\n      0x20\n        /* \"day6/TokenBank.sol\":547:625  require(mytoken.transferfrom(account, address(this), value),\"transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3119:3140   */\n      mstore\n        /* \"#utility.yul\":3176:3178   */\n      0x0f\n        /* \"#utility.yul\":3156:3174   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3149:3179   */\n      mstore\n      shl(0x8a, 0x1d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":3195:3213   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3188:3233   */\n      mstore\n        /* \"#utility.yul\":3250:3268   */\n      0x64\n      add\n        /* \"day6/TokenBank.sol\":547:625  require(mytoken.transferfrom(account, address(this), value),\"transfer failed\") */\n      tag_39\n        /* \"#utility.yul\":2935:3274   */\n      jump\n        /* \"day6/TokenBank.sol\":547:625  require(mytoken.transferfrom(account, address(this), value),\"transfer failed\") */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"day6/TokenBank.sol\":636:653  _balance[account] */\n      dup2\n      and\n        /* \"day6/TokenBank.sol\":636:644  _balance */\n      0x00\n        /* \"day6/TokenBank.sol\":636:653  _balance[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"day6/TokenBank.sol\":636:662  _balance[account] += value */\n      dup1\n      sload\n        /* \"day6/TokenBank.sol\":657:662  value */\n      dup5\n      swap3\n        /* \"day6/TokenBank.sol\":636:644  _balance */\n      swap1\n        /* \"day6/TokenBank.sol\":636:662  _balance[account] += value */\n      tag_55\n      swap1\n        /* \"day6/TokenBank.sol\":657:662  value */\n      dup5\n      swap1\n        /* \"day6/TokenBank.sol\":636:662  _balance[account] += value */\n      tag_44\n      jump\t// in\n    tag_55:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"day6/TokenBank.sol\":678:701  Deposit(account, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1617:1649   */\n      dup4\n      and\n        /* \"#utility.yul\":1599:1650   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1681:1683   */\n      0x20\n        /* \"#utility.yul\":1666:1684   */\n      dup2\n      add\n        /* \"#utility.yul\":1659:1693   */\n      dup5\n      swap1\n      mstore\n        /* \"day6/TokenBank.sol\":678:701  Deposit(account, value) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap2\n        /* \"#utility.yul\":1572:1590   */\n      add\n        /* \"day6/TokenBank.sol\":678:701  Deposit(account, value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"day6/TokenBank.sol\":497:709  {... */\n      pop\n        /* \"day6/TokenBank.sol\":456:709  function deposit(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_57:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_60:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_12:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_62:\n        /* \"#utility.yul\":360:389   */\n      tag_63\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_57\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":867:1053   */\n    tag_22:\n        /* \"#utility.yul\":926:932   */\n      0x00\n        /* \"#utility.yul\":979:981   */\n      0x20\n        /* \"#utility.yul\":967:976   */\n      dup3\n        /* \"#utility.yul\":958:965   */\n      dup5\n        /* \"#utility.yul\":954:977   */\n      sub\n        /* \"#utility.yul\":950:982   */\n      slt\n        /* \"#utility.yul\":947:999   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":995:996   */\n      0x00\n        /* \"#utility.yul\":992:993   */\n      dup1\n        /* \"#utility.yul\":985:997   */\n      revert\n        /* \"#utility.yul\":947:999   */\n    tag_67:\n        /* \"#utility.yul\":1018:1047   */\n      tag_68\n        /* \"#utility.yul\":1037:1046   */\n      dup3\n        /* \"#utility.yul\":1018:1047   */\n      tag_57\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1008:1047   */\n      swap4\n        /* \"#utility.yul\":867:1053   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1240:1420   */\n    tag_28:\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1352:1354   */\n      0x20\n        /* \"#utility.yul\":1340:1349   */\n      dup3\n        /* \"#utility.yul\":1331:1338   */\n      dup5\n        /* \"#utility.yul\":1327:1350   */\n      sub\n        /* \"#utility.yul\":1323:1355   */\n      slt\n        /* \"#utility.yul\":1320:1372   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1365:1366   */\n      dup1\n        /* \"#utility.yul\":1358:1370   */\n      revert\n        /* \"#utility.yul\":1320:1372   */\n    tag_71:\n      pop\n        /* \"#utility.yul\":1391:1414   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1240:1420   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:1981   */\n    tag_37:\n        /* \"#utility.yul\":1771:1777   */\n      0x00\n        /* \"#utility.yul\":1824:1826   */\n      0x20\n        /* \"#utility.yul\":1812:1821   */\n      dup3\n        /* \"#utility.yul\":1803:1810   */\n      dup5\n        /* \"#utility.yul\":1799:1822   */\n      sub\n        /* \"#utility.yul\":1795:1827   */\n      slt\n        /* \"#utility.yul\":1792:1844   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1840:1841   */\n      0x00\n        /* \"#utility.yul\":1837:1838   */\n      dup1\n        /* \"#utility.yul\":1830:1842   */\n      revert\n        /* \"#utility.yul\":1792:1844   */\n    tag_74:\n        /* \"#utility.yul\":1872:1881   */\n      dup2\n        /* \"#utility.yul\":1866:1882   */\n      mload\n        /* \"#utility.yul\":1925:1930   */\n      dup1\n        /* \"#utility.yul\":1918:1931   */\n      iszero\n        /* \"#utility.yul\":1911:1932   */\n      iszero\n        /* \"#utility.yul\":1904:1909   */\n      dup2\n        /* \"#utility.yul\":1901:1933   */\n      eq\n        /* \"#utility.yul\":1891:1951   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1944:1945   */\n      dup1\n        /* \"#utility.yul\":1937:1949   */\n      revert\n        /* \"#utility.yul\":2328:2550   */\n    tag_44:\n        /* \"#utility.yul\":2393:2402   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2414:2424   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2411:2544   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":2466:2476   */\n      0x4e487b71\n        /* \"#utility.yul\":2461:2464   */\n      0xe0\n        /* \"#utility.yul\":2457:2477   */\n      shl\n        /* \"#utility.yul\":2454:2455   */\n      0x00\n        /* \"#utility.yul\":2447:2478   */\n      mstore\n        /* \"#utility.yul\":2501:2505   */\n      0x11\n        /* \"#utility.yul\":2498:2499   */\n      0x04\n        /* \"#utility.yul\":2491:2506   */\n      mstore\n        /* \"#utility.yul\":2529:2533   */\n      0x24\n        /* \"#utility.yul\":2526:2527   */\n      0x00\n        /* \"#utility.yul\":2519:2534   */\n      revert\n\n    auxdata: 0xa2646970667358221220176b96a8147300781ff49fb5bc907245042756bf29204346abb784c12dea98dd64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1428": {
									"entryPoint": null,
									"id": 1428,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_MyToken_$1390_fromMemory": {
									"entryPoint": 70,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:322:9",
										"nodeType": "YulBlock",
										"src": "0:322:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "111:209:9",
													"nodeType": "YulBlock",
													"src": "111:209:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "157:16:9",
																"nodeType": "YulBlock",
																"src": "157:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "166:1:9",
																					"nodeType": "YulLiteral",
																					"src": "166:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "169:1:9",
																					"nodeType": "YulLiteral",
																					"src": "169:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "159:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "159:6:9"
																			},
																			"nativeSrc": "159:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "159:12:9"
																		},
																		"nativeSrc": "159:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "159:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "132:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "132:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "141:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "141:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "128:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "128:3:9"
																		},
																		"nativeSrc": "128:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "128:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "153:2:9",
																		"nodeType": "YulLiteral",
																		"src": "153:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "124:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "124:3:9"
																},
																"nativeSrc": "124:32:9",
																"nodeType": "YulFunctionCall",
																"src": "124:32:9"
															},
															"nativeSrc": "121:52:9",
															"nodeType": "YulIf",
															"src": "121:52:9"
														},
														{
															"nativeSrc": "182:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "182:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "201:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "201:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "195:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "195:5:9"
																},
																"nativeSrc": "195:16:9",
																"nodeType": "YulFunctionCall",
																"src": "195:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "186:5:9",
																	"nodeType": "YulTypedName",
																	"src": "186:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "274:16:9",
																"nodeType": "YulBlock",
																"src": "274:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "283:1:9",
																					"nodeType": "YulLiteral",
																					"src": "283:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "286:1:9",
																					"nodeType": "YulLiteral",
																					"src": "286:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "276:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "276:6:9"
																			},
																			"nativeSrc": "276:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "276:12:9"
																		},
																		"nativeSrc": "276:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "276:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "233:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "233:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "244:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "244:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "259:3:9",
																										"nodeType": "YulLiteral",
																										"src": "259:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "264:1:9",
																										"nodeType": "YulLiteral",
																										"src": "264:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "255:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "255:3:9"
																								},
																								"nativeSrc": "255:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "255:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "268:1:9",
																								"nodeType": "YulLiteral",
																								"src": "268:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "251:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "251:3:9"
																						},
																						"nativeSrc": "251:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "251:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "240:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "240:3:9"
																				},
																				"nativeSrc": "240:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "240:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "230:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "230:2:9"
																		},
																		"nativeSrc": "230:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "230:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:9"
																},
																"nativeSrc": "223:50:9",
																"nodeType": "YulFunctionCall",
																"src": "223:50:9"
															},
															"nativeSrc": "220:70:9",
															"nodeType": "YulIf",
															"src": "220:70:9"
														},
														{
															"nativeSrc": "299:15:9",
															"nodeType": "YulAssignment",
															"src": "299:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "309:5:9",
																"nodeType": "YulIdentifier",
																"src": "309:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "299:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_MyToken_$1390_fromMemory",
												"nativeSrc": "14:306:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "77:9:9",
														"nodeType": "YulTypedName",
														"src": "77:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "88:7:9",
														"nodeType": "YulTypedName",
														"src": "88:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "100:6:9",
														"nodeType": "YulTypedName",
														"src": "100:6:9",
														"type": ""
													}
												],
												"src": "14:306:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_MyToken_$1390_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516104e53803806104e583398101604081905261002e91610046565b50600180546001600160a01b03191633179055610073565b5f60208284031215610056575f80fd5b81516001600160a01b038116811461006c575f80fd5b9392505050565b610465806100805f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80630fdb1c1014610059578063503c2b0e146100635780635eab74fc1461008b57806368116177146100b6578063b6b55f25146100ec575b5f80fd5b6100616100ff565b005b610076610071366004610392565b61021e565b60405190151581526020015b60405180910390f35b60025461009e906001600160a01b031681565b6040516001600160a01b039091168152602001610082565b6100de6100c43660046103ba565b6001600160a01b03165f9081526020819052604090205490565b604051908152602001610082565b6100616100fa3660046103da565b61024e565b6001546001600160a01b03163314610115575f80fd5b305f908152602081905260409081902054600254915163a9059cbb60e01b81523360048201526024810182905290916001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610173573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061019791906103f1565b6101d85760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b60448201526064015b60405180910390fd5b335f908152602081815260408083209290925590518281527fcbe159bbfa02836af5ba6d951958879a5d0b207331524c51ef4a58c95421e312910160405180910390a150565b305f9081526020819052604081208054839190839061023e908490610410565b9091555060019150505b92915050565b6002546040516363b0545f60e01b8152336004820181905230602483015260448201849052916001600160a01b0316906363b0545f906064016020604051808303815f875af11580156102a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c791906103f1565b6103055760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016101cf565b6001600160a01b0381165f908152602081905260408120805484929061032c908490610410565b9091555050604080516001600160a01b0383168152602081018490527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a15050565b80356001600160a01b038116811461038d575f80fd5b919050565b5f80604083850312156103a3575f80fd5b6103ac83610377565b946020939093013593505050565b5f602082840312156103ca575f80fd5b6103d382610377565b9392505050565b5f602082840312156103ea575f80fd5b5035919050565b5f60208284031215610401575f80fd5b815180151581146103d3575f80fd5b8082018082111561024857634e487b7160e01b5f52601160045260245ffdfea2646970667358221220176b96a8147300781ff49fb5bc907245042756bf29204346abb784c12dea98dd64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4E5 CODESIZE SUB DUP1 PUSH2 0x4E5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x46 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x73 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x465 DUP1 PUSH2 0x80 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x503C2B0E EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x5EAB74FC EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x68116177 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x82 JUMP JUMPDEST PUSH2 0xDE PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x82 JUMP JUMPDEST PUSH2 0x61 PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x173 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1D1C985B9CD9995C8819985A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0xCBE159BBFA02836AF5BA6D951958879A5D0B207331524C51EF4A58C95421E312 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x23E SWAP1 DUP5 SWAP1 PUSH2 0x410 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x63B0545F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x63B0545F SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x32C SWAP1 DUP5 SWAP1 PUSH2 0x410 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3AC DUP4 PUSH2 0x377 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3D3 DUP3 PUSH2 0x377 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x401 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x248 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH12 0x96A8147300781FF49FB5BC90 PUSH19 0x45042756BF29204346ABB784C12DEA98DD6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "88:1171:8:-:0;;;324:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;391:5:8;:18;;-1:-1:-1;;;;;;391:18:8;399:10;391:18;;;88:1171;;14:306:9;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:9;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:9:o;:::-;88:1171:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_1463": {
									"entryPoint": 590,
									"id": 1463,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getbalance_1516": {
									"entryPoint": null,
									"id": 1516,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mytoken_1402": {
									"entryPoint": null,
									"id": 1402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenReceive_1537": {
									"entryPoint": 542,
									"id": 1537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withDraw_1504": {
									"entryPoint": 255,
									"id": 1504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_MyToken_$1390__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3276:9",
										"nodeType": "YulBlock",
										"src": "0:3276:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:9",
													"nodeType": "YulBlock",
													"src": "63:124:9",
													"statements": [
														{
															"nativeSrc": "73:29:9",
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nativeSrc": "82:20:9",
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:9",
																"nodeType": "YulBlock",
																"src": "165:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:9",
																					"nodeType": "YulLiteral",
																					"src": "174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:9",
																					"nodeType": "YulLiteral",
																					"src": "177:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:9"
																			},
																			"nativeSrc": "167:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:9"
																		},
																		"nativeSrc": "167:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:9",
																										"nodeType": "YulLiteral",
																										"src": "150:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:9",
																										"nodeType": "YulLiteral",
																										"src": "155:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:9"
																								},
																								"nativeSrc": "146:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:9",
																								"nodeType": "YulLiteral",
																								"src": "159:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:9"
																						},
																						"nativeSrc": "142:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nativeSrc": "131:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nativeSrc": "121:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nativeSrc": "114:50:9",
																"nodeType": "YulFunctionCall",
																"src": "114:50:9"
															},
															"nativeSrc": "111:70:9",
															"nodeType": "YulIf",
															"src": "111:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:9",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:9",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:173:9"
											},
											{
												"body": {
													"nativeSrc": "279:167:9",
													"nodeType": "YulBlock",
													"src": "279:167:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:9",
																"nodeType": "YulBlock",
																"src": "325:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:9",
																					"nodeType": "YulLiteral",
																					"src": "334:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:9",
																					"nodeType": "YulLiteral",
																					"src": "337:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:9"
																			},
																			"nativeSrc": "327:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:9"
																		},
																		"nativeSrc": "327:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:9"
																		},
																		"nativeSrc": "296:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:9",
																		"nodeType": "YulLiteral",
																		"src": "321:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:9"
																},
																"nativeSrc": "292:32:9",
																"nodeType": "YulFunctionCall",
																"src": "292:32:9"
															},
															"nativeSrc": "289:52:9",
															"nodeType": "YulIf",
															"src": "289:52:9"
														},
														{
															"nativeSrc": "350:39:9",
															"nodeType": "YulAssignment",
															"src": "350:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:9"
																},
																"nativeSrc": "360:29:9",
																"nodeType": "YulFunctionCall",
																"src": "360:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:9"
																}
															]
														},
														{
															"nativeSrc": "398:42:9",
															"nodeType": "YulAssignment",
															"src": "398:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "425:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "436:2:9",
																				"nodeType": "YulLiteral",
																				"src": "436:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "421:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:9"
																		},
																		"nativeSrc": "421:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "408:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:9"
																},
																"nativeSrc": "408:32:9",
																"nodeType": "YulFunctionCall",
																"src": "408:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "398:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "192:254:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:9",
														"nodeType": "YulTypedName",
														"src": "237:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:9",
														"nodeType": "YulTypedName",
														"src": "248:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:9",
														"nodeType": "YulTypedName",
														"src": "260:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:9",
														"nodeType": "YulTypedName",
														"src": "268:6:9",
														"type": ""
													}
												],
												"src": "192:254:9"
											},
											{
												"body": {
													"nativeSrc": "546:92:9",
													"nodeType": "YulBlock",
													"src": "546:92:9",
													"statements": [
														{
															"nativeSrc": "556:26:9",
															"nodeType": "YulAssignment",
															"src": "556:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "568:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "568:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "579:2:9",
																		"nodeType": "YulLiteral",
																		"src": "579:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "564:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "564:3:9"
																},
																"nativeSrc": "564:18:9",
																"nodeType": "YulFunctionCall",
																"src": "564:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "556:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "556:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "598:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "623:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "623:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "616:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "616:6:9"
																				},
																				"nativeSrc": "616:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "616:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "609:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "609:6:9"
																		},
																		"nativeSrc": "609:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "609:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "591:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "591:6:9"
																},
																"nativeSrc": "591:41:9",
																"nodeType": "YulFunctionCall",
																"src": "591:41:9"
															},
															"nativeSrc": "591:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "591:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "451:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "515:9:9",
														"nodeType": "YulTypedName",
														"src": "515:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "526:6:9",
														"nodeType": "YulTypedName",
														"src": "526:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "537:4:9",
														"nodeType": "YulTypedName",
														"src": "537:4:9",
														"type": ""
													}
												],
												"src": "451:187:9"
											},
											{
												"body": {
													"nativeSrc": "760:102:9",
													"nodeType": "YulBlock",
													"src": "760:102:9",
													"statements": [
														{
															"nativeSrc": "770:26:9",
															"nodeType": "YulAssignment",
															"src": "770:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "782:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "782:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "793:2:9",
																		"nodeType": "YulLiteral",
																		"src": "793:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "778:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:9"
																},
																"nativeSrc": "778:18:9",
																"nodeType": "YulFunctionCall",
																"src": "778:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "770:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "770:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "812:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "812:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "827:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "827:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "843:3:9",
																								"nodeType": "YulLiteral",
																								"src": "843:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "848:1:9",
																								"nodeType": "YulLiteral",
																								"src": "848:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "839:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "839:3:9"
																						},
																						"nativeSrc": "839:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "839:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "852:1:9",
																						"nodeType": "YulLiteral",
																						"src": "852:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "835:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "835:3:9"
																				},
																				"nativeSrc": "835:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "835:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "823:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "823:3:9"
																		},
																		"nativeSrc": "823:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "823:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "805:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:9"
																},
																"nativeSrc": "805:51:9",
																"nodeType": "YulFunctionCall",
																"src": "805:51:9"
															},
															"nativeSrc": "805:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "805:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_MyToken_$1390__to_t_address__fromStack_reversed",
												"nativeSrc": "643:219:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "729:9:9",
														"nodeType": "YulTypedName",
														"src": "729:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "740:6:9",
														"nodeType": "YulTypedName",
														"src": "740:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "751:4:9",
														"nodeType": "YulTypedName",
														"src": "751:4:9",
														"type": ""
													}
												],
												"src": "643:219:9"
											},
											{
												"body": {
													"nativeSrc": "937:116:9",
													"nodeType": "YulBlock",
													"src": "937:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "983:16:9",
																"nodeType": "YulBlock",
																"src": "983:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "992:1:9",
																					"nodeType": "YulLiteral",
																					"src": "992:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "995:1:9",
																					"nodeType": "YulLiteral",
																					"src": "995:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "985:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "985:6:9"
																			},
																			"nativeSrc": "985:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "985:12:9"
																		},
																		"nativeSrc": "985:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "985:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "958:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "958:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "967:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "967:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "954:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "954:3:9"
																		},
																		"nativeSrc": "954:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "954:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "979:2:9",
																		"nodeType": "YulLiteral",
																		"src": "979:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "950:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:9"
																},
																"nativeSrc": "950:32:9",
																"nodeType": "YulFunctionCall",
																"src": "950:32:9"
															},
															"nativeSrc": "947:52:9",
															"nodeType": "YulIf",
															"src": "947:52:9"
														},
														{
															"nativeSrc": "1008:39:9",
															"nodeType": "YulAssignment",
															"src": "1008:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1018:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1018:18:9"
																},
																"nativeSrc": "1018:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1018:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1008:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1008:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "867:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "903:9:9",
														"nodeType": "YulTypedName",
														"src": "903:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "914:7:9",
														"nodeType": "YulTypedName",
														"src": "914:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "926:6:9",
														"nodeType": "YulTypedName",
														"src": "926:6:9",
														"type": ""
													}
												],
												"src": "867:186:9"
											},
											{
												"body": {
													"nativeSrc": "1159:76:9",
													"nodeType": "YulBlock",
													"src": "1159:76:9",
													"statements": [
														{
															"nativeSrc": "1169:26:9",
															"nodeType": "YulAssignment",
															"src": "1169:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1181:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1181:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1192:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1192:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1177:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1177:3:9"
																},
																"nativeSrc": "1177:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1177:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1169:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1169:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1211:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1211:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1222:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1222:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1204:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1204:6:9"
																},
																"nativeSrc": "1204:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1204:25:9"
															},
															"nativeSrc": "1204:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1204:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1058:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1128:9:9",
														"nodeType": "YulTypedName",
														"src": "1128:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1139:6:9",
														"nodeType": "YulTypedName",
														"src": "1139:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1150:4:9",
														"nodeType": "YulTypedName",
														"src": "1150:4:9",
														"type": ""
													}
												],
												"src": "1058:177:9"
											},
											{
												"body": {
													"nativeSrc": "1310:110:9",
													"nodeType": "YulBlock",
													"src": "1310:110:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1356:16:9",
																"nodeType": "YulBlock",
																"src": "1356:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1365:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1358:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:9"
																			},
																			"nativeSrc": "1358:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1358:12:9"
																		},
																		"nativeSrc": "1358:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1331:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1331:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1340:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1340:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1327:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:9"
																		},
																		"nativeSrc": "1327:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1327:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1352:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1352:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1323:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1323:3:9"
																},
																"nativeSrc": "1323:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1323:32:9"
															},
															"nativeSrc": "1320:52:9",
															"nodeType": "YulIf",
															"src": "1320:52:9"
														},
														{
															"nativeSrc": "1381:33:9",
															"nodeType": "YulAssignment",
															"src": "1381:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1404:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1391:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1391:12:9"
																},
																"nativeSrc": "1391:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1391:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1381:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1381:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1240:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1276:9:9",
														"nodeType": "YulTypedName",
														"src": "1276:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1287:7:9",
														"nodeType": "YulTypedName",
														"src": "1287:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1299:6:9",
														"nodeType": "YulTypedName",
														"src": "1299:6:9",
														"type": ""
													}
												],
												"src": "1240:180:9"
											},
											{
												"body": {
													"nativeSrc": "1554:145:9",
													"nodeType": "YulBlock",
													"src": "1554:145:9",
													"statements": [
														{
															"nativeSrc": "1564:26:9",
															"nodeType": "YulAssignment",
															"src": "1564:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1576:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1576:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1587:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1587:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1572:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1572:3:9"
																},
																"nativeSrc": "1572:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1572:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1564:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1564:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1606:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1606:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1621:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1621:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1637:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1637:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1642:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1642:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1633:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1633:3:9"
																						},
																						"nativeSrc": "1633:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1633:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1646:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1646:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1629:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1629:3:9"
																				},
																				"nativeSrc": "1629:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1629:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1617:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1617:3:9"
																		},
																		"nativeSrc": "1617:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1617:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1599:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:9"
																},
																"nativeSrc": "1599:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1599:51:9"
															},
															"nativeSrc": "1599:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1599:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1670:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1670:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1681:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1681:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1666:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1666:3:9"
																		},
																		"nativeSrc": "1666:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1686:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1686:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1659:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:9"
																},
																"nativeSrc": "1659:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1659:34:9"
															},
															"nativeSrc": "1659:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1659:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1425:274:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1515:9:9",
														"nodeType": "YulTypedName",
														"src": "1515:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1526:6:9",
														"nodeType": "YulTypedName",
														"src": "1526:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1534:6:9",
														"nodeType": "YulTypedName",
														"src": "1534:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1545:4:9",
														"nodeType": "YulTypedName",
														"src": "1545:4:9",
														"type": ""
													}
												],
												"src": "1425:274:9"
											},
											{
												"body": {
													"nativeSrc": "1782:199:9",
													"nodeType": "YulBlock",
													"src": "1782:199:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1828:16:9",
																"nodeType": "YulBlock",
																"src": "1828:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1837:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1837:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1840:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1840:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1830:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1830:6:9"
																			},
																			"nativeSrc": "1830:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1830:12:9"
																		},
																		"nativeSrc": "1830:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1830:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1803:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1812:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1812:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:9"
																		},
																		"nativeSrc": "1799:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1824:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1824:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1795:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1795:3:9"
																},
																"nativeSrc": "1795:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1795:32:9"
															},
															"nativeSrc": "1792:52:9",
															"nodeType": "YulIf",
															"src": "1792:52:9"
														},
														{
															"nativeSrc": "1853:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1853:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1872:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1872:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1866:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1866:5:9"
																},
																"nativeSrc": "1866:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1866:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1857:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1857:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1935:16:9",
																"nodeType": "YulBlock",
																"src": "1935:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1944:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1944:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1947:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1947:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1937:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1937:6:9"
																			},
																			"nativeSrc": "1937:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1937:12:9"
																		},
																		"nativeSrc": "1937:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1937:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1904:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1904:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1925:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1925:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1918:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "1918:6:9"
																						},
																						"nativeSrc": "1918:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1918:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1911:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1911:6:9"
																				},
																				"nativeSrc": "1911:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1911:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1901:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1901:2:9"
																		},
																		"nativeSrc": "1901:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1901:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1894:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1894:6:9"
																},
																"nativeSrc": "1894:40:9",
																"nodeType": "YulFunctionCall",
																"src": "1894:40:9"
															},
															"nativeSrc": "1891:60:9",
															"nodeType": "YulIf",
															"src": "1891:60:9"
														},
														{
															"nativeSrc": "1960:15:9",
															"nodeType": "YulAssignment",
															"src": "1960:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1970:5:9",
																"nodeType": "YulIdentifier",
																"src": "1970:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1960:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1960:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "1704:277:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1748:9:9",
														"nodeType": "YulTypedName",
														"src": "1748:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1759:7:9",
														"nodeType": "YulTypedName",
														"src": "1759:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1771:6:9",
														"nodeType": "YulTypedName",
														"src": "1771:6:9",
														"type": ""
													}
												],
												"src": "1704:277:9"
											},
											{
												"body": {
													"nativeSrc": "2160:163:9",
													"nodeType": "YulBlock",
													"src": "2160:163:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2177:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2177:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2188:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2188:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2170:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2170:6:9"
																},
																"nativeSrc": "2170:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2170:21:9"
															},
															"nativeSrc": "2170:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2170:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2211:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2222:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2222:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2207:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:9"
																		},
																		"nativeSrc": "2207:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2207:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2227:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2227:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2200:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2200:6:9"
																},
																"nativeSrc": "2200:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2200:30:9"
															},
															"nativeSrc": "2200:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "2200:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2250:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2250:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2261:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2261:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2246:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2246:3:9"
																		},
																		"nativeSrc": "2246:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:18:9"
																	},
																	{
																		"hexValue": "7472616e73666572206661696c",
																		"kind": "string",
																		"nativeSrc": "2266:15:9",
																		"nodeType": "YulLiteral",
																		"src": "2266:15:9",
																		"type": "",
																		"value": "transfer fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2239:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:9"
																},
																"nativeSrc": "2239:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2239:43:9"
															},
															"nativeSrc": "2239:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "2239:43:9"
														},
														{
															"nativeSrc": "2291:26:9",
															"nodeType": "YulAssignment",
															"src": "2291:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2303:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2314:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2299:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2299:3:9"
																},
																"nativeSrc": "2299:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2299:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2291:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2291:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1986:337:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2137:9:9",
														"nodeType": "YulTypedName",
														"src": "2137:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2151:4:9",
														"nodeType": "YulTypedName",
														"src": "2151:4:9",
														"type": ""
													}
												],
												"src": "1986:337:9"
											},
											{
												"body": {
													"nativeSrc": "2376:174:9",
													"nodeType": "YulBlock",
													"src": "2376:174:9",
													"statements": [
														{
															"nativeSrc": "2386:16:9",
															"nodeType": "YulAssignment",
															"src": "2386:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2397:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2397:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2400:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2400:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2393:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:9"
																},
																"nativeSrc": "2393:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2393:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2386:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2386:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2433:111:9",
																"nodeType": "YulBlock",
																"src": "2433:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2454:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2461:3:9",
																							"nodeType": "YulLiteral",
																							"src": "2461:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2466:10:9",
																							"nodeType": "YulLiteral",
																							"src": "2466:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2457:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2457:3:9"
																					},
																					"nativeSrc": "2457:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2457:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2447:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:9"
																			},
																			"nativeSrc": "2447:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2447:31:9"
																		},
																		"nativeSrc": "2447:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2498:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2498:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2501:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2501:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2491:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2491:6:9"
																			},
																			"nativeSrc": "2491:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2491:15:9"
																		},
																		"nativeSrc": "2491:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2491:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2529:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2529:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2519:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2519:6:9"
																			},
																			"nativeSrc": "2519:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2519:15:9"
																		},
																		"nativeSrc": "2519:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2519:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2417:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2417:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2420:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2420:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2414:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2414:2:9"
																},
																"nativeSrc": "2414:10:9",
																"nodeType": "YulFunctionCall",
																"src": "2414:10:9"
															},
															"nativeSrc": "2411:133:9",
															"nodeType": "YulIf",
															"src": "2411:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2328:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2359:1:9",
														"nodeType": "YulTypedName",
														"src": "2359:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2362:1:9",
														"nodeType": "YulTypedName",
														"src": "2362:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2368:3:9",
														"nodeType": "YulTypedName",
														"src": "2368:3:9",
														"type": ""
													}
												],
												"src": "2328:222:9"
											},
											{
												"body": {
													"nativeSrc": "2712:218:9",
													"nodeType": "YulBlock",
													"src": "2712:218:9",
													"statements": [
														{
															"nativeSrc": "2722:26:9",
															"nodeType": "YulAssignment",
															"src": "2722:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2734:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2734:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2745:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2745:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2730:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2730:3:9"
																},
																"nativeSrc": "2730:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2730:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2722:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2722:4:9"
																}
															]
														},
														{
															"nativeSrc": "2757:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2757:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2775:3:9",
																				"nodeType": "YulLiteral",
																				"src": "2775:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2780:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2780:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2771:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2771:3:9"
																		},
																		"nativeSrc": "2771:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2771:11:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2784:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2784:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2767:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2767:3:9"
																},
																"nativeSrc": "2767:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2767:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2761:2:9",
																	"nodeType": "YulTypedName",
																	"src": "2761:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2802:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2802:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2817:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2817:6:9"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2825:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2825:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2813:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:9"
																		},
																		"nativeSrc": "2813:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2795:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:9"
																},
																"nativeSrc": "2795:34:9",
																"nodeType": "YulFunctionCall",
																"src": "2795:34:9"
															},
															"nativeSrc": "2795:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "2795:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2860:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2845:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2845:3:9"
																		},
																		"nativeSrc": "2845:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2845:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2869:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2869:6:9"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2877:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2877:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2865:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2865:3:9"
																		},
																		"nativeSrc": "2865:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2865:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2838:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2838:6:9"
																},
																"nativeSrc": "2838:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2838:43:9"
															},
															"nativeSrc": "2838:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "2838:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2901:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2901:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2912:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2912:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2897:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2897:3:9"
																		},
																		"nativeSrc": "2897:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2897:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2917:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2917:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2890:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2890:6:9"
																},
																"nativeSrc": "2890:34:9",
																"nodeType": "YulFunctionCall",
																"src": "2890:34:9"
															},
															"nativeSrc": "2890:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "2890:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2555:375:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2665:9:9",
														"nodeType": "YulTypedName",
														"src": "2665:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2676:6:9",
														"nodeType": "YulTypedName",
														"src": "2676:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2684:6:9",
														"nodeType": "YulTypedName",
														"src": "2684:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2692:6:9",
														"nodeType": "YulTypedName",
														"src": "2692:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2703:4:9",
														"nodeType": "YulTypedName",
														"src": "2703:4:9",
														"type": ""
													}
												],
												"src": "2555:375:9"
											},
											{
												"body": {
													"nativeSrc": "3109:165:9",
													"nodeType": "YulBlock",
													"src": "3109:165:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3126:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3126:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3119:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3119:6:9"
																},
																"nativeSrc": "3119:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3119:21:9"
															},
															"nativeSrc": "3119:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3119:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3160:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3160:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3171:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3171:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3156:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3156:3:9"
																		},
																		"nativeSrc": "3156:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3156:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3176:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3176:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3149:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:9"
																},
																"nativeSrc": "3149:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3149:30:9"
															},
															"nativeSrc": "3149:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3149:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3199:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3210:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3210:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3195:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:9"
																		},
																		"nativeSrc": "3195:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3195:18:9"
																	},
																	{
																		"hexValue": "7472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "3215:17:9",
																		"nodeType": "YulLiteral",
																		"src": "3215:17:9",
																		"type": "",
																		"value": "transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3188:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:9"
																},
																"nativeSrc": "3188:45:9",
																"nodeType": "YulFunctionCall",
																"src": "3188:45:9"
															},
															"nativeSrc": "3188:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "3188:45:9"
														},
														{
															"nativeSrc": "3242:26:9",
															"nodeType": "YulAssignment",
															"src": "3242:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3254:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3254:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3265:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3265:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3250:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3250:3:9"
																},
																"nativeSrc": "3250:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3250:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3242:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3242:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2935:339:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3086:9:9",
														"nodeType": "YulTypedName",
														"src": "3086:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3100:4:9",
														"nodeType": "YulTypedName",
														"src": "3100:4:9",
														"type": ""
													}
												],
												"src": "2935:339:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_MyToken_$1390__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"transfer fail\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"transfer failed\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80630fdb1c1014610059578063503c2b0e146100635780635eab74fc1461008b57806368116177146100b6578063b6b55f25146100ec575b5f80fd5b6100616100ff565b005b610076610071366004610392565b61021e565b60405190151581526020015b60405180910390f35b60025461009e906001600160a01b031681565b6040516001600160a01b039091168152602001610082565b6100de6100c43660046103ba565b6001600160a01b03165f9081526020819052604090205490565b604051908152602001610082565b6100616100fa3660046103da565b61024e565b6001546001600160a01b03163314610115575f80fd5b305f908152602081905260409081902054600254915163a9059cbb60e01b81523360048201526024810182905290916001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610173573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061019791906103f1565b6101d85760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b60448201526064015b60405180910390fd5b335f908152602081815260408083209290925590518281527fcbe159bbfa02836af5ba6d951958879a5d0b207331524c51ef4a58c95421e312910160405180910390a150565b305f9081526020819052604081208054839190839061023e908490610410565b9091555060019150505b92915050565b6002546040516363b0545f60e01b8152336004820181905230602483015260448201849052916001600160a01b0316906363b0545f906064016020604051808303815f875af11580156102a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c791906103f1565b6103055760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016101cf565b6001600160a01b0381165f908152602081905260408120805484929061032c908490610410565b9091555050604080516001600160a01b0383168152602081018490527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a15050565b80356001600160a01b038116811461038d575f80fd5b919050565b5f80604083850312156103a3575f80fd5b6103ac83610377565b946020939093013593505050565b5f602082840312156103ca575f80fd5b6103d382610377565b9392505050565b5f602082840312156103ea575f80fd5b5035919050565b5f60208284031215610401575f80fd5b815180151581146103d3575f80fd5b8082018082111561024857634e487b7160e01b5f52601160045260245ffdfea2646970667358221220176b96a8147300781ff49fb5bc907245042756bf29204346abb784c12dea98dd64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x503C2B0E EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x5EAB74FC EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x68116177 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x82 JUMP JUMPDEST PUSH2 0xDE PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x82 JUMP JUMPDEST PUSH2 0x61 PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x173 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1D1C985B9CD9995C8819985A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0xCBE159BBFA02836AF5BA6D951958879A5D0B207331524C51EF4A58C95421E312 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x23E SWAP1 DUP5 SWAP1 PUSH2 0x410 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x63B0545F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x63B0545F SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x32C SWAP1 DUP5 SWAP1 PUSH2 0x410 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3AC DUP4 PUSH2 0x377 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3D3 DUP3 PUSH2 0x377 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x401 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x248 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH12 0x96A8147300781FF49FB5BC90 PUSH19 0x45042756BF29204346ABB784C12DEA98DD6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "88:1171:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:260;;;:::i;:::-;;1103:145;;;;;;:::i;:::-;;:::i;:::-;;;616:14:9;;609:22;591:41;;579:2;564:18;1103:145:8;;;;;;;;200:23;;;;;-1:-1:-1;;;;;200:23:8;;;;;;-1:-1:-1;;;;;823:32:9;;;805:51;;793:2;778:18;200:23:8;643:219:9;985:110:8;;;;;;:::i;:::-;-1:-1:-1;;;;;1070:17:8;1044:7;1070:17;;;;;;;;;;;;985:110;;;;1204:25:9;;;1192:2;1177:18;985:110:8;1058:177:9;456:253:8;;;;;;:::i;:::-;;:::i;717:260::-;777:5;;-1:-1:-1;;;;;777:5:8;765:10;:17;757:26;;;;;;826:4;794:13;809:23;;;;;;;;;;;;;851:7;;:35;;-1:-1:-1;;;851:35:8;;868:10;851:35;;;1599:51:9;1666:18;;;1659:34;;;809:23:8;;-1:-1:-1;;;;;851:7:8;;:16;;1572:18:9;;851:35:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;843:60;;;;-1:-1:-1;;;843:60:8;;2188:2:9;843:60:8;;;2170:21:9;2227:2;2207:18;;;2200:30;-1:-1:-1;;;2246:18:9;;;2239:43;2299:18;;843:60:8;;;;;;;;;923:10;937:1;914:20;;;;;;;;;;;:24;;;;954:15;;1204:25:9;;;954:15:8;;1177:18:9;954:15:8;;;;;;;746:231;717:260::o;1103:145::-;1204:4;1171;1187:23;;;;;;;;;;:31;;1213:5;;1187:23;1171:4;;1187:31;;1213:5;;1187:31;:::i;:::-;;;;-1:-1:-1;1236:4:8;;-1:-1:-1;;1103:145:8;;;;;:::o;456:253::-;555:7;;:51;;-1:-1:-1;;;555:51:8;;526:10;555:51;;;2795:34:9;;;593:4:8;2845:18:9;;;2838:43;2897:18;;;2890:34;;;526:10:8;-1:-1:-1;;;;;555:7:8;;:20;;2730:18:9;;555:51:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;547:78;;;;-1:-1:-1;;;547:78:8;;3137:2:9;547:78:8;;;3119:21:9;3176:2;3156:18;;;3149:30;-1:-1:-1;;;3195:18:9;;;3188:45;3250:18;;547:78:8;2935:339:9;547:78:8;-1:-1:-1;;;;;636:17:8;;:8;:17;;;;;;;;;;:26;;657:5;;636:8;:26;;657:5;;636:26;:::i;:::-;;;;-1:-1:-1;;678:23:8;;;-1:-1:-1;;;;;1617:32:9;;1599:51;;1681:2;1666:18;;1659:34;;;678:23:8;;1572:18:9;678:23:8;;;;;;;497:212;456:253;:::o;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:9:o;867:186::-;926:6;979:2;967:9;958:7;954:23;950:32;947:52;;;995:1;992;985:12;947:52;1018:29;1037:9;1018:29;:::i;:::-;1008:39;867:186;-1:-1:-1;;;867:186:9:o;1240:180::-;1299:6;1352:2;1340:9;1331:7;1327:23;1323:32;1320:52;;;1368:1;1365;1358:12;1320:52;-1:-1:-1;1391:23:9;;1240:180;-1:-1:-1;1240:180:9:o;1704:277::-;1771:6;1824:2;1812:9;1803:7;1799:23;1795:32;1792:52;;;1840:1;1837;1830:12;1792:52;1872:9;1866:16;1925:5;1918:13;1911:21;1904:5;1901:32;1891:60;;1947:1;1944;1937:12;2328:222;2393:9;;;2414:10;;;2411:133;;;2466:10;2461:3;2457:20;2454:1;2447:31;2501:4;2498:1;2491:15;2529:4;2526:1;2519:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "225000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit(uint256)": "infinite",
								"getbalance(address)": "2581",
								"mytoken()": "2358",
								"tokenReceive(address,uint256)": "infinite",
								"withDraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 1259,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 417,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 417,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 417,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 417,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 417,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 324,
									"end": 417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 324,
									"end": 417,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 391,
									"end": 396,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 391,
									"end": 409,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 391,
									"end": 409,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 391,
									"end": 409,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 399,
									"end": 409,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 391,
									"end": 409,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 391,
									"end": 409,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 391,
									"end": 409,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 320,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 320,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 100,
									"end": 106,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 155,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 141,
									"end": 150,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 132,
									"end": 139,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 128,
									"end": 151,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 124,
									"end": 156,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 121,
									"end": 173,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 121,
									"end": 173,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 121,
									"end": 173,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 169,
									"end": 170,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 167,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 159,
									"end": 171,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 121,
									"end": 173,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 121,
									"end": 173,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 195,
									"end": 211,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 195,
									"end": 211,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 240,
									"end": 271,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 240,
									"end": 271,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 230,
									"end": 272,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 230,
									"end": 272,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 220,
									"end": 290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 220,
									"end": 290,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 286,
									"end": 287,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 284,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 276,
									"end": 288,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 290,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 220,
									"end": 290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 309,
									"end": 314,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 320,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 320,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 320,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1259,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220176b96a8147300781ff49fb5bc907245042756bf29204346abb784c12dea98dd64736f6c63430008160033",
									".code": [
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "FDB1C10"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "503C2B0E"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "5EAB74FC"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "68116177"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "B6B55F25"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 88,
											"end": 1259,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 717,
											"end": 977,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 717,
											"end": 977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 717,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 717,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 717,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 717,
											"end": 977,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 717,
											"end": 977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 717,
											"end": 977,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1103,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1103,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 616,
											"end": 630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 616,
											"end": 630,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 609,
											"end": 631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 591,
											"end": 632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 591,
											"end": 632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 579,
											"end": 581,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 564,
											"end": 582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 200,
											"end": 223,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 200,
											"end": 223,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 223,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 200,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 200,
											"end": 223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 200,
											"end": 223,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 200,
											"end": 223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 200,
											"end": 223,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 200,
											"end": 223,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 200,
											"end": 223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 200,
											"end": 223,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 223,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 823,
											"end": 855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 855,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 823,
											"end": 855,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 805,
											"end": 856,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 805,
											"end": 856,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 793,
											"end": 795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 200,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 643,
											"end": 862,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 985,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1044,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1058,
											"end": 1235,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 456,
											"end": 709,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 456,
											"end": 709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 456,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 456,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 456,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 456,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 456,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 456,
											"end": 709,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 456,
											"end": 709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 456,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 456,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 717,
											"end": 977,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 717,
											"end": 977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 777,
											"end": 782,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 782,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 765,
											"end": 775,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 765,
											"end": 782,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 757,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 757,
											"end": 783,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 757,
											"end": 783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 783,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 757,
											"end": 783,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 757,
											"end": 783,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 757,
											"end": 783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 830,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 794,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 858,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 851,
											"end": 858,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 878,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1693,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 809,
											"end": 832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 809,
											"end": 832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 851,
											"end": 858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 851,
											"end": 858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 867,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 851,
											"end": 867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1572,
											"end": 1590,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1572,
											"end": 1590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 851,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 886,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 851,
											"end": 886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 843,
											"end": 903,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 843,
											"end": 903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 903,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2191,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2229,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2200,
											"end": 2230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C985B9CD9995C8819985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 903,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 843,
											"end": 903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 843,
											"end": 903,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 843,
											"end": 903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 923,
											"end": 933,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 937,
											"end": 938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 914,
											"end": 934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 914,
											"end": 934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 914,
											"end": 934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 914,
											"end": 934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 914,
											"end": 934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 914,
											"end": 934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 914,
											"end": 934,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 914,
											"end": 934,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 914,
											"end": 938,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 914,
											"end": 938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 914,
											"end": 938,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 914,
											"end": 938,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 954,
											"end": 969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 969,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 8,
											"value": "CBE159BBFA02836AF5BA6D951958879A5D0B207331524C51EF4A58C95421E312"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 954,
											"end": 969,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 954,
											"end": 969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 969,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 746,
											"end": 977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 717,
											"end": 977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1208,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1171,
											"end": 1175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1171,
											"end": 1175,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1171,
											"end": 1175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1187,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1240,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1236,
											"end": 1240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 456,
											"end": 709,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 456,
											"end": 709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 555,
											"end": 562,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 562,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63B0545F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 526,
											"end": 536,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 593,
											"end": 597,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2845,
											"end": 2863,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2845,
											"end": 2863,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2863,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2924,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 526,
											"end": 536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 555,
											"end": 562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 555,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 575,
											"name": "PUSH",
											"source": 8,
											"value": "63B0545F"
										},
										{
											"begin": 555,
											"end": 575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 555,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 606,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 555,
											"end": 606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 547,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 547,
											"end": 625,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 547,
											"end": 625,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 625,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 547,
											"end": 625,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 547,
											"end": 625,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 625,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 547,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3179,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3233,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 547,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2935,
											"end": 3274,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 625,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 547,
											"end": 625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 636,
											"end": 653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 636,
											"end": 653,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 636,
											"end": 644,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 636,
											"end": 653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 636,
											"end": 653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 636,
											"end": 653,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 636,
											"end": 653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 636,
											"end": 653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 636,
											"end": 653,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 636,
											"end": 653,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 636,
											"end": 662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 657,
											"end": 662,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 657,
											"end": 662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 636,
											"end": 644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 636,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 657,
											"end": 662,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 657,
											"end": 662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 636,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 636,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 636,
											"end": 662,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 678,
											"end": 701,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1649,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1617,
											"end": 1649,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1681,
											"end": 1683,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1693,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1693,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH",
											"source": 8,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1572,
											"end": 1590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 678,
											"end": 701,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 678,
											"end": 701,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 456,
											"end": 709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 456,
											"end": 709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 867,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 867,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 958,
											"end": 965,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 954,
											"end": 977,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 950,
											"end": 982,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 947,
											"end": 999,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 947,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 947,
											"end": 999,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 995,
											"end": 996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 993,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 997,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 947,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 947,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1037,
											"end": 1046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1018,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1008,
											"end": 1047,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 867,
											"end": 1053,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 867,
											"end": 1053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1331,
											"end": 1338,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1350,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1355,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1981,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1704,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1826,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1821,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1822,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 1827,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1792,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1882,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1931,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1932,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1891,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1891,
											"end": 1951,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1945,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2550,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2328,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 2424,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 2424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 2424,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2411,
											"end": 2544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2411,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2411,
											"end": 2544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2461,
											"end": 2464,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2505,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2526,
											"end": 2527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2534,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"day6/IMyToken.sol",
								"day6/MyERC20.sol",
								"day6/MyToken.sol",
								"day6/TokenBank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit(uint256)": "b6b55f25",
							"getbalance(address)": "68116177",
							"mytoken()": "5eab74fc",
							"tokenReceive(address,uint256)": "503c2b0e",
							"withDraw()": "0fdb1c10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract MyToken\",\"name\":\"mytoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithDraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getbalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mytoken\",\"outputs\":[{\"internalType\":\"contract MyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"tokenReceive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"day6/TokenBank.sol\":\"TokenBank\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"day6/IMyToken.sol\":{\"keccak256\":\"0xbf0a600473187eab5720e8ba157d3798d175a6e675ffd56e3c131e20bc4d64bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69bf44aacf5f48a455ec76a0467426a875a4f8534f70a31a4abe2dee8136c487\",\"dweb:/ipfs/QmeJDAeXu3M15h2CaSRRzq357iqoZtn3E7wTPshjoUbsAV\"]},\"day6/MyToken.sol\":{\"keccak256\":\"0x3bc93d438568ad5f0f379ff29d8cc7d880e0e1ae8154b6cc39c05795b0b1f7a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8736790ba3b47e3af938428436979b986bd4c0e10bd3147ed758c8095549cbfe\",\"dweb:/ipfs/QmRZFmkVmw5qagqZy2DAj6BecAZeYsiZro6W4LSWywy3m1\"]},\"day6/TokenBank.sol\":{\"keccak256\":\"0xbcfe3e63fbd05b244efc6733d04413af5d77adc0aca578fd3c315a45252630dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cb0c7fac45a32683afa381ea01be0a2689dbe7b7a0b1a927f8f96dcb23d7fa\",\"dweb:/ipfs/QmZHRgXcmNTnBEYq2hF5Stvyt9kwvjkbfJVFkjpDRcqaWk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1397,
								"contract": "day6/TokenBank.sol:TokenBank",
								"label": "_balance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1399,
								"contract": "day6/TokenBank.sol:TokenBank",
								"label": "admin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1402,
								"contract": "day6/TokenBank.sol:TokenBank",
								"label": "mytoken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(MyToken)1390"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(MyToken)1390": {
								"encoding": "inplace",
								"label": "contract MyToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> day6/MyToken.sol:18:17:\n   |\n18 |     constructor(string memory name,string memory symbol){\n   |                 ^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> day6/MyToken.sol:26:5:\n   |\n26 |     function name()public view returns (string memory){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1147,
						"file": "day6/MyToken.sol",
						"message": "The shadowed declaration is here:",
						"start": 1066
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 638,
					"file": "day6/MyToken.sol",
					"start": 620
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> day6/TokenBank.sol:15:17:\n   |\n15 |     constructor(MyToken mytoken){\n   |                 ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n --> day6/TokenBank.sol:9:5:\n  |\n9 |     MyToken public  mytoken; \n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 223,
						"file": "day6/TokenBank.sol",
						"message": "The shadowed declaration is here:",
						"start": 200
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 351,
					"file": "day6/TokenBank.sol",
					"start": 336
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> day6/TokenBank.sol:40:27:\n   |\n40 |     function tokenReceive(address from,uint256 value) external  returns(bool){\n   |                           ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1137,
					"file": "day6/TokenBank.sol",
					"start": 1125
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> day6/MyToken.sol:82:5:\n   |\n82 |     function allowance(address owner,address spender)external override returns (uint256){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 2818,
					"file": "day6/MyToken.sol",
					"start": 2649
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"day6/IMyToken.sol": {
				"ast": {
					"absolutePath": "day6/IMyToken.sol",
					"exportedSymbols": {
						"IMyToken": [
							854
						]
					},
					"id": 855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMyToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 854,
							"linearizedBaseContracts": [
								854
							],
							"name": "IMyToken",
							"nameLocation": "71:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 795,
									"name": "Transfer",
									"nameLocation": "314:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "339:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "323:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "360:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "344:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "372:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "364:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:56:5"
									},
									"src": "308:71:5"
								},
								{
									"anonymous": false,
									"eventSelector": "6e11fb1b7f119e3f2fa29896ef5fdf8b8a2d0d4df6fe90ba8668e7d8b2ffa25e",
									"id": 803,
									"name": "Approve",
									"nameLocation": "393:7:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "417:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "401:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "423:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:61:5"
									},
									"src": "387:75:5"
								},
								{
									"functionSelector": "18160ddd",
									"id": 808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1091:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:2:5"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1128:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:9:5"
									},
									"scope": 854,
									"src": "1082:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1154:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1173:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1165:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:17:5"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1204:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:9:5"
									},
									"scope": 854,
									"src": "1145:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1228:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1245:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1237:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1256:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1248:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:26:5"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1280:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1280:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:6:5"
									},
									"scope": 854,
									"src": "1219:67:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1303:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1321:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1313:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:31:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1361:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:9:5"
									},
									"scope": 854,
									"src": "1294:76:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1387:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1403:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1395:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1419:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1411:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1394:31:5"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1442:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:6:5"
									},
									"scope": 854,
									"src": "1378:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "63b0545f",
									"id": 853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferfrom",
									"nameLocation": "1465:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1486:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1478:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1499:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1491:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1510:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1502:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:39:5"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1534:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1534:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:6:5"
									},
									"scope": 854,
									"src": "1456:84:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 855,
							"src": "61:1494:5",
							"usedErrors": [],
							"usedEvents": [
								795,
								803
							]
						}
					],
					"src": "33:1522:5"
				},
				"id": 5
			},
			"day6/MyERC20.sol": {
				"ast": {
					"absolutePath": "day6/MyERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"IMyToken": [
							854
						],
						"MTK": [
							941
						],
						"MyToken": [
							1390
						],
						"TokenBank": [
							1538
						]
					},
					"id": 942,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 857,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 942,
							"sourceUnit": 652,
							"src": "59:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "day6/TokenBank.sol",
							"file": "./TokenBank.sol",
							"id": 858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 942,
							"sourceUnit": 1539,
							"src": "116:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 859,
										"name": "ERC20",
										"nameLocations": [
											"159:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "159:5:6"
									},
									"id": 860,
									"nodeType": "InheritanceSpecifier",
									"src": "159:5:6"
								}
							],
							"canonicalName": "MTK",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 941,
							"linearizedBaseContracts": [
								941,
								651,
								41,
								755,
								729,
								785
							],
							"name": "MTK",
							"nameLocation": "152:3:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "210:66:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 868,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "226:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "230:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "226:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "238:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "242:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "248:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "242:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	}
																},
																"src": "238:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "252:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 876,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "257:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "257:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "252:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "238:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "220:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "220:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "220:48:6"
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "192:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "203:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 865,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 862,
												"name": "ERC20",
												"nameLocations": [
													"186:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "186:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "186:23:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "183:2:6"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:0:6"
									},
									"scope": 941,
									"src": "172:104:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "352:112:6",
										"statements": [
											{
												"assignments": [
													891
												],
												"declarations": [
													{
														"constant": false,
														"id": 891,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "366:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "359:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 890,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "359:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"nodeType": "VariableDeclarationStatement",
												"src": "359:11:6"
											},
											{
												"AST": {
													"nativeSrc": "386:47:6",
													"nodeType": "YulBlock",
													"src": "386:47:6",
													"statements": [
														{
															"nativeSrc": "397:29:6",
															"nodeType": "YulAssignment",
															"src": "397:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "_address",
																		"nativeSrc": "417:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "417:8:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "405:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "405:11:6"
																},
																"nativeSrc": "405:21:6",
																"nodeType": "YulFunctionCall",
																"src": "405:21:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "397:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "397:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 885,
														"isOffset": false,
														"isSlot": false,
														"src": "417:8:6",
														"valueSize": 1
													},
													{
														"declaration": 891,
														"isOffset": false,
														"isSlot": false,
														"src": "397:4:6",
														"valueSize": 1
													}
												],
												"id": 893,
												"nodeType": "InlineAssembly",
												"src": "377:56:6"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 894,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "447:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "454:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "447:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 897,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "446:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 889,
												"id": 898,
												"nodeType": "Return",
												"src": "439:17:6"
											}
										]
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isContract",
									"nameLocation": "293:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "313:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "305:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:18:6"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "346:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:6:6"
									},
									"scope": 941,
									"src": "284:180:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "556:263:6",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 910,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "592:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "_isContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "580:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "580:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "577:162:6",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "603:136:6",
													"statements": [
														{
															"assignments": [
																913
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 913,
																	"mutability": "mutable",
																	"name": "rv",
																	"nameLocation": "623:2:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 928,
																	"src": "618:7:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 912,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "618:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 922,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 918,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "662:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "666:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "662:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 920,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "673:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 915,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 902,
																				"src": "638:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 914,
																			"name": "TokenBank",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "628:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_TokenBank_$1538_$",
																				"typeString": "type(contract TokenBank)"
																			}
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "628:20:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TokenBank_$1538",
																			"typeString": "contract TokenBank"
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "649:12:6",
																	"memberName": "tokenReceive",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "628:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "628:52:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "618:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 924,
																		"name": "rv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "703:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f20746f6b656e735265636569766564",
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "707:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fdae5dfc34ba716375f1e399fa1e32af4b0ef938606027d4a89160d010bf9dbb",
																			"typeString": "literal_string \"No tokensReceived\""
																		},
																		"value": "No tokensReceived"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fdae5dfc34ba716375f1e399fa1e32af4b0ef938606027d4a89160d010bf9dbb",
																			"typeString": "literal_string \"No tokensReceived\""
																		}
																	],
																	"id": 923,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "695:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "695:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 927,
															"nodeType": "ExpressionStatement",
															"src": "695:32:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 931,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "759:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "763:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "759:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "771:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "782:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 930,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "749:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "749:40:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "807:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 908,
												"id": 938,
												"nodeType": "Return",
												"src": "800:11:6"
											}
										]
									},
									"functionSelector": "1a825b75",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWithCallback",
									"nameLocation": "479:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "508:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "500:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "526:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "518:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:34:6"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "551:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "551:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:6:6"
									},
									"scope": 941,
									"src": "470:349:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 942,
							"src": "143:679:6",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:789:6"
				},
				"id": 6
			},
			"day6/MyToken.sol": {
				"ast": {
					"absolutePath": "day6/MyToken.sol",
					"exportedSymbols": {
						"IMyToken": [
							854
						],
						"MyToken": [
							1390
						],
						"TokenBank": [
							1538
						]
					},
					"id": 1391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 943,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "day6/IMyToken.sol",
							"file": "./IMyToken.sol",
							"id": 945,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 855,
							"src": "59:40:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 944,
										"name": "IMyToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 854,
										"src": "67:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "day6/TokenBank.sol",
							"file": "./TokenBank.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 1539,
							"src": "101:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 947,
										"name": "IMyToken",
										"nameLocations": [
											"349:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 854,
										"src": "349:8:7"
									},
									"id": 948,
									"nodeType": "InheritanceSpecifier",
									"src": "349:8:7"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1390,
							"linearizedBaseContracts": [
								1390,
								854
							],
							"name": "MyToken",
							"nameLocation": "338:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 952,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "409:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "366:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 951,
										"keyName": "account",
										"keyNameLocation": "382:7:7",
										"keyType": {
											"id": 949,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "374:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "366:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 950,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "393:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 958,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "493:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "425:79:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 957,
										"keyName": "owner",
										"keyNameLocation": "442:5:7",
										"keyType": {
											"id": 953,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "434:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "425:60:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 956,
											"keyName": "spender",
											"keyNameLocation": "467:7:7",
											"keyType": {
												"id": 954,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "459:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "450:34:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 955,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "476:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 960,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "531:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "515:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 959,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 962,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "565:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "550:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 961,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "550:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 964,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "592:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "577:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 963,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "577:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "660:54:7",
										"statements": [
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 971,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "671:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 972,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "677:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "671:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "671:10:7"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "692:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 976,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "700:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "692:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "692:14:7"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "634:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "620:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 965,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "620:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "653:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "639:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 967,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "639:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:41:7"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:0:7"
									},
									"scope": 1390,
									"src": "608:106:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "1116:31:7",
										"statements": [
											{
												"expression": {
													"id": 985,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 962,
													"src": "1134:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 984,
												"id": 986,
												"nodeType": "Return",
												"src": "1127:12:7"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1075:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:2:7"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1102:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 982,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1102:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:15:7"
									},
									"scope": 1390,
									"src": "1066:81:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "1211:28:7",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1229:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 992,
												"id": 994,
												"nodeType": "Return",
												"src": "1222:9:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1164:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:2:7"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1204:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 990,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1204:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:7:7"
									},
									"scope": 1390,
									"src": "1155:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										808
									],
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "1311:38:7",
										"statements": [
											{
												"expression": {
													"id": 1002,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 960,
													"src": "1329:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1003,
												"nodeType": "Return",
												"src": "1322:19:7"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1256:11:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 998,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1284:8:7"
									},
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1267:2:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1302:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:9:7"
									},
									"scope": 1390,
									"src": "1247:102:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										815
									],
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "1434:44:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1013,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "1452:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1015,
													"indexExpression": {
														"id": 1014,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "1462:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1452:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1016,
												"nodeType": "Return",
												"src": "1445:25:7"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1366:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1009,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1407:8:7"
									},
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1384:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1376:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:17:7"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1425:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:9:7"
									},
									"scope": 1390,
									"src": "1357:121:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										824
									],
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "1561:105:7",
										"statements": [
											{
												"assignments": [
													1029
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1580:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1041,
														"src": "1572:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1028,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1572:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1032,
												"initialValue": {
													"expression": {
														"id": 1030,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1588:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1592:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1588:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1572:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1034,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "1619:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "1626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "1630:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "1609:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1609:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "1609:27:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1654:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1027,
												"id": 1040,
												"nodeType": "Return",
												"src": "1647:11:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1495:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1024,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1539:8:7"
									},
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1512:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1504:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1504:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1523:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1515:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1503:26:7"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1556:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1556:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:6:7"
									},
									"scope": 1390,
									"src": "1486:180:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "1741:108:7",
										"statements": [
											{
												"assignments": [
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1755:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "1748:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1049,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1748:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1051,
												"nodeType": "VariableDeclarationStatement",
												"src": "1748:11:7"
											},
											{
												"AST": {
													"nativeSrc": "1775:47:7",
													"nodeType": "YulBlock",
													"src": "1775:47:7",
													"statements": [
														{
															"nativeSrc": "1786:29:7",
															"nodeType": "YulAssignment",
															"src": "1786:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "_address",
																		"nativeSrc": "1806:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1806:8:7"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "1794:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "1794:11:7"
																},
																"nativeSrc": "1794:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1794:21:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1786:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1786:4:7"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1044,
														"isOffset": false,
														"isSlot": false,
														"src": "1806:8:7",
														"valueSize": 1
													},
													{
														"declaration": 1050,
														"isOffset": false,
														"isSlot": false,
														"src": "1786:4:7",
														"valueSize": 1
													}
												],
												"id": 1052,
												"nodeType": "InlineAssembly",
												"src": "1766:56:7"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1053,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "1836:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1843:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1836:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1056,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1835:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1048,
												"id": 1057,
												"nodeType": "Return",
												"src": "1828:17:7"
											}
										]
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isContract",
									"nameLocation": "1682:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1702:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "1694:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:18:7"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "1735:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1735:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1734:6:7"
									},
									"scope": 1390,
									"src": "1673:176:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "1941:263:7",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1069,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "1977:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1068,
														"name": "_isContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "1965:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1965:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1088,
												"nodeType": "IfStatement",
												"src": "1962:162:7",
												"trueBody": {
													"id": 1087,
													"nodeType": "Block",
													"src": "1988:136:7",
													"statements": [
														{
															"assignments": [
																1072
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1072,
																	"mutability": "mutable",
																	"name": "rv",
																	"nameLocation": "2008:2:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1087,
																	"src": "2003:7:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1071,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "2003:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1081,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1077,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2047:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2051:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2047:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1079,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "2058:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1074,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1061,
																				"src": "2023:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1073,
																			"name": "TokenBank",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2013:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_TokenBank_$1538_$",
																				"typeString": "type(contract TokenBank)"
																			}
																		},
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2013:20:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TokenBank_$1538",
																			"typeString": "contract TokenBank"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2034:12:7",
																	"memberName": "tokenReceive",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "2013:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2013:52:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2003:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1083,
																		"name": "rv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "2088:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f20746f6b656e735265636569766564",
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2092:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fdae5dfc34ba716375f1e399fa1e32af4b0ef938606027d4a89160d010bf9dbb",
																			"typeString": "literal_string \"No tokensReceived\""
																		},
																		"value": "No tokensReceived"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fdae5dfc34ba716375f1e399fa1e32af4b0ef938606027d4a89160d010bf9dbb",
																			"typeString": "literal_string \"No tokensReceived\""
																		}
																	],
																	"id": 1082,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2080:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1086,
															"nodeType": "ExpressionStatement",
															"src": "2080:32:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1090,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2144:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2148:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2144:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1092,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "2156:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "2167:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1089,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "2134:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "2134:40:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2192:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1067,
												"id": 1097,
												"nodeType": "Return",
												"src": "2185:11:7"
											}
										]
									},
									"functionSelector": "1a825b75",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWithCallback",
									"nameLocation": "1864:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1893:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1885:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1885:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1911:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1903:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1884:34:7"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1936:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1065,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1936:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1935:6:7"
									},
									"scope": 1390,
									"src": "1855:349:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "2280:158:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "2293:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2307:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2299:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1109,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2299:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2299:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2293:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "IfStatement",
												"src": "2290:50:7",
												"trueBody": {
													"id": 1117,
													"nodeType": "Block",
													"src": "2310:30:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1114,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2321:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2321:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1116,
															"nodeType": "ExpressionStatement",
															"src": "2321:8:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1119,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "2352:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2364:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2356:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1120,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2356:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2356:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2352:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1129,
												"nodeType": "IfStatement",
												"src": "2349:48:7",
												"trueBody": {
													"id": 1128,
													"nodeType": "Block",
													"src": "2367:30:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1125,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2378:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2378:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1127,
															"nodeType": "ExpressionStatement",
															"src": "2378:8:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1131,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "2414:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "2420:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "2424:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1130,
														"name": "_updata",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "2406:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2406:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "2406:24:7"
											}
										]
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2223:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2241:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "2233:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2254:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "2246:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2265:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "2257:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2232:39:7"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2280:0:7"
									},
									"scope": 1390,
									"src": "2214:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "2526:115:7",
										"statements": [
											{
												"assignments": [
													1148
												],
												"declarations": [
													{
														"constant": false,
														"id": 1148,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2545:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "2537:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1147,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2537:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"initialValue": {
													"expression": {
														"id": 1149,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2554:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2558:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2554:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2537:27:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1153,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2584:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "2591:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2600:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2606:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1152,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "2575:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2575:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "2575:36:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2629:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1146,
												"id": 1160,
												"nodeType": "Return",
												"src": "2622:11:7"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2455:7:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1143,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2503:8:7"
									},
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2471:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "2463:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2463:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2487:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "2479:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2462:31:7"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "2521:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2521:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2520:6:7"
									},
									"scope": 1390,
									"src": "2446:195:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										833
									],
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "2733:85:7",
										"statements": [
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2752:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1182,
														"src": "2744:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2744:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1174,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2760:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1176,
														"indexExpression": {
															"id": 1175,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "2772:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2760:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1178,
													"indexExpression": {
														"id": 1177,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "2779:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2760:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2744:43:7"
											},
											{
												"expression": {
													"id": 1180,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1173,
													"src": "2805:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1181,
												"nodeType": "Return",
												"src": "2798:12:7"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2658:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1168,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2707:8:7"
									},
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "2668:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2690:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "2682:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:31:7"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "2725:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:9:7"
									},
									"scope": 1390,
									"src": "2649:169:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										853
									],
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "2917:151:7",
										"statements": [
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "2936:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "2928:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2928:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1199,
												"initialValue": {
													"expression": {
														"id": 1197,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2947:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2951:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2947:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2928:29:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1201,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "2984:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "2989:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "2997:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1200,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "2968:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2968:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "2968:35:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1207,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "3022:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "3028:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1209,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "3032:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1206,
														"name": "_updata",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "3014:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "3014:24:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3056:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1194,
												"id": 1213,
												"nodeType": "Return",
												"src": "3049:11:7"
											}
										]
									},
									"functionSelector": "63b0545f",
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferfrom",
									"nameLocation": "2835:12:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1191,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2895:8:7"
									},
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2856:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2848:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2848:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2869:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2861:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2880:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2872:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2872:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2847:39:7"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2912:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2912:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:6:7"
									},
									"scope": 1390,
									"src": "2826:242:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "3162:272:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1226,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "3176:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3191:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3183:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1227,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3183:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3183:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3176:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1236,
												"nodeType": "IfStatement",
												"src": "3173:56:7",
												"trueBody": {
													"id": 1235,
													"nodeType": "Block",
													"src": "3194:35:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1232,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3209:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3209:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1234,
															"nodeType": "ExpressionStatement",
															"src": "3209:8:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1237,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "3243:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3260:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3252:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1238,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3252:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3252:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3243:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1247,
												"nodeType": "IfStatement",
												"src": "3239:59:7",
												"trueBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "3263:35:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1243,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3278:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3278:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "3278:8:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1248,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "3308:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1251,
															"indexExpression": {
																"id": 1249,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "3320:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3308:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1252,
														"indexExpression": {
															"id": 1250,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "3327:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3308:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1253,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "3336:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3308:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "3308:33:7"
											},
											{
												"condition": {
													"id": 1256,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1223,
													"src": "3355:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "3352:73:7",
												"trueBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "3365:60:7",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1258,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1217,
																		"src": "3393:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1259,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "3399:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1260,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "3407:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1257,
																	"name": "Approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "3385:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3385:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1262,
															"nodeType": "EmitStatement",
															"src": "3380:33:7"
														}
													]
												}
											}
										]
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "3085:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3102:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3094:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3116:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3108:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3132:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3124:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3124:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "3143:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3138:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3138:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:60:7"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3162:0:7"
									},
									"scope": 1390,
									"src": "3076:358:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "3529:243:7",
										"statements": [
											{
												"assignments": [
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "3548:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1300,
														"src": "3540:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3540:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1277,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "3567:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1279,
														"indexExpression": {
															"id": 1278,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "3579:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3567:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1281,
													"indexExpression": {
														"id": 1280,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "3586:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3567:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3540:54:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1283,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3608:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1284,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "3614:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3608:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "3605:61:7",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "3631:35:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1286,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3646:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3646:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1288,
															"nodeType": "ExpressionStatement",
															"src": "3646:8:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1292,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "3719:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1293,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "3726:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1294,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "3734:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1295,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "3751:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3734:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3758:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1291,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "3710:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3710:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "3710:54:7"
											}
										]
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "3451:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3475:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3467:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3489:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3481:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3505:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3497:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:45:7"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3529:0:7"
									},
									"scope": 1390,
									"src": "3442:330:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "3837:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3864:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3856:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3856:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3856:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "3868:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "3877:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1308,
														"name": "_updata",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "3848:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3848:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "3848:35:7"
											}
										]
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "3791:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3805:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "3797:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3797:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3821:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "3813:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:31:7"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:7"
									},
									"scope": 1390,
									"src": "3782:109:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "3973:491:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "3987:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4001:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3993:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3993:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3993:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3987:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1361,
													"nodeType": "Block",
													"src": "4054:226:7",
													"statements": [
														{
															"assignments": [
																1339
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1339,
																	"mutability": "mutable",
																	"name": "frombalance",
																	"nameLocation": "4077:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1361,
																	"src": "4069:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1338,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4069:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1343,
															"initialValue": {
																"baseExpression": {
																	"id": 1340,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "4091:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1342,
																"indexExpression": {
																	"id": 1341,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "4101:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4091:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4069:37:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1344,
																	"name": "frombalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "4124:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1345,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "4136:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4124:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1359,
																"nodeType": "Block",
																"src": "4199:68:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1351,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 952,
																					"src": "4218:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1353,
																				"indexExpression": {
																					"id": 1352,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1320,
																					"src": "4228:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4218:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1354,
																					"name": "frombalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1339,
																					"src": "4234:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1355,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1324,
																					"src": "4246:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4234:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4218:33:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1358,
																		"nodeType": "ExpressionStatement",
																		"src": "4218:33:7"
																	}
																]
															},
															"id": 1360,
															"nodeType": "IfStatement",
															"src": "4121:146:7",
															"trueBody": {
																"id": 1350,
																"nodeType": "Block",
																"src": "4142:52:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1347,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "4161:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4161:8:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1349,
																		"nodeType": "ExpressionStatement",
																		"src": "4161:8:7"
																	}
																]
															}
														}
													]
												},
												"id": 1362,
												"nodeType": "IfStatement",
												"src": "3984:296:7",
												"trueBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "4004:46:7",
													"statements": [
														{
															"expression": {
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1333,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "4019:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1334,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "4033:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4019:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1336,
															"nodeType": "ExpressionStatement",
															"src": "4019:19:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1363,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "4303:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4315:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4307:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1364,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4307:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4307:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4303:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1380,
													"nodeType": "Block",
													"src": "4369:47:7",
													"statements": [
														{
															"expression": {
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1374,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "4384:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1376,
																	"indexExpression": {
																		"id": 1375,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "4394:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4384:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "4399:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4384:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1379,
															"nodeType": "ExpressionStatement",
															"src": "4384:20:7"
														}
													]
												},
												"id": 1381,
												"nodeType": "IfStatement",
												"src": "4300:116:7",
												"trueBody": {
													"id": 1373,
													"nodeType": "Block",
													"src": "4318:46:7",
													"statements": [
														{
															"expression": {
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1369,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "4333:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1370,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "4347:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4333:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1372,
															"nodeType": "ExpressionStatement",
															"src": "4333:19:7"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1383,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "4442:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1384,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "4447:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1385,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "4450:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1382,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "4433:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4433:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "EmitStatement",
												"src": "4428:28:7"
											}
										]
									},
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updata",
									"nameLocation": "3908:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3924:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3916:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3916:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3938:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3930:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3949:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3941:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3915:40:7"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3973:0:7"
									},
									"scope": 1390,
									"src": "3899:565:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1391,
							"src": "320:4155:7",
							"usedErrors": [],
							"usedEvents": [
								795,
								803
							]
						}
					],
					"src": "33:4442:7"
				},
				"id": 7
			},
			"day6/TokenBank.sol": {
				"ast": {
					"absolutePath": "day6/TokenBank.sol",
					"exportedSymbols": {
						"IMyToken": [
							854
						],
						"MyToken": [
							1390
						],
						"TokenBank": [
							1538
						]
					},
					"id": 1539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1392,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "day6/MyToken.sol",
							"file": "./MyToken.sol",
							"id": 1393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1539,
							"sourceUnit": 1391,
							"src": "61:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1538,
							"linearizedBaseContracts": [
								1538
							],
							"name": "TokenBank",
							"nameLocation": "97:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1397,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "157:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "114:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1396,
										"keyName": "account",
										"keyNameLocation": "131:7:8",
										"keyType": {
											"id": 1394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "123:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "114:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1395,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "140:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1399,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "188:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "172:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1398,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "172:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5eab74fc",
									"id": 1402,
									"mutability": "mutable",
									"name": "mytoken",
									"nameLocation": "216:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "200:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MyToken_$1390",
										"typeString": "contract MyToken"
									},
									"typeName": {
										"id": 1401,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1400,
											"name": "MyToken",
											"nameLocations": [
												"200:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1390,
											"src": "200:7:8"
										},
										"referencedDeclaration": 1390,
										"src": "200:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MyToken_$1390",
											"typeString": "contract MyToken"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 1408,
									"name": "Deposit",
									"nameLocation": "239:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "255:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "247:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "271:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "263:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:31:8"
									},
									"src": "233:45:8"
								},
								{
									"anonymous": false,
									"eventSelector": "cbe159bbfa02836af5ba6d951958879a5d0b207331524c51ef4a58c95421e312",
									"id": 1412,
									"name": "WithDraw",
									"nameLocation": "292:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "309:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "301:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:15:8"
									},
									"src": "286:30:8"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "352:65:8",
										"statements": [
											{
												"expression": {
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1418,
														"name": "mytoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "363:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MyToken_$1390",
															"typeString": "contract MyToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1419,
														"name": "mytoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "373:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MyToken_$1390",
															"typeString": "contract MyToken"
														}
													},
													"src": "363:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MyToken_$1390",
														"typeString": "contract MyToken"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "363:17:8"
											},
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1422,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "391:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1423,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "399:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "403:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "399:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "391:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "391:18:8"
											}
										]
									},
									"id": 1428,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "mytoken",
												"nameLocation": "344:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "336:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_MyToken_$1390",
													"typeString": "contract MyToken"
												},
												"typeName": {
													"id": 1414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1413,
														"name": "MyToken",
														"nameLocations": [
															"336:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1390,
														"src": "336:7:8"
													},
													"referencedDeclaration": 1390,
													"src": "336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MyToken_$1390",
														"typeString": "contract MyToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:17:8"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:0:8"
									},
									"scope": 1538,
									"src": "324:93:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "497:212:8",
										"statements": [
											{
												"assignments": [
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "516:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1462,
														"src": "508:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1433,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "508:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"expression": {
														"id": 1435,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "526:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "530:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "526:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "508:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1441,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "576:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1444,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "593:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenBank_$1538",
																				"typeString": "contract TokenBank"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenBank_$1538",
																				"typeString": "contract TokenBank"
																			}
																		],
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "585:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1442,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "585:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "585:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1446,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "600:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1439,
																	"name": "mytoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "555:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$1390",
																		"typeString": "contract MyToken"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "563:12:8",
																"memberName": "transferfrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1215,
																"src": "555:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "555:51:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206661696c6564",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "607:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															},
															"value": "transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															}
														],
														"id": 1438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "547:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "547:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "547:78:8"
											},
											{
												"expression": {
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1451,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "636:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1453,
														"indexExpression": {
															"id": 1452,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "645:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "636:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1454,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "657:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "636:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "636:26:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1458,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "686:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "695:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1457,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "678:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "678:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "EmitStatement",
												"src": "673:28:8"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "465:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "473:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:8"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:0:8"
									},
									"scope": 1538,
									"src": "456:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "746:231:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1467,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "765:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "769:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "765:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1469,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "777:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "765:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "757:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "757:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "757:26:8"
											},
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "802:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1503,
														"src": "794:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1473,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "794:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1481,
												"initialValue": {
													"baseExpression": {
														"id": 1475,
														"name": "_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "809:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1480,
													"indexExpression": {
														"arguments": [
															{
																"id": 1478,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "826:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TokenBank_$1538",
																	"typeString": "contract TokenBank"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TokenBank_$1538",
																	"typeString": "contract TokenBank"
																}
															],
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "818:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1476,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "818:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "818:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "809:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "794:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1485,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "868:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "872:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "868:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1487,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "880:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1483,
																	"name": "mytoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "851:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$1390",
																		"typeString": "contract MyToken"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "859:8:8",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1042,
																"src": "851:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "851:35:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206661696c",
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "887:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
																"typeString": "literal_string \"transfer fail\""
															},
															"value": "transfer fail"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
																"typeString": "literal_string \"transfer fail\""
															}
														],
														"id": 1482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "843:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "843:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "843:60:8"
											},
											{
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1492,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "914:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1495,
														"indexExpression": {
															"expression": {
																"id": 1493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "923:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "927:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "923:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "914:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "937:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "914:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "914:24:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1500,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "963:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1499,
														"name": "WithDraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "954:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "EmitStatement",
												"src": "949:20:8"
											}
										]
									},
									"functionSelector": "0fdb1c10",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withDraw",
									"nameLocation": "726:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:8"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "746:0:8"
									},
									"scope": 1538,
									"src": "717:260:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1515,
										"nodeType": "Block",
										"src": "1052:43:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1511,
														"name": "_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "1070:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1513,
													"indexExpression": {
														"id": 1512,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "1079:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1070:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1510,
												"id": 1514,
												"nodeType": "Return",
												"src": "1063:24:8"
											}
										]
									},
									"functionSelector": "68116177",
									"id": 1516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getbalance",
									"nameLocation": "994:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1013:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1005:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:17:8"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1044:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:9:8"
									},
									"scope": 1538,
									"src": "985:110:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "1176:72:8",
										"statements": [
											{
												"expression": {
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1525,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "1187:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1530,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1528,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1204:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenBank_$1538",
																		"typeString": "contract TokenBank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenBank_$1538",
																		"typeString": "contract TokenBank"
																	}
																],
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1196:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1526,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1196:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1196:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1187:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1531,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "1213:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1187:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "1187:31:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1236:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1524,
												"id": 1535,
												"nodeType": "Return",
												"src": "1229:11:8"
											}
										]
									},
									"functionSelector": "503c2b0e",
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenReceive",
									"nameLocation": "1112:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1133:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "1125:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1146:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "1138:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:28:8"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "1171:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:6:8"
									},
									"scope": 1538,
									"src": "1103:145:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1539,
							"src": "88:1171:8",
							"usedErrors": [],
							"usedEvents": [
								1408,
								1412
							]
						}
					],
					"src": "33:1226:8"
				},
				"id": 8
			}
		}
	}
}