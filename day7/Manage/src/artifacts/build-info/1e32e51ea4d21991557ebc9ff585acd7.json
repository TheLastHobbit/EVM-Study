{
	"id": "1e32e51ea4d21991557ebc9ff585acd7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/"
			]
		},
		"sources": {
			"src/MyNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\";\r\nimport \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\r\nimport \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\";\r\n\r\ncontract MyNFT is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {\r\n    uint256 private _nextTokenId;\r\n\r\n    constructor() ERC721(\"MyNFT\", \"NFT\") Ownable(msg.sender) {}\r\n\r\n    function safeMint(address to, string memory uri) public onlyOwner {\r\n        uint256 tokenId = _nextTokenId++;\r\n        _safeMint(to, tokenId);\r\n        _setTokenURI(tokenId, uri);\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function _update(\r\n        address to,\r\n        uint256 tokenId,\r\n        address auth\r\n    ) internal override(ERC721, ERC721Enumerable) returns (address) {\r\n        return super._update(to, tokenId, auth);\r\n    }\r\n\r\n    function _increaseBalance(\r\n        address account,\r\n        uint128 value\r\n    ) internal override(ERC721, ERC721Enumerable) {\r\n        super._increaseBalance(account, value);\r\n    }\r\n\r\n    function tokenURI(\r\n        uint256 tokenId\r\n    ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    function supportsInterface(\r\n        bytes4 interfaceId\r\n    )\r\n        public\r\n        view\r\n        override(ERC721, ERC721Enumerable, ERC721URIStorage)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    \r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC721} from \"../ERC721.sol\";\r\nimport {Strings} from \"../../../utils/Strings.sol\";\r\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\r\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev ERC721 token with storage based token URI management.\r\n */\r\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\r\n    using Strings for uint256;\r\n\r\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\r\n    // defines events and does not include any external function.\r\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\r\n\r\n    // Optional mapping for token URIs\r\n    mapping(uint256 tokenId => string) private _tokenURIs;\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\r\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory _tokenURI = _tokenURIs[tokenId];\r\n        string memory base = _baseURI();\r\n\r\n        // If there is no base URI, return the token URI.\r\n        if (bytes(base).length == 0) {\r\n            return _tokenURI;\r\n        }\r\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\r\n        if (bytes(_tokenURI).length > 0) {\r\n            return string.concat(base, _tokenURI);\r\n        }\r\n\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\r\n     *\r\n     * Emits {MetadataUpdate}.\r\n     */\r\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n        emit MetadataUpdate(tokenId);\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC721} from \"../ERC721.sol\";\r\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\r\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\r\n * of all the token ids in the contract as well as all token ids owned by each account.\r\n *\r\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\r\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\r\n */\r\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\r\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\r\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\r\n\r\n    uint256[] private _allTokens;\r\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\r\n\r\n    /**\r\n     * @dev An `owner`'s token query was out of bounds for `index`.\r\n     *\r\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\r\n     */\r\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\r\n\r\n    /**\r\n     * @dev Batch mint is not allowed.\r\n     */\r\n    error ERC721EnumerableForbiddenBatchMint();\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\r\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\r\n        if (index >= balanceOf(owner)) {\r\n            revert ERC721OutOfBoundsIndex(owner, index);\r\n        }\r\n        return _ownedTokens[owner][index];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Enumerable-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _allTokens.length;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Enumerable-tokenByIndex}.\r\n     */\r\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\r\n        if (index >= totalSupply()) {\r\n            revert ERC721OutOfBoundsIndex(address(0), index);\r\n        }\r\n        return _allTokens[index];\r\n    }\r\n\r\n    /**\r\n     * @dev See {ERC721-_update}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\r\n        address previousOwner = super._update(to, tokenId, auth);\r\n\r\n        if (previousOwner == address(0)) {\r\n            _addTokenToAllTokensEnumeration(tokenId);\r\n        } else if (previousOwner != to) {\r\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\r\n        }\r\n        if (to == address(0)) {\r\n            _removeTokenFromAllTokensEnumeration(tokenId);\r\n        } else if (previousOwner != to) {\r\n            _addTokenToOwnerEnumeration(to, tokenId);\r\n        }\r\n\r\n        return previousOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\r\n     * @param to address representing the new owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\r\n     */\r\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\r\n        uint256 length = balanceOf(to) - 1;\r\n        _ownedTokens[to][length] = tokenId;\r\n        _ownedTokensIndex[tokenId] = length;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's token tracking data structures.\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list\r\n     */\r\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\r\n        _allTokensIndex[tokenId] = _allTokens.length;\r\n        _allTokens.push(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\r\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\r\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\r\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\r\n     */\r\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\r\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = balanceOf(from);\r\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary\r\n        if (tokenIndex != lastTokenIndex) {\r\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\r\n\r\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n        }\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete _ownedTokensIndex[tokenId];\r\n        delete _ownedTokens[from][lastTokenIndex];\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to remove a token from this extension's token tracking data structures.\r\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\r\n     */\r\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\r\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = _allTokens.length - 1;\r\n        uint256 tokenIndex = _allTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\r\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\r\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\r\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\r\n\r\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete _allTokensIndex[tokenId];\r\n        _allTokens.pop();\r\n    }\r\n\r\n    /**\r\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\r\n     */\r\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\r\n        if (amount > 0) {\r\n            revert ERC721EnumerableForbiddenBatchMint();\r\n        }\r\n        super._increaseBalance(account, amount);\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"./IERC721.sol\";\r\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\r\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {Strings} from \"../../utils/Strings.sol\";\r\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\r\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    mapping(uint256 tokenId => address) private _owners;\r\n\r\n    mapping(address owner => uint256) private _balances;\r\n\r\n    mapping(uint256 tokenId => address) private _tokenApprovals;\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual returns (uint256) {\r\n        if (owner == address(0)) {\r\n            revert ERC721InvalidOwner(address(0));\r\n        }\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual {\r\n        _approve(to, tokenId, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _getApproved(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        address previousOwner = _update(to, tokenId, _msgSender());\r\n        if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\r\n        transferFrom(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                revert ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                revert ERC721InsufficientApproval(spender, tokenId);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\r\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\r\n     *\r\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\r\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\r\n     * remain consistent with one another.\r\n     */\r\n    function _increaseBalance(address account, uint128 value) internal virtual {\r\n        unchecked {\r\n            _balances[account] += value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(from, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (from != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                _balances[from] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                _balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        return from;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            revert ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _mint(to, tokenId);\r\n        _checkOnERC721Received(address(0), to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address previousOwner = _update(address(0), tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        } else if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\r\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\r\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\r\n        _safeTransfer(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\r\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\r\n                revert ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\r\n        if (operator == address(0)) {\r\n            revert ERC721InvalidOperator(operator);\r\n        }\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\r\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     */\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\r\n        if (to.code.length > 0) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\nimport {IERC721} from \"./IERC721.sol\";\r\n\r\n/// @title EIP-721 Metadata Update Extension\r\ninterface IERC4906 is IERC165, IERC721 {\r\n    /// @dev This event emits when the metadata of a token is changed.\r\n    /// So that the third-party platforms such as NFT market could\r\n    /// timely update the images and related attributes of the NFT.\r\n    event MetadataUpdate(uint256 _tokenId);\r\n\r\n    /// @dev This event emits when the metadata of a range of tokens is changed.\r\n    /// So that the third-party platforms such as NFT market could\r\n    /// timely update the images and related attributes of the NFTs.\r\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./math/Math.sol\";\r\nimport {SignedMath} from \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"../IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Enumerable is IERC721 {\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\r\n     * Use along with {totalSupply} to enumerate all tokens.\r\n     */\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"../IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\r\n     * reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            return a / b;\r\n        }\r\n\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                revert MathOverflowedMulDiv();\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "lib/openzeppelin-contracts/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x4764a3cb550846ec714888e19407f05c8d3cf56181d4a090f451beb8064b1a41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0dfe15ab99b1ec4aec1d0c90dc077b27aab5a1a0d305c6c641698100fc27c64\",\"dweb:/ipfs/QmWWsr2frKgKhNMJwdRXBe7vgRHCzSNTLyGMxbbc6Fuz81\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x7b29b3947e0a86bf596aa408b1395110a9a7fa31213dc928cf5ec927edff2585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d59b31e9c356988b8eb7bf63a4ea264f583dd0a62b86a163632c40bbe3aa7050\",\"dweb:/ipfs/QmZBiYy7icKr5Lucb8yxujYfg3AMHW2zLD7n4JFYNVSinV\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xdac767d30fc5b3ab8cb3238a18a86a6738f02ec8fad07b1cd74493c7212d3141\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5142e04f3b754c3c24795000e10d90dbd5565499f1b019de9e9f6a847a219a0\",\"dweb:/ipfs/QmS7VJ4LxS4F4okSxSu93ELv6irVCGfQDPDH3ENUz2rGYF\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x384ea86fc88a1e6e9052fb711368d07a6041e189f2829e61ec4aed4d11d6d710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://477a233394c0cb62162fcfa7395093b4dacd7d85f47eeecfca454ac84ba97d65\",\"dweb:/ipfs/QmYkcHnYNX9TWmw8kAaWG5krnQ4wHGsrrVkPRV2aG2fMnb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xc290092fcf0ab4513863ab8bf9e335020d296018f6ef5ee1acc5b0213b3aa00a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19de29536b48c1ac3f45705a3fccf2bfab999e46428b5825247c11c228610a9b\",\"dweb:/ipfs/Qmf8cUC2oUzdDwFGnxjMzCWGZV7Q4DQXuVgPb9DCAZRxyf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1479,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1483,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1486,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1490,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x4764a3cb550846ec714888e19407f05c8d3cf56181d4a090f451beb8064b1a41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0dfe15ab99b1ec4aec1d0c90dc077b27aab5a1a0d305c6c641698100fc27c64\",\"dweb:/ipfs/QmWWsr2frKgKhNMJwdRXBe7vgRHCzSNTLyGMxbbc6Fuz81\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x7b29b3947e0a86bf596aa408b1395110a9a7fa31213dc928cf5ec927edff2585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d59b31e9c356988b8eb7bf63a4ea264f583dd0a62b86a163632c40bbe3aa7050\",\"dweb:/ipfs/QmZBiYy7icKr5Lucb8yxujYfg3AMHW2zLD7n4JFYNVSinV\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xdac767d30fc5b3ab8cb3238a18a86a6738f02ec8fad07b1cd74493c7212d3141\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5142e04f3b754c3c24795000e10d90dbd5565499f1b019de9e9f6a847a219a0\",\"dweb:/ipfs/QmS7VJ4LxS4F4okSxSu93ELv6irVCGfQDPDH3ENUz2rGYF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xea2ce2276d96ef81067a452a0c27f31bee2d3c47de47041fda9931c10e825523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29793c6d491ee3bf35f86ed717126830efc0309ac9d10f6c3059f4da0355fce7\",\"dweb:/ipfs/QmUZV6nnQEXoiBDCgYSyPhSqLjAFJsrzghX5aqKWCrmxtH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1872,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xc290092fcf0ab4513863ab8bf9e335020d296018f6ef5ee1acc5b0213b3aa00a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19de29536b48c1ac3f45705a3fccf2bfab999e46428b5825247c11c228610a9b\",\"dweb:/ipfs/Qmf8cUC2oUzdDwFGnxjMzCWGZV7Q4DQXuVgPb9DCAZRxyf\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220da07d2dbbc76ea8e263b12adc41c933633d497205cf8f46ba8232542cb76c44664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220da07d2dbbc76ea8e263b12adc41c933633d497205cf8f46ba8232542cb76c44664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SMOD 0xD2 0xDB 0xBC PUSH23 0xEA8E263B12ADC41C933633D497205CF8F46BA8232542CB PUSH23 0xC44664736F6C6343000816003300000000000000000000 ",
							"sourceMap": "262:2929:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;262:2929:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220da07d2dbbc76ea8e263b12adc41c933633d497205cf8f46ba8232542cb76c44664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SMOD 0xD2 0xDB 0xBC PUSH23 0xEA8E263B12ADC41C933633D497205CF8F46BA8232542CB PUSH23 0xC44664736F6C6343000816003300000000000000000000 ",
							"sourceMap": "262:2929:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da07d2dbbc76ea8e263b12adc41c933633d497205cf8f46ba8232542cb76c44664736f6c63430008160033",
									".code": [
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/MyNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fbd44bfc01aa889fcc0d5d1d30e55c78fe87344968907a1b52be3abc9892a5a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201fbd44bfc01aa889fcc0d5d1d30e55c78fe87344968907a1b52be3abc9892a5a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xBD PREVRANDAO 0xBF 0xC0 BYTE 0xA8 DUP10 0xFC 0xC0 0xD5 0xD1 0xD3 0xE SSTORE 0xC7 DUP16 0xE8 PUSH20 0x44968907A1B52BE3ABC9892A5A64736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "211:15320:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;211:15320:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201fbd44bfc01aa889fcc0d5d1d30e55c78fe87344968907a1b52be3abc9892a5a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xBD PREVRANDAO 0xBF 0xC0 BYTE 0xA8 DUP10 0xFC 0xC0 0xD5 0xD1 0xD3 0xE SSTORE 0xC7 DUP16 0xE8 PUSH20 0x44968907A1B52BE3ABC9892A5A64736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "211:15320:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fbd44bfc01aa889fcc0d5d1d30e55c78fe87344968907a1b52be3abc9892a5a64736f6c63430008160033",
									".code": [
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/MyNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220aae6b814de0319db308a3ad0ec0d3f278b26a56952662bd8dccbd14b14b6deed64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220aae6b814de0319db308a3ad0ec0d3f278b26a56952662bd8dccbd14b14b6deed64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xE6 0xB8 EQ 0xDE SUB NOT 0xDB ADDRESS DUP11 GASPRICE 0xD0 0xEC 0xD EXTCODEHASH 0x27 DUP12 0x26 0xA5 PUSH10 0x52662BD8DCCBD14B14B6 0xDE 0xED PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "224:1081:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:1081:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220aae6b814de0319db308a3ad0ec0d3f278b26a56952662bd8dccbd14b14b6deed64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xE6 0xB8 EQ 0xDE SUB NOT 0xDB ADDRESS DUP11 GASPRICE 0xD0 0xEC 0xD EXTCODEHASH 0x27 DUP12 0x26 0xA5 PUSH10 0x52662BD8DCCBD14B14B6 0xDE 0xED PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "224:1081:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aae6b814de0319db308a3ad0ec0d3f278b26a56952662bd8dccbd14b14b6deed64736f6c63430008160033",
									".code": [
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/MyNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/MyNFT.sol": {
				"MyNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/MyNFT.sol\":388:1684  contract MyNFT is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"src/MyNFT.sol\":502:561  constructor() ERC721(\"MyNFT\", \"NFT\") Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/MyNFT.sol\":547:557  msg.sender */\n  caller\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1419:1535  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xda, 0x135e539195)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x139195)\n  dup2\n  mstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1494:1499  name_ */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1486:1491  _name */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1486:1499  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1510:1517  _symbol */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1510:1527  _symbol = symbol_ */\n  tag_8\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1520:1527  symbol_ */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1510:1517  _symbol */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1510:1527  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1337  initialOwner == address(0) */\n  dup2\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1361:1392  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1389:1390  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1361:1392  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2847:2898   */\n  mstore\n    /* \"#utility.yul\":2820:2838   */\n  0x24\n  add\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1361:1392  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1433:1445  initialOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1432  _transferOwnership */\n  tag_14\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1262:1454  constructor(address initialOwner) {... */\n  pop\n    /* \"src/MyNFT.sol\":388:1684  contract MyNFT is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {... */\n  jump(tag_23)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n  0x0b\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n  swap2\n  and\n  swap2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n  dup3\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n  0x00\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3069:3197  {... */\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_19:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_26:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_27:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_21:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_31\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_31:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_32:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_30:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_7:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1555:1652   */\n  tag_39\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_40\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_43:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_41)\n    /* \"#utility.yul\":1776:2439   */\ntag_42:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_46:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_49:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_41:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2701:2904   */\ntag_23:\n    /* \"src/MyNFT.sol\":388:1684  contract MyNFT is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/MyNFT.sol\":388:1684  contract MyNFT is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd204c45e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/MyNFT.sol\":1427:1673  function supportsInterface(... */\n    tag_3:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"src/MyNFT.sol\":1427:1673  function supportsInterface(... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_30\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2117:2221  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2196:2206  _allTokens */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2196:2213  _allTokens.length */\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2117:2221  function totalSupply() public view virtual returns (uint256) {... */\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2117:2221  function totalSupply() public view virtual returns (uint256) {... */\n      tag_30\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_42\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1781:2041  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_46\n      tag_55\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_42\n      tag_59\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2298:2529  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_46\n      tag_62\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      tag_36\n      tag_66\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_46\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_42\n      tag_75\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1766:1772  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_32\n      tag_80\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_42\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_18:\n      tag_42\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"src/MyNFT.sol\":1248:1419  function tokenURI(... */\n    tag_19:\n      tag_32\n      tag_91\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"src/MyNFT.sol\":569:756  function safeMint(address to, string memory uri) public onlyOwner {... */\n    tag_20:\n      tag_42\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_21:\n      tag_26\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_42\n      tag_104\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"src/MyNFT.sol\":1427:1673  function supportsInterface(... */\n    tag_29:\n        /* \"src/MyNFT.sol\":1600:1604  bool */\n      0x00\n        /* \"src/MyNFT.sol\":1629:1665  super.supportsInterface(interfaceId) */\n      tag_107\n        /* \"src/MyNFT.sol\":1653:1664  interfaceId */\n      dup3\n        /* \"src/MyNFT.sol\":1629:1652  super.supportsInterface */\n      tag_108\n        /* \"src/MyNFT.sol\":1629:1665  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_107:\n        /* \"src/MyNFT.sol\":1622:1665  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"src/MyNFT.sol\":1427:1673  function supportsInterface(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2483:2496  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2516:2521  _name */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2509:2521  return _name */\n      dup1\n      sload\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_111\n      jump\t// in\n    tag_112:\n      dup1\n      iszero\n      tag_113\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_114\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_113)\n    tag_114:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_115:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_115\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_39:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3677:3684  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      tag_117\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3711:3718  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3697:3710  _requireOwned */\n      tag_118\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6186:6193  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6228  _tokenApprovals */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3739:3760  _getApproved(tokenId) */\n      tag_107\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6116:6245  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_45:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      tag_122\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3510:3512  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3514:3521  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3501:3509  _approve */\n      tag_125\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_122:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4374:4390  to == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4414:4447  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4444:4445  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4414:4447  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4414:4447  ERC721InvalidReceiver(address(0)) */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n    tag_128:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4680:4701  address previousOwner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      tag_130\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4712:4714  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4716:4723  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4704:4711  _update */\n      tag_132\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_130:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4680:4738  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4770:4774  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4753:4766  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n      tag_133\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4798:4848  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6112:6127   */\n      dup1\n      dup7\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4798:4848  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6094:6128   */\n      mstore\n        /* \"#utility.yul\":6144:6162   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6137:6171   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6207:6222   */\n      dup3\n      and\n        /* \"#utility.yul\":6187:6205   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6180:6223   */\n      mstore\n        /* \"#utility.yul\":6029:6047   */\n      0x64\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4798:4848  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_129\n        /* \"#utility.yul\":5854:6229   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n    tag_133:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4359:4867  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1781:2041  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1869:1876  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1902:1918  balanceOf(owner) */\n      tag_137\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1912:1917  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1902:1911  balanceOf */\n      tag_72\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1902:1918  balanceOf(owner) */\n      jump\t// in\n    tag_137:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1893:1898  index */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1893:1918  index >= balanceOf(owner) */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1889:1990  if (index >= balanceOf(owner)) {... */\n      tag_138\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1942:1978  ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      shl(0xe2, 0x295f44f7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6426:6458   */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1942:1978  ERC721OutOfBoundsIndex(owner, index) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6408:6459   */\n      mstore\n        /* \"#utility.yul\":6475:6493   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6468:6502   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6381:6399   */\n      0x44\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1942:1978  ERC721OutOfBoundsIndex(owner, index) */\n      tag_129\n        /* \"#utility.yul\":6234:6508   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1889:1990  if (index >= balanceOf(owner)) {... */\n    tag_138:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2007:2026  _ownedTokens[owner] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2007:2019  _ownedTokens */\n      0x06\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2007:2026  _ownedTokens[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2007:2033  _ownedTokens[owner][index] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1781:2041  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_60:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_142\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5042:5046  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5048:5050  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5052:5059  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5041  safeTransferFrom */\n      tag_89\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_142:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2298:2529  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_63:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2364:2371  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2397:2410  totalSupply() */\n      tag_144\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2196:2206  _allTokens */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2196:2213  _allTokens.length */\n      sload\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2117:2221  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2397:2410  totalSupply() */\n    tag_144:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2388:2393  index */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2388:2410  index >= totalSupply() */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2384:2487  if (index >= totalSupply()) {... */\n      tag_145\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2434:2475  ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      shl(0xe2, 0x295f44f7)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2465:2466  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2434:2475  ERC721OutOfBoundsIndex(address(0), index) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6408:6459   */\n      mstore\n        /* \"#utility.yul\":6475:6493   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6468:6502   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6381:6399   */\n      0x44\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2434:2475  ERC721OutOfBoundsIndex(address(0), index) */\n      tag_129\n        /* \"#utility.yul\":6234:6508   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2384:2487  if (index >= totalSupply()) {... */\n    tag_145:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2504:2514  _allTokens */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2515:2520  index */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2504:2521  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_148\n      jumpi\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2497:2521  return _allTokens[index] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2298:2529  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_67:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2314:2321  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      tag_107\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2355:2362  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2341:2354  _requireOwned */\n      tag_118\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2039:2046  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2063:2082  owner == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n      tag_154\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2106:2136  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2133:2134  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2106:2136  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2106:2136  ERC721InvalidOwner(address(0)) */\n      tag_129\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n    tag_154:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2165:2174  _balances */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_157\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_158\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      tag_160\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2460:2461  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2451  _transferOwnership */\n      tag_161\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_160:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_80:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2645:2658  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2678:2685  _symbol */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2671:2685  return _symbol */\n      dup1\n      sload\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_85:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_122\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3959:3967  operator */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3969:3977  approved */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3926:3944  _setApprovalForAll */\n      tag_172\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_89:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      tag_174\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5270:5274  from */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5276:5278  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5280:5287  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5257:5269  transferFrom */\n      tag_53\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_174:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_133\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5322:5326  from */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5328:5330  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5332:5339  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5341:5345  data */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5299:5321  _checkOnERC721Received */\n      tag_176\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"src/MyNFT.sol\":1248:1419  function tokenURI(... */\n    tag_92:\n        /* \"src/MyNFT.sol\":1355:1368  string memory */\n      0x60\n        /* \"src/MyNFT.sol\":1388:1411  super.tokenURI(tokenId) */\n      tag_107\n        /* \"src/MyNFT.sol\":1403:1410  tokenId */\n      dup3\n        /* \"src/MyNFT.sol\":1388:1402  super.tokenURI */\n      tag_179\n        /* \"src/MyNFT.sol\":1388:1411  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"src/MyNFT.sol\":569:756  function safeMint(address to, string memory uri) public onlyOwner {... */\n    tag_97:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_181\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_158\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"src/MyNFT.sol\":664:676  _nextTokenId */\n      0x0c\n        /* \"src/MyNFT.sol\":664:678  _nextTokenId++ */\n      dup1\n      sload\n        /* \"src/MyNFT.sol\":646:661  uint256 tokenId */\n      0x00\n      swap2\n      dup3\n        /* \"src/MyNFT.sol\":664:678  _nextTokenId++ */\n      tag_183\n      dup4\n      tag_184\n      jump\t// in\n    tag_183:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"src/MyNFT.sol\":646:678  uint256 tokenId = _nextTokenId++ */\n      swap1\n      pop\n        /* \"src/MyNFT.sol\":689:711  _safeMint(to, tokenId) */\n      tag_185\n        /* \"src/MyNFT.sol\":699:701  to */\n      dup4\n        /* \"src/MyNFT.sol\":703:710  tokenId */\n      dup3\n        /* \"src/MyNFT.sol\":689:698  _safeMint */\n      tag_186\n        /* \"src/MyNFT.sol\":689:711  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"src/MyNFT.sol\":722:748  _setTokenURI(tokenId, uri) */\n      tag_142\n        /* \"src/MyNFT.sol\":735:742  tokenId */\n      dup2\n        /* \"src/MyNFT.sol\":744:747  uri */\n      dup4\n        /* \"src/MyNFT.sol\":722:734  _setTokenURI */\n      tag_188\n        /* \"src/MyNFT.sol\":722:748  _setTokenURI(tokenId, uri) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4145:4149  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4187  _operatorApprovals */\n      0x05\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4204  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_191\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_158\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2733  newOwner == address(0) */\n      dup2\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2757:2788  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2785:2786  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2757:2788  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2757:2788  OwnableInvalidOwner(address(0)) */\n      tag_129\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n    tag_193:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      tag_195\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2829:2837  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2828  _transferOwnership */\n      tag_161\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_195:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":963:1172  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_108:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1065:1069  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1089:1124  interfaceId == ERC4906_INTERFACE_ID */\n      dup3\n      and\n      shl(0xe1, 0x24832483)\n      eq\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1089:1164  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      tag_107\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1128:1164  super.supportsInterface(interfaceId) */\n      tag_107\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1152:1163  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1128:1151  super.supportsInterface */\n      tag_199\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1128:1164  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16585:16832  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_118:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16648:16655  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5978  _owners */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16712:16802  if (owner == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16759:16790  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2324:2349   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2297:2315   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16759:16790  ERC721NonexistentToken(tokenId) */\n      tag_129\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14817:14939  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_125:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      tag_142\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14907:14909  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14911:14918  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14920:14924  auth */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14926:14930  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14898:14906  _approve */\n      tag_209\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"src/MyNFT.sol\":834:1048  function _update(... */\n    tag_132:\n        /* \"src/MyNFT.sol\":981:988  address */\n      0x00\n        /* \"src/MyNFT.sol\":1008:1040  super._update(to, tokenId, auth) */\n      tag_211\n        /* \"src/MyNFT.sol\":1022:1024  to */\n      dup5\n        /* \"src/MyNFT.sol\":1026:1033  tokenId */\n      dup5\n        /* \"src/MyNFT.sol\":1035:1039  auth */\n      dup5\n        /* \"src/MyNFT.sol\":1008:1021  super._update */\n      tag_212\n        /* \"src/MyNFT.sol\":1008:1040  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_211:\n        /* \"src/MyNFT.sol\":1001:1040  return super._update(to, tokenId, auth) */\n      swap5\n        /* \"src/MyNFT.sol\":834:1048  function _update(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1858:2024  function _checkOwner() internal view virtual {... */\n    tag_158:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1766:1772  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1941  owner() != _msgSender() */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1914:2017  if (owner() != _msgSender()) {... */\n      tag_160\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1965:2005  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1965:2005  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1965:2005  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_129\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_161:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n      0x0b\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n      swap2\n      and\n      swap2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n      dup3\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n      0x00\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3069:3197  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16132:16154  operator == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16178:16209  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16178:16209  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16178:16209  ERC721InvalidOperator(operator) */\n      tag_129\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16249  _operatorApprovals */\n      0x05\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16266  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16277  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17499:17513  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17499:17517  to.code.length > 0 */\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17495:18174  if (to.code.length > 0) {... */\n      tag_133\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17538:17609  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17538:17574  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17538:17609  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_227\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17589:17593  from */\n      dup9\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17595:17602  tokenId */\n      dup8\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17604:17608  data */\n      dup8\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17538:17609  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_230\n      swap2\n      dup2\n      add\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      0x01\n    tag_229:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_232\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_237\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_236)\n    tag_237:\n      0x60\n      swap2\n      pop\n    tag_236:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17852:17858  reason */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17852:17865  reason.length */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17869:17870  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17852:17870  reason.length == 0 */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n      tag_238\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17902:17927  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      dup6\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17902:17927  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17902:17927  ERC721InvalidReceiver(to) */\n      tag_129\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n    tag_238:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18098:18104  reason */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18092:18105  mload(reason) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18083:18089  reason */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18079:18081  32 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18075:18090  add(32, reason) */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18068:18106  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_232:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17657:17708  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_242\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17740:17765  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      dup6\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17740:17765  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17740:17765  ERC721InvalidReceiver(to) */\n      tag_129\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_242:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17610:17800  returns (bytes4 retval) {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1243:1852  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_179:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1316:1329  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1342:1364  _requireOwned(tokenId) */\n      tag_245\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1356:1363  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1342:1355  _requireOwned */\n      tag_118\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1342:1364  _requireOwned(tokenId) */\n      jump\t// in\n    tag_245:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1377:1400  string memory _tokenURI */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1403:1422  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1403:1413  _tokenURIs */\n      0x0a\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1403:1422  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1377:1422  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_246\n      swap1\n      tag_111\n      jump\t// in\n    tag_246:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_247\n      swap1\n      tag_111\n      jump\t// in\n    tag_247:\n      dup1\n      iszero\n      tag_248\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_249\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_248)\n    tag_249:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_250:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_250\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1433:1451  string memory base */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1454:1464  _baseURI() */\n      tag_251\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3350:3359  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3273:3367  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1454:1464  _baseURI() */\n    tag_251:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1433:1464  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1550  base */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1540:1558  bytes(base).length */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1562:1563  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1540:1563  bytes(base).length == 0 */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1536:1608  if (bytes(base).length == 0) {... */\n      tag_253\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1587:1596  _tokenURI */\n      swap3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1243:1852  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1536:1608  if (bytes(base).length == 0) {... */\n    tag_253:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1709:1732  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1709:1736  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1705:1802  if (bytes(_tokenURI).length > 0) {... */\n      tag_254\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1774:1778  base */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1780:1789  _tokenURI */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1760:1790  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_255\n      swap3\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1753:1790  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1243:1852  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1705:1802  if (bytes(_tokenURI).length > 0) {... */\n    tag_254:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1821:1844  super.tokenURI(tokenId) */\n      tag_211\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1836:1843  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1821:1835  super.tokenURI */\n      tag_258\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1821:1844  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10936:11038  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_186:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11004:11030  _safeMint(to, tokenId, \"\") */\n      tag_122\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11014:11016  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11018:11025  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11004:11030  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11004:11013  _safeMint */\n      tag_261\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11004:11030  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1978:2148  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_188:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2089  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2080  _tokenURIs */\n      0x0a\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2089  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2101  _tokenURIs[tokenId] = _tokenURI */\n      tag_263\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2092:2101  _tokenURI */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2089  _tokenURIs[tokenId] */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2101  _tokenURIs[tokenId] = _tokenURI */\n      tag_264\n      jump\t// in\n    tag_263:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2117:2140  MetadataUpdate(tokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      dup3\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2117:2140  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n      swap1\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2117:2140  MetadataUpdate(tokenId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1978:2148  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1473:1697  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_199:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1575:1579  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1599:1649  interfaceId == type(IERC721Enumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x780e9d63)\n      eq\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1599:1689  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_107\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1653:1689  super.supportsInterface(interfaceId) */\n      tag_107\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1677:1688  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1653:1676  super.supportsInterface */\n      tag_269\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1653:1689  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_209:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15289:15298  emitEvent */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n      dup1\n      tag_272\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15302:15320  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n    tag_272:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15337:15350  address owner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      tag_274\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15367:15374  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15353:15366  _requireOwned */\n      tag_118\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      jump\t// in\n    tag_274:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15337:15375  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15524  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n      tag_275\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15537:15541  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15528:15533  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      and\n      eq\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n    tag_275:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      tag_277\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15563:15568  owner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15570:15574  auth */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15546:15562  isApprovedForAll */\n      tag_101\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_277:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15545:15575  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_276:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15603:15630  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15603:15630  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15603:15630  ERC721InvalidApprover(auth) */\n      tag_129\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_278:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15666:15675  emitEvent */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15721:15728  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15717:15719  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15710:15715  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n    tag_280:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15322:15756  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n    tag_273:\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15783  _tokenApprovals */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15797  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2590:3230  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n    tag_212:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2685:2692  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2705:2726  address previousOwner */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2729:2761  super._update(to, tokenId, auth) */\n      tag_282\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2743:2745  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2747:2754  tokenId */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2756:2760  auth */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2729:2742  super._update */\n      tag_283\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2729:2761  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_282:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2705:2761  address previousOwner = super._update(to, tokenId, auth) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2778:2805  previousOwner == address(0) */\n      dup2\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2774:2988  if (previousOwner == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2822:2862  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_285\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2854:2861  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4054:4064  _allTokens */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4054:4071  _allTokens.length */\n      dup1\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4027:4051  _allTokensIndex[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4027:4042  _allTokensIndex */\n      0x09\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4027:4051  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4027:4071  _allTokensIndex[tokenId] = _allTokens.length */\n      dup3\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4082:4106  _allTokens.push(tokenId) */\n      0x01\n      dup3\n      add\n      dup4\n      sstore\n      swap2\n      swap1\n      swap2\n      mstore\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      add\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3950:4114  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2822:2862  _addTokenToAllTokensEnumeration(tokenId) */\n    tag_285:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2774:2988  if (previousOwner == address(0)) {... */\n      jump(tag_289)\n    tag_284:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2901:2903  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2884:2903  previousOwner != to */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2884:2897  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2884:2903  previousOwner != to */\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2880:2988  if (previousOwner != to) {... */\n      tag_289\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2920:2976  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_289\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2953:2966  previousOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2968:2975  tokenId */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2920:2952  _removeTokenFromOwnerEnumeration */\n      tag_290\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2920:2976  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_289:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3002:3018  to == address(0) */\n      dup6\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2998:3190  if (to == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3035:3080  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_292\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3072:3079  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3035:3071  _removeTokenFromAllTokensEnumeration */\n      tag_293\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3035:3080  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_292:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2998:3190  if (to == address(0)) {... */\n      jump(tag_211)\n    tag_291:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3119:3121  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3102:3121  previousOwner != to */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3102:3115  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3102:3121  previousOwner != to */\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3098:3190  if (previousOwner != to) {... */\n      tag_211\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3138:3178  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_211\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3166:3168  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3170:3177  tokenId */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3138:3165  _addTokenToOwnerEnumeration */\n      tag_297\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3138:3178  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_258:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2828:2841  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      tag_300\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2868:2875  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2854:2867  _requireOwned */\n      tag_118\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      jump\t// in\n    tag_300:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2889:2910  string memory baseURI */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n      tag_301\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3350:3359  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3273:3367  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n    tag_301:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2889:2923  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2965:2966  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2947:2954  baseURI */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:2962  bytes(baseURI).length */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:2966  bytes(baseURI).length > 0 */\n      gt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_302\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_303)\n    tag_302:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2983:2990  baseURI */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      tag_304\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:2999  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:3008  tokenId.toString */\n      tag_305\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      jump\t// in\n    tag_304:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2969:3011  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_306\n      swap3\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_303:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2934:3016  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11265:11450  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_261:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11360:11378  _mint(to, tokenId) */\n      tag_308\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11366:11368  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11370:11377  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11360:11365  _mint */\n      tag_309\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11360:11378  _mint(to, tokenId) */\n      jump\t// in\n    tag_308:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11389:11442  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_142\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11420:11421  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11424:11426  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11428:11435  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11437:11441  data */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11389:11411  _checkOnERC721Received */\n      tag_176\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11389:11442  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_269:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1709:1713  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1786  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n      tag_312\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1803:1851  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n    tag_312:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1904  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_107\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":885:925  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1868:1904  super.supportsInterface(interfaceId) */\n      tag_107\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":785:933  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_283:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9164:9171  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5978  _owners */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9279:9297  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9275:9363  if (auth != address(0)) {... */\n      tag_319\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      tag_319\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9331:9335  from */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9337:9341  auth */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9343:9350  tokenId */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9314:9330  _checkAuthorized */\n      tag_320\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_319:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9410:9428  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n      tag_321\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      tag_322\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9545:9546  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9549:9556  tokenId */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9566:9567  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9570:9575  false */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9528:9536  _approve */\n      tag_209\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9631  _balances */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9642  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9685:9701  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n      tag_323\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9756  _balances */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9765  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9764:9765  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9765  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n    tag_323:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9811  _owners */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9825  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9890:9894  from */\n      swap5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4741:5718  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_290:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5007:5029  uint256 lastTokenIndex */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5032:5047  balanceOf(from) */\n      tag_327\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5042:5046  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5032:5041  balanceOf */\n      tag_72\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5032:5047  balanceOf(from) */\n      jump\t// in\n    tag_327:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5058:5076  uint256 tokenIndex */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5079:5105  _ownedTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5079:5096  _ownedTokensIndex */\n      0x07\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5079:5105  _ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5007:5047  uint256 lastTokenIndex = balanceOf(from) */\n      swap1\n      swap2\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5212:5240  tokenIndex != lastTokenIndex */\n      dup1\n      dup3\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5208:5536  if (tokenIndex != lastTokenIndex) {... */\n      tag_328\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5279:5297  _ownedTokens[from] */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5257:5276  uint256 lastTokenId */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5279:5297  _ownedTokens[from] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5279:5291  _ownedTokens */\n      0x06\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5279:5297  _ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5279:5313  _ownedTokens[from][lastTokenIndex] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5330:5360  _ownedTokens[from][tokenIndex] */\n      dup5\n      dup5\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5330:5374  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5447:5477  _ownedTokensIndex[lastTokenId] */\n      dup4\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5447:5464  _ownedTokensIndex */\n      0x07\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5447:5477  _ownedTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5447:5490  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5208:5536  if (tokenIndex != lastTokenIndex) {... */\n    tag_328:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5632:5658  _ownedTokensIndex[tokenId] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5632:5649  _ownedTokensIndex */\n      0x07\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5632:5658  _ownedTokensIndex[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5625:5658  delete _ownedTokensIndex[tokenId] */\n      dup5\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5676:5694  _ownedTokens[from] */\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5676:5688  _ownedTokens */\n      0x06\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5676:5694  _ownedTokens[from] */\n      dup2\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5676:5710  _ownedTokens[from][lastTokenIndex] */\n      swap2\n      dup4\n      mstore\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5669:5710  delete _ownedTokens[from][lastTokenIndex] */\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4741:5718  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6013:7092  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_293:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6291:6301  _allTokens */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6291:6308  _allTokens.length */\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6266:6288  uint256 lastTokenIndex */\n      0x00\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6291:6312  _allTokens.length - 1 */\n      tag_330\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6311:6312  1 */\n      0x01\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6291:6312  _allTokens.length - 1 */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6323:6341  uint256 tokenIndex */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6344:6368  _allTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6344:6359  _allTokensIndex */\n      0x09\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6344:6368  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6717:6727  _allTokens */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6717:6743  _allTokens[lastTokenIndex] */\n      dup1\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6266:6312  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap4\n      swap5\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6344:6368  _allTokensIndex[tokenId] */\n      swap1\n      swap3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6266:6312  uint256 lastTokenIndex = _allTokens.length - 1 */\n      dup5\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6717:6743  _allTokens[lastTokenIndex] */\n      dup2\n      lt\n      tag_333\n      jumpi\n      tag_333\n      tag_149\n      jump\t// in\n    tag_333:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6695:6743  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6781:6792  lastTokenId */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6756:6766  _allTokens */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6767:6777  tokenIndex */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6756:6778  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_336\n      jumpi\n      tag_336\n      tag_149\n      jump\t// in\n    tag_336:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6756:6792  _allTokens[tokenIndex] = lastTokenId */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6861:6889  _allTokensIndex[lastTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6861:6876  _allTokensIndex */\n      0x09\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6861:6889  _allTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6861:6902  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup5\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":7033:7057  _allTokensIndex[tokenId] */\n      dup6\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":7026:7057  delete _allTokensIndex[tokenId] */\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":7068:7078  _allTokens */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":7068:7084  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_339\n      jumpi\n      tag_339\n      tag_340\n      jump\t// in\n    tag_339:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6084:7092  {... */\n      pop\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6013:7092  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3531:3749  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_297:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3616:3630  uint256 length */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3649:3650  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3633:3646  balanceOf(to) */\n      tag_343\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3643:3645  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3633:3642  balanceOf */\n      tag_72\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3633:3646  balanceOf(to) */\n      jump\t// in\n    tag_343:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3633:3650  balanceOf(to) - 1 */\n      tag_344\n      swap2\n      swap1\n      tag_331\n      jump\t// in\n    tag_344:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3661:3677  _ownedTokens[to] */\n      swap1\n      swap4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3661:3673  _ownedTokens */\n      0x06\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3661:3677  _ownedTokens[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3661:3685  _ownedTokens[to][length] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3661:3695  _ownedTokens[to][length] = tokenId */\n      dup6\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3706:3732  _ownedTokensIndex[tokenId] */\n      swap4\n      dup3\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3706:3723  _ownedTokensIndex */\n      0x07\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3706:3732  _ownedTokensIndex[tokenId] */\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3706:3741  _ownedTokensIndex[tokenId] = length */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3531:3749  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_305:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":716:729  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":767:781  uint256 length */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      tag_346\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":795:800  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":784:794  Math.log10 */\n      tag_347\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      jump\t// in\n    tag_346:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":804:805  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":784:805  Math.log10(value) + 1 */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":767:805  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":820:840  string memory buffer */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":854:860  length */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":843:861  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_349\n      jumpi\n      tag_349\n      tag_350\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_351\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_351:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":820:861  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":985:1013  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1001:1003  32 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":985:1013  add(buffer, add(32, length)) */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n    tag_352:\n      not(0x00)\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1074:1079  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1211:1213  10 */\n      0x0a\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1200:1214  mod(value, 10) */\n      dup7\n      mod\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1195:1227  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1074:1079  ptr-- */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1182:1228  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1274:1276  10 */\n      0x0a\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1265:1276  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1295:1316  if (value == 0) break */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n      tag_352\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1295:1316  if (value == 0) break */\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1353:1359  buffer */\n      swap4\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10238:10573  function _mint(address to, uint256 tokenId) internal {... */\n    tag_309:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10306:10322  to == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10302:10391  if (to == address(0)) {... */\n      tag_359\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10346:10379  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10376:10377  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10346:10379  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10346:10379  ERC721InvalidReceiver(address(0)) */\n      tag_129\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10302:10391  if (to == address(0)) {... */\n    tag_359:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10401:10422  address previousOwner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10425:10457  _update(to, tokenId, address(0)) */\n      tag_361\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10433:10435  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10437:10444  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10454:10455  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10425:10432  _update */\n      tag_132\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10425:10457  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_361:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10401:10457  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10472:10499  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10468:10566  if (previousOwner != address(0)) {... */\n      tag_142\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10523:10554  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10551:10552  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10523:10554  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10523:10554  ERC721InvalidSender(address(0)) */\n      tag_129\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7285:7661  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_320:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      tag_366\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7412:7417  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7419:7426  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7428:7435  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7398:7411  _isAuthorized */\n      tag_367\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_366:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7393:7654  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_142\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7457:7476  owner == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n      tag_369\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7504:7535  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2324:2349   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2297:2315   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7504:7535  ERC721NonexistentToken(tokenId) */\n      tag_129\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n    tag_369:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7583:7627  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6426:6458   */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7583:7627  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6408:6459   */\n      mstore\n        /* \"#utility.yul\":6475:6493   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6468:6502   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6381:6399   */\n      0x44\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7583:7627  ERC721InsufficientApproval(spender, tokenId) */\n      tag_129\n        /* \"#utility.yul\":6234:6508   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_347:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12587:12594  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12665:12682  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n      tag_374\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12703:12720  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12749:12751  64 */\n      0x40\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12739:12751  result += 64 */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n    tag_374:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12794:12802  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12785:12790  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12785:12802  value >= 10 ** 32 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n      tag_377\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12832:12840  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12823:12840  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12869:12871  32 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12859:12871  result += 32 */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n    tag_377:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12914:12922  10 ** 16 */\n      0x2386f26fc10000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12905:12910  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12905:12922  value >= 10 ** 16 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n      tag_380\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12952:12960  10 ** 16 */\n      0x2386f26fc10000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12943:12960  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12989:12991  16 */\n      0x10\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12979:12991  result += 16 */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n    tag_380:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13034:13041  10 ** 8 */\n      0x05f5e100\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13025:13030  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13025:13041  value >= 10 ** 8 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n      tag_383\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13071:13078  10 ** 8 */\n      0x05f5e100\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13062:13078  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13107:13108  8 */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13097:13108  result += 8 */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n    tag_383:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13151:13158  10 ** 4 */\n      0x2710\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13142:13147  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13142:13158  value >= 10 ** 4 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n      tag_386\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13188:13195  10 ** 4 */\n      0x2710\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13179:13195  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13224:13225  4 */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13214:13225  result += 4 */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n    tag_386:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13268:13275  10 ** 2 */\n      0x64\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13259:13264  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13259:13275  value >= 10 ** 2 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n      tag_389\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13305:13312  10 ** 2 */\n      0x64\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13296:13312  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13341:13342  2 */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13331:13342  result += 2 */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n    tag_389:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13385:13392  10 ** 1 */\n      0x0a\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13376:13381  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13376:13392  value >= 10 ** 1 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13372:13440  if (value >= 10 ** 1) {... */\n      tag_107\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13423:13424  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13413:13424  result += 1 */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13468:13474  result */\n      swap3\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_367:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6668:6672  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6726  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6833  spender != address(0) &&... */\n      tag_211\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6753:6760  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6749  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6796  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_396\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      tag_396\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6781:6786  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6788:6795  spender */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6764:6780  isApprovedForAll */\n      tag_101\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_396:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6832  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_211\n      jumpi\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6186:6193  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6228  _tokenApprovals */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6832  _getApproved(tokenId) == spender */\n      swap2\n      and\n      eq\n      swap2\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_399:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_28:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_412:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_303\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_399\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_400:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_416:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_416)\n    tag_418:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_401:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_420\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_400\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_35:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_303\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_401\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_38:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_424:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_402:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_427:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_44:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_429:\n        /* \"#utility.yul\":2087:2116   */\n      tag_430\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_402\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2688   */\n    tag_52:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      dup1\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_433:\n        /* \"#utility.yul\":2545:2574   */\n      tag_434\n        /* \"#utility.yul\":2564:2573   */\n      dup5\n        /* \"#utility.yul\":2545:2574   */\n      tag_402\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":2535:2574   */\n      swap3\n      pop\n        /* \"#utility.yul\":2593:2631   */\n      tag_435\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2593:2631   */\n      tag_402\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":2583:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2678:2680   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n        /* \"#utility.yul\":2640:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2693:2879   */\n    tag_71:\n        /* \"#utility.yul\":2752:2758   */\n      0x00\n        /* \"#utility.yul\":2805:2807   */\n      0x20\n        /* \"#utility.yul\":2793:2802   */\n      dup3\n        /* \"#utility.yul\":2784:2791   */\n      dup5\n        /* \"#utility.yul\":2780:2803   */\n      sub\n        /* \"#utility.yul\":2776:2808   */\n      slt\n        /* \"#utility.yul\":2773:2825   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2818:2819   */\n      dup1\n        /* \"#utility.yul\":2811:2823   */\n      revert\n        /* \"#utility.yul\":2773:2825   */\n    tag_437:\n        /* \"#utility.yul\":2844:2873   */\n      tag_303\n        /* \"#utility.yul\":2863:2872   */\n      dup3\n        /* \"#utility.yul\":2844:2873   */\n      tag_402\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_84:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_440:\n        /* \"#utility.yul\":3049:3078   */\n      tag_441\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_402\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_442:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_350:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:3999   */\n    tag_403:\n        /* \"#utility.yul\":3432:3437   */\n      0x00\n        /* \"#utility.yul\":3462:3480   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3503:3505   */\n      dup1\n        /* \"#utility.yul\":3495:3501   */\n      dup5\n        /* \"#utility.yul\":3492:3506   */\n      gt\n        /* \"#utility.yul\":3489:3529   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":3509:3527   */\n      tag_446\n      tag_350\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3584:3586   */\n      0x40\n        /* \"#utility.yul\":3578:3587   */\n      mload\n        /* \"#utility.yul\":3552:3554   */\n      0x1f\n        /* \"#utility.yul\":3638:3653   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3634:3658   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3660:3662   */\n      0x3f\n        /* \"#utility.yul\":3630:3663   */\n      add\n        /* \"#utility.yul\":3626:3668   */\n      and\n        /* \"#utility.yul\":3614:3669   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3684:3702   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3704:3726   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3681:3727   */\n      or\n        /* \"#utility.yul\":3678:3750   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":3730:3748   */\n      tag_448\n      tag_350\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3770:3780   */\n      dup2\n        /* \"#utility.yul\":3766:3768   */\n      0x40\n        /* \"#utility.yul\":3759:3781   */\n      mstore\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3790:3805   */\n      swap4\n      pop\n        /* \"#utility.yul\":3829:3835   */\n      dup6\n        /* \"#utility.yul\":3821:3827   */\n      dup2\n        /* \"#utility.yul\":3814:3836   */\n      mstore\n        /* \"#utility.yul\":3869:3872   */\n      dup7\n        /* \"#utility.yul\":3860:3866   */\n      dup7\n        /* \"#utility.yul\":3855:3858   */\n      dup7\n        /* \"#utility.yul\":3851:3867   */\n      add\n        /* \"#utility.yul\":3848:3873   */\n      gt\n        /* \"#utility.yul\":3845:3890   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":3886:3887   */\n      0x00\n        /* \"#utility.yul\":3883:3884   */\n      dup1\n        /* \"#utility.yul\":3876:3888   */\n      revert\n        /* \"#utility.yul\":3845:3890   */\n    tag_449:\n        /* \"#utility.yul\":3936:3942   */\n      dup6\n        /* \"#utility.yul\":3931:3934   */\n      dup6\n        /* \"#utility.yul\":3924:3928   */\n      0x20\n        /* \"#utility.yul\":3916:3922   */\n      dup4\n        /* \"#utility.yul\":3912:3929   */\n      add\n        /* \"#utility.yul\":3899:3943   */\n      calldatacopy\n        /* \"#utility.yul\":3991:3992   */\n      0x00\n        /* \"#utility.yul\":3984:3988   */\n      0x20\n        /* \"#utility.yul\":3975:3981   */\n      dup8\n        /* \"#utility.yul\":3967:3973   */\n      dup4\n        /* \"#utility.yul\":3963:3982   */\n      add\n        /* \"#utility.yul\":3959:3989   */\n      add\n        /* \"#utility.yul\":3952:3993   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:3999   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4004:4670   */\n    tag_88:\n        /* \"#utility.yul\":4099:4105   */\n      0x00\n        /* \"#utility.yul\":4107:4113   */\n      dup1\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4176:4179   */\n      0x80\n        /* \"#utility.yul\":4164:4173   */\n      dup6\n        /* \"#utility.yul\":4155:4162   */\n      dup8\n        /* \"#utility.yul\":4151:4174   */\n      sub\n        /* \"#utility.yul\":4147:4180   */\n      slt\n        /* \"#utility.yul\":4144:4197   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":4193:4194   */\n      0x00\n        /* \"#utility.yul\":4190:4191   */\n      dup1\n        /* \"#utility.yul\":4183:4195   */\n      revert\n        /* \"#utility.yul\":4144:4197   */\n    tag_451:\n        /* \"#utility.yul\":4216:4245   */\n      tag_452\n        /* \"#utility.yul\":4235:4244   */\n      dup6\n        /* \"#utility.yul\":4216:4245   */\n      tag_402\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4206:4245   */\n      swap4\n      pop\n        /* \"#utility.yul\":4264:4302   */\n      tag_453\n        /* \"#utility.yul\":4298:4300   */\n      0x20\n        /* \"#utility.yul\":4287:4296   */\n      dup7\n        /* \"#utility.yul\":4283:4301   */\n      add\n        /* \"#utility.yul\":4264:4302   */\n      tag_402\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":4254:4302   */\n      swap3\n      pop\n        /* \"#utility.yul\":4349:4351   */\n      0x40\n        /* \"#utility.yul\":4338:4347   */\n      dup6\n        /* \"#utility.yul\":4334:4352   */\n      add\n        /* \"#utility.yul\":4321:4353   */\n      calldataload\n        /* \"#utility.yul\":4311:4353   */\n      swap2\n      pop\n        /* \"#utility.yul\":4404:4406   */\n      0x60\n        /* \"#utility.yul\":4393:4402   */\n      dup6\n        /* \"#utility.yul\":4389:4407   */\n      add\n        /* \"#utility.yul\":4376:4408   */\n      calldataload\n        /* \"#utility.yul\":4431:4449   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4420:4450   */\n      gt\n        /* \"#utility.yul\":4417:4467   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":4463:4464   */\n      0x00\n        /* \"#utility.yul\":4460:4461   */\n      dup1\n        /* \"#utility.yul\":4453:4465   */\n      revert\n        /* \"#utility.yul\":4417:4467   */\n    tag_454:\n        /* \"#utility.yul\":4486:4508   */\n      dup6\n      add\n        /* \"#utility.yul\":4539:4543   */\n      0x1f\n        /* \"#utility.yul\":4531:4544   */\n      dup2\n      add\n        /* \"#utility.yul\":4527:4554   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4517:4572   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":4568:4569   */\n      0x00\n        /* \"#utility.yul\":4565:4566   */\n      dup1\n        /* \"#utility.yul\":4558:4570   */\n      revert\n        /* \"#utility.yul\":4517:4572   */\n    tag_455:\n        /* \"#utility.yul\":4591:4664   */\n      tag_456\n        /* \"#utility.yul\":4656:4663   */\n      dup8\n        /* \"#utility.yul\":4651:4653   */\n      dup3\n        /* \"#utility.yul\":4638:4654   */\n      calldataload\n        /* \"#utility.yul\":4633:4635   */\n      0x20\n        /* \"#utility.yul\":4629:4631   */\n      dup5\n        /* \"#utility.yul\":4625:4636   */\n      add\n        /* \"#utility.yul\":4591:4664   */\n      tag_403\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4581:4664   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4004:4670   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4675:5199   */\n    tag_96:\n        /* \"#utility.yul\":4753:4759   */\n      0x00\n        /* \"#utility.yul\":4761:4767   */\n      dup1\n        /* \"#utility.yul\":4814:4816   */\n      0x40\n        /* \"#utility.yul\":4802:4811   */\n      dup4\n        /* \"#utility.yul\":4793:4800   */\n      dup6\n        /* \"#utility.yul\":4789:4812   */\n      sub\n        /* \"#utility.yul\":4785:4817   */\n      slt\n        /* \"#utility.yul\":4782:4834   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":4830:4831   */\n      0x00\n        /* \"#utility.yul\":4827:4828   */\n      dup1\n        /* \"#utility.yul\":4820:4832   */\n      revert\n        /* \"#utility.yul\":4782:4834   */\n    tag_458:\n        /* \"#utility.yul\":4853:4882   */\n      tag_459\n        /* \"#utility.yul\":4872:4881   */\n      dup4\n        /* \"#utility.yul\":4853:4882   */\n      tag_402\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4843:4882   */\n      swap2\n      pop\n        /* \"#utility.yul\":4933:4935   */\n      0x20\n        /* \"#utility.yul\":4922:4931   */\n      dup4\n        /* \"#utility.yul\":4918:4936   */\n      add\n        /* \"#utility.yul\":4905:4937   */\n      calldataload\n        /* \"#utility.yul\":4960:4978   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4952:4958   */\n      dup2\n        /* \"#utility.yul\":4949:4979   */\n      gt\n        /* \"#utility.yul\":4946:4996   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":4992:4993   */\n      0x00\n        /* \"#utility.yul\":4989:4990   */\n      dup1\n        /* \"#utility.yul\":4982:4994   */\n      revert\n        /* \"#utility.yul\":4946:4996   */\n    tag_460:\n        /* \"#utility.yul\":5015:5037   */\n      dup4\n      add\n        /* \"#utility.yul\":5068:5072   */\n      0x1f\n        /* \"#utility.yul\":5060:5073   */\n      dup2\n      add\n        /* \"#utility.yul\":5056:5083   */\n      dup6\n      sgt\n        /* \"#utility.yul\":5046:5101   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":5097:5098   */\n      0x00\n        /* \"#utility.yul\":5094:5095   */\n      dup1\n        /* \"#utility.yul\":5087:5099   */\n      revert\n        /* \"#utility.yul\":5046:5101   */\n    tag_461:\n        /* \"#utility.yul\":5120:5193   */\n      tag_462\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5180:5182   */\n      dup3\n        /* \"#utility.yul\":5167:5183   */\n      calldataload\n        /* \"#utility.yul\":5162:5164   */\n      0x20\n        /* \"#utility.yul\":5158:5160   */\n      dup5\n        /* \"#utility.yul\":5154:5165   */\n      add\n        /* \"#utility.yul\":5120:5193   */\n      tag_403\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5110:5193   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4675:5199   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5204:5464   */\n    tag_100:\n        /* \"#utility.yul\":5272:5278   */\n      0x00\n        /* \"#utility.yul\":5280:5286   */\n      dup1\n        /* \"#utility.yul\":5333:5335   */\n      0x40\n        /* \"#utility.yul\":5321:5330   */\n      dup4\n        /* \"#utility.yul\":5312:5319   */\n      dup6\n        /* \"#utility.yul\":5308:5331   */\n      sub\n        /* \"#utility.yul\":5304:5336   */\n      slt\n        /* \"#utility.yul\":5301:5353   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5346:5347   */\n      dup1\n        /* \"#utility.yul\":5339:5351   */\n      revert\n        /* \"#utility.yul\":5301:5353   */\n    tag_464:\n        /* \"#utility.yul\":5372:5401   */\n      tag_465\n        /* \"#utility.yul\":5391:5400   */\n      dup4\n        /* \"#utility.yul\":5372:5401   */\n      tag_402\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5362:5401   */\n      swap2\n      pop\n        /* \"#utility.yul\":5420:5458   */\n      tag_466\n        /* \"#utility.yul\":5454:5456   */\n      0x20\n        /* \"#utility.yul\":5443:5452   */\n      dup5\n        /* \"#utility.yul\":5439:5457   */\n      add\n        /* \"#utility.yul\":5420:5458   */\n      tag_402\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5410:5458   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5464   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5469:5849   */\n    tag_111:\n        /* \"#utility.yul\":5548:5549   */\n      0x01\n        /* \"#utility.yul\":5544:5556   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5591:5603   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5612:5673   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":5666:5670   */\n      0x7f\n        /* \"#utility.yul\":5658:5664   */\n      dup3\n        /* \"#utility.yul\":5654:5671   */\n      and\n        /* \"#utility.yul\":5644:5671   */\n      swap2\n      pop\n        /* \"#utility.yul\":5612:5673   */\n    tag_468:\n        /* \"#utility.yul\":5719:5721   */\n      0x20\n        /* \"#utility.yul\":5711:5717   */\n      dup3\n        /* \"#utility.yul\":5708:5722   */\n      lt\n        /* \"#utility.yul\":5688:5706   */\n      dup2\n        /* \"#utility.yul\":5685:5723   */\n      sub\n        /* \"#utility.yul\":5682:5843   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":5765:5775   */\n      0x4e487b71\n        /* \"#utility.yul\":5760:5763   */\n      0xe0\n        /* \"#utility.yul\":5756:5776   */\n      shl\n        /* \"#utility.yul\":5753:5754   */\n      0x00\n        /* \"#utility.yul\":5746:5777   */\n      mstore\n        /* \"#utility.yul\":5800:5804   */\n      0x22\n        /* \"#utility.yul\":5797:5798   */\n      0x04\n        /* \"#utility.yul\":5790:5805   */\n      mstore\n        /* \"#utility.yul\":5828:5832   */\n      0x24\n        /* \"#utility.yul\":5825:5826   */\n      0x00\n        /* \"#utility.yul\":5818:5833   */\n      revert\n        /* \"#utility.yul\":5682:5843   */\n    tag_469:\n      pop\n        /* \"#utility.yul\":5469:5849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:6640   */\n    tag_149:\n        /* \"#utility.yul\":6574:6584   */\n      0x4e487b71\n        /* \"#utility.yul\":6569:6572   */\n      0xe0\n        /* \"#utility.yul\":6565:6585   */\n      shl\n        /* \"#utility.yul\":6562:6563   */\n      0x00\n        /* \"#utility.yul\":6555:6586   */\n      mstore\n        /* \"#utility.yul\":6605:6609   */\n      0x32\n        /* \"#utility.yul\":6602:6603   */\n      0x04\n        /* \"#utility.yul\":6595:6610   */\n      mstore\n        /* \"#utility.yul\":6629:6633   */\n      0x24\n        /* \"#utility.yul\":6626:6627   */\n      0x00\n        /* \"#utility.yul\":6619:6634   */\n      revert\n        /* \"#utility.yul\":6645:6772   */\n    tag_404:\n        /* \"#utility.yul\":6706:6716   */\n      0x4e487b71\n        /* \"#utility.yul\":6701:6704   */\n      0xe0\n        /* \"#utility.yul\":6697:6717   */\n      shl\n        /* \"#utility.yul\":6694:6695   */\n      0x00\n        /* \"#utility.yul\":6687:6718   */\n      mstore\n        /* \"#utility.yul\":6737:6741   */\n      0x11\n        /* \"#utility.yul\":6734:6735   */\n      0x04\n        /* \"#utility.yul\":6727:6742   */\n      mstore\n        /* \"#utility.yul\":6761:6765   */\n      0x24\n        /* \"#utility.yul\":6758:6759   */\n      0x00\n        /* \"#utility.yul\":6751:6766   */\n      revert\n        /* \"#utility.yul\":6777:6912   */\n    tag_184:\n        /* \"#utility.yul\":6816:6819   */\n      0x00\n        /* \"#utility.yul\":6837:6854   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6834:6877   */\n      tag_476\n      jumpi\n        /* \"#utility.yul\":6857:6875   */\n      tag_476\n      tag_404\n      jump\t// in\n    tag_476:\n      pop\n        /* \"#utility.yul\":6904:6905   */\n      0x01\n        /* \"#utility.yul\":6893:6906   */\n      add\n      swap1\n        /* \"#utility.yul\":6777:6912   */\n      jump\t// out\n        /* \"#utility.yul\":6917:7406   */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7186:7201   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":7168:7202   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7238:7253   */\n      dup5\n      and\n        /* \"#utility.yul\":7233:7235   */\n      0x20\n        /* \"#utility.yul\":7218:7236   */\n      dup3\n      add\n        /* \"#utility.yul\":7211:7254   */\n      mstore\n        /* \"#utility.yul\":7285:7287   */\n      0x40\n        /* \"#utility.yul\":7270:7288   */\n      dup2\n      add\n        /* \"#utility.yul\":7263:7297   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7333:7336   */\n      0x80\n        /* \"#utility.yul\":7328:7330   */\n      0x60\n        /* \"#utility.yul\":7313:7331   */\n      dup3\n      add\n        /* \"#utility.yul\":7306:7337   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7111:7115   */\n      0x00\n      swap1\n        /* \"#utility.yul\":7354:7400   */\n      tag_478\n      swap1\n        /* \"#utility.yul\":7380:7399   */\n      dup4\n      add\n        /* \"#utility.yul\":7372:7378   */\n      dup5\n        /* \"#utility.yul\":7354:7400   */\n      tag_401\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7346:7400   */\n      swap7\n        /* \"#utility.yul\":6917:7406   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7411:7660   */\n    tag_231:\n        /* \"#utility.yul\":7480:7486   */\n      0x00\n        /* \"#utility.yul\":7533:7535   */\n      0x20\n        /* \"#utility.yul\":7521:7530   */\n      dup3\n        /* \"#utility.yul\":7512:7519   */\n      dup5\n        /* \"#utility.yul\":7508:7531   */\n      sub\n        /* \"#utility.yul\":7504:7536   */\n      slt\n        /* \"#utility.yul\":7501:7553   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":7549:7550   */\n      0x00\n        /* \"#utility.yul\":7546:7547   */\n      dup1\n        /* \"#utility.yul\":7539:7551   */\n      revert\n        /* \"#utility.yul\":7501:7553   */\n    tag_480:\n        /* \"#utility.yul\":7581:7590   */\n      dup2\n        /* \"#utility.yul\":7575:7591   */\n      mload\n        /* \"#utility.yul\":7600:7630   */\n      tag_303\n        /* \"#utility.yul\":7624:7629   */\n      dup2\n        /* \"#utility.yul\":7600:7630   */\n      tag_399\n      jump\t// in\n        /* \"#utility.yul\":7665:8161   */\n    tag_256:\n        /* \"#utility.yul\":7844:7847   */\n      0x00\n        /* \"#utility.yul\":7882:7888   */\n      dup4\n        /* \"#utility.yul\":7876:7889   */\n      mload\n        /* \"#utility.yul\":7898:7964   */\n      tag_483\n        /* \"#utility.yul\":7957:7963   */\n      dup2\n        /* \"#utility.yul\":7952:7955   */\n      dup5\n        /* \"#utility.yul\":7945:7949   */\n      0x20\n        /* \"#utility.yul\":7937:7943   */\n      dup9\n        /* \"#utility.yul\":7933:7950   */\n      add\n        /* \"#utility.yul\":7898:7964   */\n      tag_400\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8027:8040   */\n      dup4\n      mload\n        /* \"#utility.yul\":7986:8002   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8049:8119   */\n      tag_484\n        /* \"#utility.yul\":8027:8040   */\n      dup2\n        /* \"#utility.yul\":7986:8002   */\n      dup4\n        /* \"#utility.yul\":8096:8100   */\n      0x20\n        /* \"#utility.yul\":8084:8101   */\n      dup9\n      add\n        /* \"#utility.yul\":8049:8119   */\n      tag_400\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8135:8155   */\n      add\n      swap5\n        /* \"#utility.yul\":7665:8161   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8292:8810   */\n    tag_406:\n        /* \"#utility.yul\":8394:8396   */\n      0x1f\n        /* \"#utility.yul\":8389:8392   */\n      dup3\n        /* \"#utility.yul\":8386:8397   */\n      gt\n        /* \"#utility.yul\":8383:8804   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":8430:8435   */\n      dup1\n        /* \"#utility.yul\":8427:8428   */\n      0x00\n        /* \"#utility.yul\":8420:8436   */\n      mstore\n        /* \"#utility.yul\":8474:8478   */\n      0x20\n        /* \"#utility.yul\":8471:8472   */\n      0x00\n        /* \"#utility.yul\":8461:8479   */\n      keccak256\n        /* \"#utility.yul\":8544:8546   */\n      0x1f\n        /* \"#utility.yul\":8532:8542   */\n      dup5\n        /* \"#utility.yul\":8528:8547   */\n      add\n        /* \"#utility.yul\":8525:8526   */\n      0x05\n        /* \"#utility.yul\":8521:8548   */\n      shr\n        /* \"#utility.yul\":8515:8519   */\n      dup2\n        /* \"#utility.yul\":8511:8549   */\n      add\n        /* \"#utility.yul\":8580:8584   */\n      0x20\n        /* \"#utility.yul\":8568:8578   */\n      dup6\n        /* \"#utility.yul\":8565:8585   */\n      lt\n        /* \"#utility.yul\":8562:8609   */\n      iszero\n      tag_488\n      jumpi\n      pop\n        /* \"#utility.yul\":8603:8607   */\n      dup1\n        /* \"#utility.yul\":8562:8609   */\n    tag_488:\n        /* \"#utility.yul\":8658:8660   */\n      0x1f\n        /* \"#utility.yul\":8653:8656   */\n      dup5\n        /* \"#utility.yul\":8649:8661   */\n      add\n        /* \"#utility.yul\":8646:8647   */\n      0x05\n        /* \"#utility.yul\":8642:8662   */\n      shr\n        /* \"#utility.yul\":8636:8640   */\n      dup3\n        /* \"#utility.yul\":8632:8663   */\n      add\n        /* \"#utility.yul\":8622:8663   */\n      swap2\n      pop\n        /* \"#utility.yul\":8713:8794   */\n    tag_489:\n        /* \"#utility.yul\":8731:8733   */\n      dup2\n        /* \"#utility.yul\":8724:8729   */\n      dup2\n        /* \"#utility.yul\":8721:8734   */\n      lt\n        /* \"#utility.yul\":8713:8794   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":8790:8791   */\n      0x00\n        /* \"#utility.yul\":8776:8792   */\n      dup2\n      sstore\n        /* \"#utility.yul\":8757:8758   */\n      0x01\n        /* \"#utility.yul\":8746:8759   */\n      add\n        /* \"#utility.yul\":8713:8794   */\n      jump(tag_489)\n        /* \"#utility.yul\":8986:10331   */\n    tag_264:\n        /* \"#utility.yul\":9112:9115   */\n      dup2\n        /* \"#utility.yul\":9106:9116   */\n      mload\n        /* \"#utility.yul\":9139:9157   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9131:9137   */\n      dup2\n        /* \"#utility.yul\":9128:9158   */\n      gt\n        /* \"#utility.yul\":9125:9181   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":9161:9179   */\n      tag_495\n      tag_350\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9190:9287   */\n      tag_496\n        /* \"#utility.yul\":9280:9286   */\n      dup2\n        /* \"#utility.yul\":9240:9278   */\n      tag_497\n        /* \"#utility.yul\":9272:9276   */\n      dup5\n        /* \"#utility.yul\":9266:9277   */\n      sload\n        /* \"#utility.yul\":9240:9278   */\n      tag_111\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9234:9238   */\n      dup5\n        /* \"#utility.yul\":9190:9287   */\n      tag_406\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":9342:9346   */\n      0x20\n      dup1\n        /* \"#utility.yul\":9399:9401   */\n      0x1f\n        /* \"#utility.yul\":9388:9402   */\n      dup4\n      gt\n        /* \"#utility.yul\":9416:9417   */\n      0x01\n        /* \"#utility.yul\":9411:10074   */\n      dup2\n      eq\n      tag_499\n      jumpi\n        /* \"#utility.yul\":10118:10119   */\n      0x00\n        /* \"#utility.yul\":10135:10141   */\n      dup5\n        /* \"#utility.yul\":10132:10221   */\n      iszero\n      tag_500\n      jumpi\n      pop\n        /* \"#utility.yul\":10187:10206   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":10181:10207   */\n      mload\n        /* \"#utility.yul\":10132:10221   */\n    tag_500:\n      not(0x00)\n        /* \"#utility.yul\":8943:8944   */\n      0x03\n        /* \"#utility.yul\":8939:8950   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":8935:8959   */\n      shr\n        /* \"#utility.yul\":8931:8960   */\n      not\n        /* \"#utility.yul\":8921:8961   */\n      and\n        /* \"#utility.yul\":8967:8968   */\n      0x01\n        /* \"#utility.yul\":8963:8974   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":8918:8975   */\n      or\n        /* \"#utility.yul\":10234:10315   */\n      dup6\n      sstore\n        /* \"#utility.yul\":9381:10325   */\n      jump(tag_498)\n        /* \"#utility.yul\":9411:10074   */\n    tag_499:\n        /* \"#utility.yul\":8239:8240   */\n      0x00\n        /* \"#utility.yul\":8232:8246   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8276:8280   */\n      0x20\n        /* \"#utility.yul\":8263:8281   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":9447:9467   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":9565:9801   */\n    tag_503:\n        /* \"#utility.yul\":9579:9586   */\n      dup3\n        /* \"#utility.yul\":9576:9577   */\n      dup2\n        /* \"#utility.yul\":9573:9587   */\n      lt\n        /* \"#utility.yul\":9565:9801   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9668:9687   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":9662:9688   */\n      mload\n        /* \"#utility.yul\":9647:9689   */\n      dup3\n      sstore\n        /* \"#utility.yul\":9760:9787   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":9728:9729   */\n      0x01\n        /* \"#utility.yul\":9716:9730   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":9595:9614   */\n      dup5\n      add\n        /* \"#utility.yul\":9565:9801   */\n      jump(tag_503)\n    tag_505:\n        /* \"#utility.yul\":9569:9572   */\n      pop\n        /* \"#utility.yul\":9829:9835   */\n      dup6\n        /* \"#utility.yul\":9820:9827   */\n      dup3\n        /* \"#utility.yul\":9817:9836   */\n      lt\n        /* \"#utility.yul\":9814:10015   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":9890:9909   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":9884:9910   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":9973:9974   */\n      0x03\n        /* \"#utility.yul\":9969:9983   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":9985:9988   */\n      0xf8\n        /* \"#utility.yul\":9965:9989   */\n      and\n        /* \"#utility.yul\":9961:9998   */\n      shr\n        /* \"#utility.yul\":9957:9999   */\n      not\n        /* \"#utility.yul\":9942:10000   */\n      and\n        /* \"#utility.yul\":9927:10001   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9814:10015   */\n    tag_506:\n      pop\n      pop\n        /* \"#utility.yul\":10061:10062   */\n      0x01\n        /* \"#utility.yul\":10052:10058   */\n      dup5\n        /* \"#utility.yul\":10049:10050   */\n      0x01\n        /* \"#utility.yul\":10045:10059   */\n      shl\n        /* \"#utility.yul\":10041:10063   */\n      add\n        /* \"#utility.yul\":10035:10039   */\n      dup6\n        /* \"#utility.yul\":10028:10064   */\n      sstore\n        /* \"#utility.yul\":9381:10325   */\n    tag_498:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8986:10331   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10336:10464   */\n    tag_331:\n        /* \"#utility.yul\":10403:10412   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":10424:10435   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":10421:10458   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":10438:10456   */\n      tag_107\n      tag_404\n      jump\t// in\n        /* \"#utility.yul\":10469:10596   */\n    tag_340:\n        /* \"#utility.yul\":10530:10540   */\n      0x4e487b71\n        /* \"#utility.yul\":10525:10528   */\n      0xe0\n        /* \"#utility.yul\":10521:10541   */\n      shl\n        /* \"#utility.yul\":10518:10519   */\n      0x00\n        /* \"#utility.yul\":10511:10542   */\n      mstore\n        /* \"#utility.yul\":10561:10565   */\n      0x31\n        /* \"#utility.yul\":10558:10559   */\n      0x04\n        /* \"#utility.yul\":10551:10566   */\n      mstore\n        /* \"#utility.yul\":10585:10589   */\n      0x24\n        /* \"#utility.yul\":10582:10583   */\n      0x00\n        /* \"#utility.yul\":10575:10590   */\n      revert\n\n    auxdata: 0xa2646970667358221220520763df96be8e7c9ad4378d98f03869f9ec199a7784bbb8102b609b4e67729f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3538": {
									"entryPoint": null,
									"id": 3538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 174,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2906:19",
										"nodeType": "YulBlock",
										"src": "0:2906:19",
										"statements": [
											{
												"nativeSrc": "6:3:19",
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:19",
													"nodeType": "YulBlock",
													"src": "46:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:19",
																		"nodeType": "YulLiteral",
																		"src": "63:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:19",
																				"nodeType": "YulLiteral",
																				"src": "70:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:19",
																				"nodeType": "YulLiteral",
																				"src": "75:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:19"
																		},
																		"nativeSrc": "66:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:19"
																},
																"nativeSrc": "56:31:19",
																"nodeType": "YulFunctionCall",
																"src": "56:31:19"
															},
															"nativeSrc": "56:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:19",
																		"nodeType": "YulLiteral",
																		"src": "103:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:19",
																		"nodeType": "YulLiteral",
																		"src": "106:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:19"
																},
																"nativeSrc": "96:15:19",
																"nodeType": "YulFunctionCall",
																"src": "96:15:19"
															},
															"nativeSrc": "96:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:19",
																		"nodeType": "YulLiteral",
																		"src": "127:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:19",
																		"nodeType": "YulLiteral",
																		"src": "130:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:19"
																},
																"nativeSrc": "120:15:19",
																"nodeType": "YulFunctionCall",
																"src": "120:15:19"
															},
															"nativeSrc": "120:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:19"
											},
											{
												"body": {
													"nativeSrc": "201:325:19",
													"nodeType": "YulBlock",
													"src": "201:325:19",
													"statements": [
														{
															"nativeSrc": "211:22:19",
															"nodeType": "YulAssignment",
															"src": "211:22:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:19",
																		"nodeType": "YulLiteral",
																		"src": "225:1:19",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:19"
																},
																"nativeSrc": "221:12:19",
																"nodeType": "YulFunctionCall",
																"src": "221:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:19"
																}
															]
														},
														{
															"nativeSrc": "242:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:19",
																		"nodeType": "YulLiteral",
																		"src": "278:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:19"
																},
																"nativeSrc": "268:12:19",
																"nodeType": "YulFunctionCall",
																"src": "268:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:19",
																	"nodeType": "YulTypedName",
																	"src": "246:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:19",
																"nodeType": "YulBlock",
																"src": "319:31:19",
																"statements": [
																	{
																		"nativeSrc": "321:27:19",
																		"nodeType": "YulAssignment",
																		"src": "321:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:19",
																					"nodeType": "YulLiteral",
																					"src": "343:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:19"
																			},
																			"nativeSrc": "331:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:19"
																},
																"nativeSrc": "292:26:19",
																"nodeType": "YulFunctionCall",
																"src": "292:26:19"
															},
															"nativeSrc": "289:61:19",
															"nodeType": "YulIf",
															"src": "289:61:19"
														},
														{
															"body": {
																"nativeSrc": "409:111:19",
																"nodeType": "YulBlock",
																"src": "409:111:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:19",
																					"nodeType": "YulLiteral",
																					"src": "430:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:19",
																							"nodeType": "YulLiteral",
																							"src": "437:3:19",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:19",
																							"nodeType": "YulLiteral",
																							"src": "442:10:19",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:19"
																					},
																					"nativeSrc": "433:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:19"
																			},
																			"nativeSrc": "423:31:19",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:19"
																		},
																		"nativeSrc": "423:31:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:19",
																					"nodeType": "YulLiteral",
																					"src": "474:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:19",
																					"nodeType": "YulLiteral",
																					"src": "477:4:19",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:19"
																			},
																			"nativeSrc": "467:15:19",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:19"
																		},
																		"nativeSrc": "467:15:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:19",
																					"nodeType": "YulLiteral",
																					"src": "502:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:19",
																					"nodeType": "YulLiteral",
																					"src": "505:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:19"
																			},
																			"nativeSrc": "495:15:19",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:19"
																		},
																		"nativeSrc": "495:15:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:19",
																				"nodeType": "YulLiteral",
																				"src": "396:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:19"
																		},
																		"nativeSrc": "385:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:19"
																},
																"nativeSrc": "362:38:19",
																"nodeType": "YulFunctionCall",
																"src": "362:38:19"
															},
															"nativeSrc": "359:161:19",
															"nodeType": "YulIf",
															"src": "359:161:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:19",
														"nodeType": "YulTypedName",
														"src": "181:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:19",
														"nodeType": "YulTypedName",
														"src": "190:6:19",
														"type": ""
													}
												],
												"src": "146:380:19"
											},
											{
												"body": {
													"nativeSrc": "587:65:19",
													"nodeType": "YulBlock",
													"src": "587:65:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:19",
																		"nodeType": "YulLiteral",
																		"src": "604:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:19"
																},
																"nativeSrc": "597:14:19",
																"nodeType": "YulFunctionCall",
																"src": "597:14:19"
															},
															"nativeSrc": "597:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:19"
														},
														{
															"nativeSrc": "620:26:19",
															"nodeType": "YulAssignment",
															"src": "620:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:19",
																		"nodeType": "YulLiteral",
																		"src": "638:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:19",
																		"nodeType": "YulLiteral",
																		"src": "641:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:19"
																},
																"nativeSrc": "628:18:19",
																"nodeType": "YulFunctionCall",
																"src": "628:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:19",
														"nodeType": "YulTypedName",
														"src": "570:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:19",
														"nodeType": "YulTypedName",
														"src": "578:4:19",
														"type": ""
													}
												],
												"src": "531:121:19"
											},
											{
												"body": {
													"nativeSrc": "738:437:19",
													"nodeType": "YulBlock",
													"src": "738:437:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:19",
																"nodeType": "YulBlock",
																"src": "771:398:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:19",
																					"nodeType": "YulLiteral",
																					"src": "792:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:19"
																			},
																			"nativeSrc": "785:16:19",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:19"
																		},
																		"nativeSrc": "785:16:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:19"
																	},
																	{
																		"nativeSrc": "814:30:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:19",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:19",
																					"nodeType": "YulLiteral",
																					"src": "836:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:19",
																					"nodeType": "YulLiteral",
																					"src": "839:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:19"
																			},
																			"nativeSrc": "826:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:19"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:19",
																				"nodeType": "YulTypedName",
																				"src": "818:4:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:19",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:19"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:19",
																							"nodeType": "YulLiteral",
																							"src": "890:1:19",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:19",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:19",
																									"nodeType": "YulLiteral",
																									"src": "909:2:19",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:19"
																							},
																							"nativeSrc": "893:19:19",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:19"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:19"
																					},
																					"nativeSrc": "886:27:19",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:19"
																			},
																			"nativeSrc": "876:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:19",
																				"nodeType": "YulTypedName",
																				"src": "861:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:19",
																			"nodeType": "YulBlock",
																			"src": "951:23:19",
																			"statements": [
																				{
																					"nativeSrc": "953:19:19",
																					"nodeType": "YulAssignment",
																					"src": "953:19:19",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:19",
																					"nodeType": "YulLiteral",
																					"src": "945:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:19"
																			},
																			"nativeSrc": "930:20:19",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:19"
																		},
																		"nativeSrc": "927:47:19",
																		"nodeType": "YulIf",
																		"src": "927:47:19"
																	},
																	{
																		"nativeSrc": "987:41:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:19",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:19"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:19",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:19",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:19",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:19",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:19"
																							},
																							"nativeSrc": "1014:12:19",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:19"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:19"
																					},
																					"nativeSrc": "1007:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:19"
																			},
																			"nativeSrc": "997:31:19",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:19"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:19",
																				"nodeType": "YulTypedName",
																				"src": "991:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:19",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:19",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:19"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:19",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:19",
																			"nodeType": "YulBlock",
																			"src": "1139:20:19",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:19",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:19",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:19"
																						},
																						"nativeSrc": "1141:16:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:19"
																					},
																					"nativeSrc": "1141:16:19",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:19"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:19"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:19"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:19"
																			},
																			"nativeSrc": "1086:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:19"
																		},
																		"nativeSrc": "1078:81:19",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:19",
																			"nodeType": "YulBlock",
																			"src": "1100:26:19",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:19",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:19",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:19",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:19"
																						},
																						"nativeSrc": "1111:13:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:19"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:19",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:19"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:19",
																			"nodeType": "YulBlock",
																			"src": "1082:3:19",
																			"statements": []
																		},
																		"src": "1078:81:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:19",
																		"nodeType": "YulLiteral",
																		"src": "759:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:19"
																},
																"nativeSrc": "751:11:19",
																"nodeType": "YulFunctionCall",
																"src": "751:11:19"
															},
															"nativeSrc": "748:421:19",
															"nodeType": "YulIf",
															"src": "748:421:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:19",
														"nodeType": "YulTypedName",
														"src": "710:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:19",
														"nodeType": "YulTypedName",
														"src": "717:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:19",
														"nodeType": "YulTypedName",
														"src": "722:10:19",
														"type": ""
													}
												],
												"src": "657:518:19"
											},
											{
												"body": {
													"nativeSrc": "1265:81:19",
													"nodeType": "YulBlock",
													"src": "1265:81:19",
													"statements": [
														{
															"nativeSrc": "1275:65:19",
															"nodeType": "YulAssignment",
															"src": "1275:65:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:19",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:19",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:19"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:19"
																								},
																								"nativeSrc": "1304:11:19",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:19"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:19",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:19",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:19"
																								},
																								"nativeSrc": "1317:6:19",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:19"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:19"
																						},
																						"nativeSrc": "1300:24:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:19"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:19"
																				},
																				"nativeSrc": "1296:29:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:19"
																		},
																		"nativeSrc": "1286:40:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:19",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:19"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:19"
																		},
																		"nativeSrc": "1328:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:19"
																},
																"nativeSrc": "1283:57:19",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:19",
														"nodeType": "YulTypedName",
														"src": "1242:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:19",
														"nodeType": "YulTypedName",
														"src": "1248:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:19",
														"nodeType": "YulTypedName",
														"src": "1256:4:19",
														"type": ""
													}
												],
												"src": "1180:166:19"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:19",
													"nodeType": "YulBlock",
													"src": "1447:1249:19",
													"statements": [
														{
															"nativeSrc": "1457:24:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:19"
																},
																"nativeSrc": "1471:10:19",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:19",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:19",
																"nodeType": "YulBlock",
																"src": "1524:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:19"
																			},
																			"nativeSrc": "1526:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:19"
																		},
																		"nativeSrc": "1526:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:19",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:19",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:19",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:19"
																				},
																				"nativeSrc": "1508:10:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:19"
																		},
																		"nativeSrc": "1504:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:19"
																},
																"nativeSrc": "1493:30:19",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:19"
															},
															"nativeSrc": "1490:56:19",
															"nodeType": "YulIf",
															"src": "1490:56:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:19"
																				},
																				"nativeSrc": "1631:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:19"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:19",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:19"
																		},
																		"nativeSrc": "1605:38:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:19"
																},
																"nativeSrc": "1555:97:19",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:19"
															},
															"nativeSrc": "1555:97:19",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:19"
														},
														{
															"nativeSrc": "1661:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:19",
																"nodeType": "YulLiteral",
																"src": "1678:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:19",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:19",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:19",
																"nodeType": "YulLiteral",
																"src": "1707:4:19",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:19",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:19",
															"nodeType": "YulAssignment",
															"src": "1720:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:19",
																"nodeType": "YulLiteral",
																"src": "1733:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:19",
																		"nodeType": "YulBlock",
																		"src": "1783:656:19",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:19",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:19",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:19"
																							},
																							"nativeSrc": "1824:7:19",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:19"
																					},
																					"nativeSrc": "1812:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:19",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:19",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:19"
																					},
																					"nativeSrc": "1859:35:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:19",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:19",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:19",
																					"nodeType": "YulBlock",
																					"src": "1994:172:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:19"
																												},
																												"nativeSrc": "2033:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:19"
																										},
																										"nativeSrc": "2027:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:19"
																								},
																								"nativeSrc": "2012:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:19"
																							},
																							"nativeSrc": "2012:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:19"
																						},
																						{
																							"nativeSrc": "2071:24:19",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:19",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:19"
																								},
																								"nativeSrc": "2081:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:19",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:19"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:19",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:19"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:19"
																								},
																								"nativeSrc": "2125:27:19",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:19"
																					},
																					"nativeSrc": "1938:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:19"
																				},
																				"nativeSrc": "1930:236:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:19",
																					"nodeType": "YulBlock",
																					"src": "1953:28:19",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:19",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:19"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:19",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:19"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:19"
																								},
																								"nativeSrc": "1960:19:19",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:19",
																					"nodeType": "YulBlock",
																					"src": "1934:3:19",
																					"statements": []
																				},
																				"src": "1930:236:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:19",
																					"nodeType": "YulBlock",
																					"src": "2214:166:19",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:19"
																										},
																										"nativeSrc": "2255:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:19"
																								},
																								"nativeSrc": "2249:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:19",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:19",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:19",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:19",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:19"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:19",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:19"
																																		},
																																		"nativeSrc": "2334:14:19",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:19"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:19",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:19",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:19",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:19"
																																},
																																"nativeSrc": "2330:24:19",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:19"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:19",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:19",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:19",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:19"
																																},
																																"nativeSrc": "2356:6:19",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:19"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:19",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:19"
																														},
																														"nativeSrc": "2326:37:19",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:19"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:19"
																												},
																												"nativeSrc": "2322:42:19",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:19"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:19"
																										},
																										"nativeSrc": "2307:58:19",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:19"
																								},
																								"nativeSrc": "2292:74:19",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:19"
																							},
																							"nativeSrc": "2292:74:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:19"
																					},
																					"nativeSrc": "2182:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:19"
																				},
																				"nativeSrc": "2179:201:19",
																				"nodeType": "YulIf",
																				"src": "2179:201:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:19",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:19",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:19"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:19"
																									},
																									"nativeSrc": "2410:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:19",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:19"
																							},
																							"nativeSrc": "2406:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:19"
																					},
																					"nativeSrc": "2393:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:19"
																				},
																				"nativeSrc": "2393:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:19"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:19",
																	"nodeType": "YulCase",
																	"src": "1776:663:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:19",
																		"nodeType": "YulBlock",
																		"src": "2456:234:19",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:19",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:19",
																					"nodeType": "YulBlock",
																					"src": "2519:67:19",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:19",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:19"
																										},
																										"nativeSrc": "2552:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:19"
																								},
																								"nativeSrc": "2546:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:19"
																				},
																				"nativeSrc": "2497:89:19",
																				"nodeType": "YulIf",
																				"src": "2497:89:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:19"
																							},
																							"nativeSrc": "2612:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:19"
																					},
																					"nativeSrc": "2599:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:19"
																				},
																				"nativeSrc": "2599:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:19"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:19",
																	"nodeType": "YulCase",
																	"src": "2448:242:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:19"
																},
																"nativeSrc": "1753:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:19"
															},
															"nativeSrc": "1746:944:19",
															"nodeType": "YulSwitch",
															"src": "1746:944:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:19",
														"nodeType": "YulTypedName",
														"src": "1432:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:19",
														"nodeType": "YulTypedName",
														"src": "1438:3:19",
														"type": ""
													}
												],
												"src": "1351:1345:19"
											},
											{
												"body": {
													"nativeSrc": "2802:102:19",
													"nodeType": "YulBlock",
													"src": "2802:102:19",
													"statements": [
														{
															"nativeSrc": "2812:26:19",
															"nodeType": "YulAssignment",
															"src": "2812:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2824:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2824:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2835:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2835:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2820:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2820:3:19"
																},
																"nativeSrc": "2820:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2820:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2812:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2812:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2854:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2854:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2869:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2869:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2885:3:19",
																								"nodeType": "YulLiteral",
																								"src": "2885:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2890:1:19",
																								"nodeType": "YulLiteral",
																								"src": "2890:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2881:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "2881:3:19"
																						},
																						"nativeSrc": "2881:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "2881:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2894:1:19",
																						"nodeType": "YulLiteral",
																						"src": "2894:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2877:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2877:3:19"
																				},
																				"nativeSrc": "2877:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2865:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2865:3:19"
																		},
																		"nativeSrc": "2865:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2865:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2847:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2847:6:19"
																},
																"nativeSrc": "2847:51:19",
																"nodeType": "YulFunctionCall",
																"src": "2847:51:19"
															},
															"nativeSrc": "2847:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "2847:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2701:203:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2771:9:19",
														"nodeType": "YulTypedName",
														"src": "2771:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2782:6:19",
														"nodeType": "YulTypedName",
														"src": "2782:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2793:4:19",
														"nodeType": "YulTypedName",
														"src": "2793:4:19",
														"type": ""
													}
												],
												"src": "2701:203:19"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b503360405180604001604052806005815260200164135e53919560da1b8152506040518060400160405280600381526020016213919560ea1b815250815f90816200005c91906200019d565b5060016200006b82826200019d565b5050506001600160a01b0381166200009c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000a781620000ae565b5062000269565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200012857607f821691505b6020821081036200014757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200019857805f5260205f20601f840160051c81016020851015620001745750805b601f840160051c820191505b8181101562000195575f815560010162000180565b50505b505050565b81516001600160401b03811115620001b957620001b9620000ff565b620001d181620001ca845462000113565b846200014d565b602080601f83116001811462000207575f8415620001ef5750858301515b5f19600386901b1c1916600185901b17855562000261565b5f85815260208120601f198616915b82811015620002375788860151825594840194600190910190840162000216565b50858210156200025557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61178680620002775f395ff3fe608060405234801561000f575f80fd5b5060043610610127575f3560e01c806370a08231116100a9578063b88d4fde1161006e578063b88d4fde14610260578063c87b56dd14610273578063d204c45e14610286578063e985e9c514610299578063f2fde38b146102ac575f80fd5b806370a0823114610219578063715018a61461022c5780638da5cb5b1461023457806395d89b4114610245578063a22cb4651461024d575f80fd5b806323b872dd116100ef57806323b872dd146101ba5780632f745c59146101cd57806342842e0e146101e05780634f6ccce7146101f35780636352211e14610206575f80fd5b806301ffc9a71461012b57806306fdde0314610153578063081812fc14610168578063095ea7b31461019357806318160ddd146101a8575b5f80fd5b61013e61013936600461123c565b6102bf565b60405190151581526020015b60405180910390f35b61015b6102cf565b60405161014a91906112a4565b61017b6101763660046112b6565b61035e565b6040516001600160a01b03909116815260200161014a565b6101a66101a13660046112e8565b610385565b005b6008545b60405190815260200161014a565b6101a66101c8366004611310565b610394565b6101ac6101db3660046112e8565b610422565b6101a66101ee366004611310565b610485565b6101ac6102013660046112b6565b6104a4565b61017b6102143660046112b6565b6104f9565b6101ac610227366004611349565b610503565b6101a6610548565b600b546001600160a01b031661017b565b61015b61055b565b6101a661025b366004611362565b61056a565b6101a661026e366004611422565b610575565b61015b6102813660046112b6565b61058c565b6101a6610294366004611499565b610597565b61013e6102a73660046114f7565b6105c9565b6101a66102ba366004611349565b6105f6565b5f6102c982610633565b92915050565b60605f80546102dd90611528565b80601f016020809104026020016040519081016040528092919081815260200182805461030990611528565b80156103545780601f1061032b57610100808354040283529160200191610354565b820191905f5260205f20905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b5f61036882610657565b505f828152600460205260409020546001600160a01b03166102c9565b61039082823361068f565b5050565b6001600160a01b0382166103c257604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6103ce83833361069c565b9050836001600160a01b0316816001600160a01b03161461041c576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103b9565b50505050565b5f61042c83610503565b821061045d5760405163295f44f760e21b81526001600160a01b0384166004820152602481018390526044016103b9565b506001600160a01b03919091165f908152600660209081526040808320938352929052205490565b61049f83838360405180602001604052805f815250610575565b505050565b5f6104ae60085490565b82106104d65760405163295f44f760e21b81525f6004820152602481018390526044016103b9565b600882815481106104e9576104e9611560565b905f5260205f2001549050919050565b5f6102c982610657565b5f6001600160a01b03821661052d576040516322718ad960e21b81525f60048201526024016103b9565b506001600160a01b03165f9081526003602052604090205490565b6105506106b0565b6105595f6106dd565b565b6060600180546102dd90611528565b61039033838361072e565b610580848484610394565b61041c848484846107cc565b60606102c9826108f2565b61059f6106b0565b600c80545f91826105af83611588565b9190505590506105bf83826109f5565b61049f8183610a0e565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6105fe6106b0565b6001600160a01b03811661062757604051631e4fbdf760e01b81525f60048201526024016103b9565b610630816106dd565b50565b5f6001600160e01b03198216632483248360e11b14806102c957506102c982610a5d565b5f818152600260205260408120546001600160a01b0316806102c957604051637e27328960e01b8152600481018490526024016103b9565b61049f8383836001610a81565b5f6106a8848484610b85565b949350505050565b600b546001600160a01b031633146105595760405163118cdaa760e01b81523360048201526024016103b9565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03821661076057604051630b61174360e31b81526001600160a01b03831660048201526024016103b9565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561041c57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061080e9033908890879087906004016115a0565b6020604051808303815f875af1925050508015610848575060408051601f3d908101601f19168201909252610845918101906115dc565b60015b6108af573d808015610875576040519150601f19603f3d011682016040523d82523d5f602084013e61087a565b606091505b5080515f036108a757604051633250574960e11b81526001600160a01b03851660048201526024016103b9565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146108eb57604051633250574960e11b81526001600160a01b03851660048201526024016103b9565b5050505050565b60606108fd82610657565b505f828152600a60205260408120805461091690611528565b80601f016020809104026020016040519081016040528092919081815260200182805461094290611528565b801561098d5780601f106109645761010080835404028352916020019161098d565b820191905f5260205f20905b81548152906001019060200180831161097057829003601f168201915b505050505090505f6109a960408051602081019091525f815290565b905080515f036109ba575092915050565b8151156109ec5780826040516020016109d49291906115f7565b60405160208183030381529060405292505050919050565b6106a884610c50565b610390828260405180602001604052805f815250610cc1565b5f828152600a60205260409020610a258282611669565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b5f6001600160e01b0319821663780e9d6360e01b14806102c957506102c982610cd7565b8080610a9557506001600160a01b03821615155b15610b56575f610aa484610657565b90506001600160a01b03831615801590610ad05750826001600160a01b0316816001600160a01b031614155b8015610ae35750610ae181846105c9565b155b15610b0c5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103b9565b8115610b545783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f80610b92858585610d26565b90506001600160a01b038116610bee57610be984600880545f838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610c11565b846001600160a01b0316816001600160a01b031614610c1157610c118185610e18565b6001600160a01b038516610c2d57610c2884610ea5565b6106a8565b846001600160a01b0316816001600160a01b0316146106a8576106a88585610f4c565b6060610c5b82610657565b505f610c7160408051602081019091525f815290565b90505f815111610c8f5760405180602001604052805f815250610cba565b80610c9984610f9a565b604051602001610caa9291906115f7565b6040516020818303038152906040525b9392505050565b610ccb838361102a565b61049f5f8484846107cc565b5f6001600160e01b031982166380ac58cd60e01b1480610d0757506001600160e01b03198216635b5e139f60e01b145b806102c957506301ffc9a760e01b6001600160e01b03198316146102c9565b5f828152600260205260408120546001600160a01b0390811690831615610d5257610d5281848661108b565b6001600160a01b03811615610d8c57610d6d5f855f80610a81565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610dba576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f610e2283610503565b5f83815260076020526040902054909150808214610e73576001600160a01b0384165f9081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b505f9182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008545f90610eb690600190611729565b5f8381526009602052604081205460088054939450909284908110610edd57610edd611560565b905f5260205f20015490508060088381548110610efc57610efc611560565b5f918252602080832090910192909255828152600990915260408082208490558582528120556008805480610f3357610f3361173c565b600190038181905f5260205f20015f9055905550505050565b5f6001610f5884610503565b610f629190611729565b6001600160a01b039093165f908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60605f610fa6836110ef565b60010190505f8167ffffffffffffffff811115610fc557610fc561139b565b6040519080825280601f01601f191660200182016040528015610fef576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ff957509392505050565b6001600160a01b03821661105357604051633250574960e11b81525f60048201526024016103b9565b5f61105f83835f61069c565b90506001600160a01b0381161561049f576040516339e3563760e11b81525f60048201526024016103b9565b6110968383836111c6565b61049f576001600160a01b0383166110c457604051637e27328960e01b8152600481018290526024016103b9565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103b9565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061112d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611159576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061117757662386f26fc10000830492506010015b6305f5e100831061118f576305f5e100830492506008015b61271083106111a357612710830492506004015b606483106111b5576064830492506002015b600a83106102c95760010192915050565b5f6001600160a01b038316158015906106a85750826001600160a01b0316846001600160a01b031614806111ff57506111ff84846105c9565b806106a85750505f908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610630575f80fd5b5f6020828403121561124c575f80fd5b8135610cba81611227565b5f5b83811015611271578181015183820152602001611259565b50505f910152565b5f8151808452611290816020860160208601611257565b601f01601f19169290920160200192915050565b602081525f610cba6020830184611279565b5f602082840312156112c6575f80fd5b5035919050565b80356001600160a01b03811681146112e3575f80fd5b919050565b5f80604083850312156112f9575f80fd5b611302836112cd565b946020939093013593505050565b5f805f60608486031215611322575f80fd5b61132b846112cd565b9250611339602085016112cd565b9150604084013590509250925092565b5f60208284031215611359575f80fd5b610cba826112cd565b5f8060408385031215611373575f80fd5b61137c836112cd565b915060208301358015158114611390575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff808411156113c9576113c961139b565b604051601f8501601f19908116603f011681019082821181831017156113f1576113f161139b565b81604052809350858152868686011115611409575f80fd5b858560208301375f602087830101525050509392505050565b5f805f8060808587031215611435575f80fd5b61143e856112cd565b935061144c602086016112cd565b925060408501359150606085013567ffffffffffffffff81111561146e575f80fd5b8501601f8101871361147e575f80fd5b61148d878235602084016113af565b91505092959194509250565b5f80604083850312156114aa575f80fd5b6114b3836112cd565b9150602083013567ffffffffffffffff8111156114ce575f80fd5b8301601f810185136114de575f80fd5b6114ed858235602084016113af565b9150509250929050565b5f8060408385031215611508575f80fd5b611511836112cd565b915061151f602084016112cd565b90509250929050565b600181811c9082168061153c57607f821691505b60208210810361155a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f6001820161159957611599611574565b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906115d290830184611279565b9695505050505050565b5f602082840312156115ec575f80fd5b8151610cba81611227565b5f8351611608818460208801611257565b83519083019061161c818360208801611257565b01949350505050565b601f82111561049f57805f5260205f20601f840160051c8101602085101561164a5750805b601f840160051c820191505b818110156108eb575f8155600101611656565b815167ffffffffffffffff8111156116835761168361139b565b611697816116918454611528565b84611625565b602080601f8311600181146116ca575f84156116b35750858301515b5f19600386901b1c1916600185901b178555611721565b5f85815260208120601f198616915b828110156116f8578886015182559484019460019091019084016116d9565b508582101561171557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b818103818111156102c9576102c9611574565b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220520763df96be8e7c9ad4378d98f03869f9ec199a7784bbb8102b609b4e67729f64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x135E539195 PUSH1 0xDA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x139195 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x19D JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x6B DUP3 DUP3 PUSH3 0x19D JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x9C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xA7 DUP2 PUSH3 0xAE JUMP JUMPDEST POP PUSH3 0x269 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x128 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x147 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x198 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x174 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x195 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x180 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B9 PUSH3 0xFF JUMP JUMPDEST PUSH3 0x1D1 DUP2 PUSH3 0x1CA DUP5 SLOAD PUSH3 0x113 JUMP JUMPDEST DUP5 PUSH3 0x14D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x207 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x1EF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x261 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x237 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x216 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x255 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1786 DUP1 PUSH3 0x277 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x123C JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x548 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17B JUMP JUMPDEST PUSH2 0x15B PUSH2 0x55B JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x1362 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH0 PUSH2 0x2C9 DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2DD SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x309 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x354 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x354 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x337 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x368 DUP3 PUSH2 0x657 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x390 DUP3 DUP3 CALLER PUSH2 0x68F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3CE DUP4 DUP4 CALLER PUSH2 0x69C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x42C DUP4 PUSH2 0x503 JUMP JUMPDEST DUP3 LT PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3B9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x49F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x575 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4AE PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4E9 JUMPI PUSH2 0x4E9 PUSH2 0x1560 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C9 DUP3 PUSH2 0x657 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x550 PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x559 PUSH0 PUSH2 0x6DD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2DD SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x390 CALLER DUP4 DUP4 PUSH2 0x72E JUMP JUMPDEST PUSH2 0x580 DUP5 DUP5 DUP5 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x41C DUP5 DUP5 DUP5 DUP5 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C9 DUP3 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x59F PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x5AF DUP4 PUSH2 0x1588 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x5BF DUP4 DUP3 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x49F DUP2 DUP4 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x630 DUP2 PUSH2 0x6DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2C9 JUMPI POP PUSH2 0x2C9 DUP3 PUSH2 0xA5D JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x49F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA81 JUMP JUMPDEST PUSH0 PUSH2 0x6A8 DUP5 DUP5 DUP5 PUSH2 0xB85 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x80E SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x848 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x845 SWAP2 DUP2 ADD SWAP1 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8AF JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x87A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8FD DUP3 PUSH2 0x657 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x916 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x942 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x964 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x970 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x9A9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x9BA JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x9EC JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A8 DUP5 PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x390 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xCC1 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xA25 DUP3 DUP3 PUSH2 0x1669 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2C9 JUMPI POP PUSH2 0x2C9 DUP3 PUSH2 0xCD7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xA95 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xB56 JUMPI PUSH0 PUSH2 0xAA4 DUP5 PUSH2 0x657 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xAD0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAE3 JUMPI POP PUSH2 0xAE1 DUP2 DUP5 PUSH2 0x5C9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB54 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB92 DUP6 DUP6 DUP6 PUSH2 0xD26 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBEE JUMPI PUSH2 0xBE9 DUP5 PUSH1 0x8 DUP1 SLOAD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC11 JUMPI PUSH2 0xC11 DUP2 DUP6 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xC2D JUMPI PUSH2 0xC28 DUP5 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6A8 JUMPI PUSH2 0x6A8 DUP6 DUP6 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC5B DUP3 PUSH2 0x657 JUMP JUMPDEST POP PUSH0 PUSH2 0xC71 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xCBA JUMP JUMPDEST DUP1 PUSH2 0xC99 DUP5 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAA SWAP3 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCCB DUP4 DUP4 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x49F PUSH0 DUP5 DUP5 DUP5 PUSH2 0x7CC JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xD07 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2C9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2C9 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xD52 JUMPI PUSH2 0xD52 DUP2 DUP5 DUP7 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD8C JUMPI PUSH2 0xD6D PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xDBA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE22 DUP4 PUSH2 0x503 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0xE73 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH0 SWAP1 PUSH2 0xEB6 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0xEDD JUMPI PUSH2 0xEDD PUSH2 0x1560 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xEFC JUMPI PUSH2 0xEFC PUSH2 0x1560 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0xF33 JUMPI PUSH2 0xF33 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0xF58 DUP5 PUSH2 0x503 JUMP JUMPDEST PUSH2 0xF62 SWAP2 SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xFA6 DUP4 PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC5 JUMPI PUSH2 0xFC5 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFEF JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xFF9 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH0 PUSH2 0x105F DUP4 DUP4 PUSH0 PUSH2 0x69C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x1096 DUP4 DUP4 DUP4 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x49F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x112D JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1159 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1177 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x118F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11A3 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x11B5 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2C9 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A8 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x11FF JUMPI POP PUSH2 0x11FF DUP5 DUP5 PUSH2 0x5C9 JUMP JUMPDEST DUP1 PUSH2 0x6A8 JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x630 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCBA DUP2 PUSH2 0x1227 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1271 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1259 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1290 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xCBA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1279 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1302 DUP4 PUSH2 0x12CD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1322 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132B DUP5 PUSH2 0x12CD JUMP JUMPDEST SWAP3 POP PUSH2 0x1339 PUSH1 0x20 DUP6 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1359 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCBA DUP3 PUSH2 0x12CD JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1373 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x137C DUP4 PUSH2 0x12CD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1390 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0x13C9 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13F1 PUSH2 0x139B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1409 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1435 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x143E DUP6 PUSH2 0x12CD JUMP JUMPDEST SWAP4 POP PUSH2 0x144C PUSH1 0x20 DUP7 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x146E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x147E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148D DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x13AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14B3 DUP4 PUSH2 0x12CD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x14DE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14ED DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x13AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1508 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1511 DUP4 PUSH2 0x12CD JUMP JUMPDEST SWAP2 POP PUSH2 0x151F PUSH1 0x20 DUP5 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x153C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x155A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1599 JUMPI PUSH2 0x1599 PUSH2 0x1574 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x15D2 SWAP1 DUP4 ADD DUP5 PUSH2 0x1279 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCBA DUP2 PUSH2 0x1227 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0x1608 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1257 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x161C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1257 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x49F JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x164A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8EB JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1656 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1683 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x1697 DUP2 PUSH2 0x1691 DUP5 SLOAD PUSH2 0x1528 JUMP JUMPDEST DUP5 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x16CA JUMPI PUSH0 DUP5 ISZERO PUSH2 0x16B3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1721 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x16D9 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1715 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C9 JUMPI PUSH2 0x2C9 PUSH2 0x1574 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SMOD PUSH4 0xDF96BE8E PUSH29 0x9AD4378D98F03869F9EC199A7784BBB8102B609B4E67729F64736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "388:1296:18:-:0;;;502:59;;;;;;;;;;547:10;1419:116:5;;;;;;;;;;;;;-1:-1:-1;;;1419:116:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1419:116:5;;;1494:5;1486;:13;;;;;;:::i;:::-;-1:-1:-1;1510:7:5;:17;1520:7;1510;:17;:::i;:::-;-1:-1:-1;;;;;;;;1311:26:0;;1307:97;;1361:31;;-1:-1:-1;;;1361:31:0;;1389:1;1361:31;;;2847:51:19;2820:18;;1361:31:0;;;;;;;1307:97;1414:32;1433:12;1414:18;:32::i;:::-;1262:192;388:1296:18;;3006:191:0;3099:6;;;-1:-1:-1;;;;;3116:17:0;;;-1:-1:-1;;;;;;3116:17:0;;;;;;;3149:40;;3099:6;;;3116:17;3099:6;;3149:40;;3080:16;;3149:40;3069:128;3006:191;:::o;14:127:19:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:19;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:19;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:19;;;2546:26;2497:89;-1:-1:-1;;1308:1:19;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:19;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:19;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;2701:203::-;388:1296:18;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_1710": {
									"entryPoint": null,
									"id": 1710,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1690": {
									"entryPoint": 3916,
									"id": 1690,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_1128": {
									"entryPoint": 1679,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 2689,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_521": {
									"entryPoint": null,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_776": {
									"entryPoint": 4235,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 1996,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1712,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 4550,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_932": {
									"entryPoint": 4138,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2042": {
									"entryPoint": null,
									"id": 2042,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": null,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_1818": {
									"entryPoint": 3749,
									"id": 1818,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1770": {
									"entryPoint": 3608,
									"id": 1770,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireOwned_1260": {
									"entryPoint": 1623,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_947": {
									"entryPoint": 2549,
									"id": 947,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_973": {
									"entryPoint": 3265,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 1838,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1969": {
									"entryPoint": 2574,
									"id": 1969,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1757,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1659": {
									"entryPoint": 2949,
									"id": 1659,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_3585": {
									"entryPoint": 1692,
									"id": 3585,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_882": {
									"entryPoint": 3366,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_537": {
									"entryPoint": 901,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 1283,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_554": {
									"entryPoint": 862,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_587": {
									"entryPoint": 1481,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3225": {
									"entryPoint": 4335,
									"id": 3225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_467": {
									"entryPoint": 719,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 1273,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1352,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3563": {
									"entryPoint": 1431,
									"id": 3563,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_651": {
									"entryPoint": 1157,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 1397,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 1386,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1524": {
									"entryPoint": 2653,
									"id": 1524,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1893": {
									"entryPoint": 1587,
									"id": 1893,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2338": {
									"entryPoint": null,
									"id": 2338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3636": {
									"entryPoint": 703,
									"id": 3636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 3287,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 1371,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2128": {
									"entryPoint": 3994,
									"id": 2128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1590": {
									"entryPoint": 1188,
									"id": 1590,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1553": {
									"entryPoint": 1058,
									"id": 1553,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_1950": {
									"entryPoint": 2290,
									"id": 1950,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3619": {
									"entryPoint": 1420,
									"id": 3619,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_512": {
									"entryPoint": 3152,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1563": {
									"entryPoint": null,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 916,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1526,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 5273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5623,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5536,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4695,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10730:19",
										"nodeType": "YulBlock",
										"src": "0:10730:19",
										"statements": [
											{
												"nativeSrc": "6:3:19",
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:19",
													"nodeType": "YulBlock",
													"src": "58:87:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:19",
																"nodeType": "YulBlock",
																"src": "123:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:19",
																					"nodeType": "YulLiteral",
																					"src": "132:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:19",
																					"nodeType": "YulLiteral",
																					"src": "135:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:19"
																			},
																			"nativeSrc": "125:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:19"
																		},
																		"nativeSrc": "125:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:19",
																								"nodeType": "YulLiteral",
																								"src": "103:3:19",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:19",
																								"nodeType": "YulLiteral",
																								"src": "108:10:19",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:19"
																						},
																						"nativeSrc": "99:20:19",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:19"
																				},
																				"nativeSrc": "88:32:19",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:19"
																		},
																		"nativeSrc": "78:43:19",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:19"
																},
																"nativeSrc": "71:51:19",
																"nodeType": "YulFunctionCall",
																"src": "71:51:19"
															},
															"nativeSrc": "68:71:19",
															"nodeType": "YulIf",
															"src": "68:71:19"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:19",
														"nodeType": "YulTypedName",
														"src": "47:5:19",
														"type": ""
													}
												],
												"src": "14:131:19"
											},
											{
												"body": {
													"nativeSrc": "219:176:19",
													"nodeType": "YulBlock",
													"src": "219:176:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:19",
																"nodeType": "YulBlock",
																"src": "265:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:19",
																					"nodeType": "YulLiteral",
																					"src": "274:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:19",
																					"nodeType": "YulLiteral",
																					"src": "277:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:19"
																			},
																			"nativeSrc": "267:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:19"
																		},
																		"nativeSrc": "267:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:19"
																		},
																		"nativeSrc": "236:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:19",
																		"nodeType": "YulLiteral",
																		"src": "261:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:19"
																},
																"nativeSrc": "232:32:19",
																"nodeType": "YulFunctionCall",
																"src": "232:32:19"
															},
															"nativeSrc": "229:52:19",
															"nodeType": "YulIf",
															"src": "229:52:19"
														},
														{
															"nativeSrc": "290:36:19",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:19"
																},
																"nativeSrc": "303:23:19",
																"nodeType": "YulFunctionCall",
																"src": "303:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:19",
																	"nodeType": "YulTypedName",
																	"src": "294:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:19"
																},
																"nativeSrc": "335:30:19",
																"nodeType": "YulFunctionCall",
																"src": "335:30:19"
															},
															"nativeSrc": "335:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:19"
														},
														{
															"nativeSrc": "374:15:19",
															"nodeType": "YulAssignment",
															"src": "374:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:19",
																"nodeType": "YulIdentifier",
																"src": "384:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:19",
														"nodeType": "YulTypedName",
														"src": "185:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:19",
														"nodeType": "YulTypedName",
														"src": "196:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:19",
														"nodeType": "YulTypedName",
														"src": "208:6:19",
														"type": ""
													}
												],
												"src": "150:245:19"
											},
											{
												"body": {
													"nativeSrc": "495:92:19",
													"nodeType": "YulBlock",
													"src": "495:92:19",
													"statements": [
														{
															"nativeSrc": "505:26:19",
															"nodeType": "YulAssignment",
															"src": "505:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:19",
																		"nodeType": "YulLiteral",
																		"src": "528:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:19"
																},
																"nativeSrc": "513:18:19",
																"nodeType": "YulFunctionCall",
																"src": "513:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:19"
																				},
																				"nativeSrc": "565:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:19"
																		},
																		"nativeSrc": "558:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:19"
																},
																"nativeSrc": "540:41:19",
																"nodeType": "YulFunctionCall",
																"src": "540:41:19"
															},
															"nativeSrc": "540:41:19",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:19",
														"nodeType": "YulTypedName",
														"src": "464:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:19",
														"nodeType": "YulTypedName",
														"src": "475:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:19",
														"nodeType": "YulTypedName",
														"src": "486:4:19",
														"type": ""
													}
												],
												"src": "400:187:19"
											},
											{
												"body": {
													"nativeSrc": "658:184:19",
													"nodeType": "YulBlock",
													"src": "658:184:19",
													"statements": [
														{
															"nativeSrc": "668:10:19",
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:19",
															"value": {
																"kind": "number",
																"nativeSrc": "677:1:19",
																"nodeType": "YulLiteral",
																"src": "677:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "672:1:19",
																	"nodeType": "YulTypedName",
																	"src": "672:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:63:19",
																"nodeType": "YulBlock",
																"src": "737:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "762:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:19"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "767:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "758:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:19"
																					},
																					"nativeSrc": "758:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "781:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:19"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "786:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "777:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:19"
																							},
																							"nativeSrc": "777:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "771:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:19"
																					},
																					"nativeSrc": "771:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "751:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:19"
																			},
																			"nativeSrc": "751:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:19"
																		},
																		"nativeSrc": "751:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "698:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "701:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "695:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:19"
																},
																"nativeSrc": "695:13:19",
																"nodeType": "YulFunctionCall",
																"src": "695:13:19"
															},
															"nativeSrc": "687:113:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "709:19:19",
																"nodeType": "YulBlock",
																"src": "709:19:19",
																"statements": [
																	{
																		"nativeSrc": "711:15:19",
																		"nodeType": "YulAssignment",
																		"src": "711:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "720:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "723:2:19",
																					"nodeType": "YulLiteral",
																					"src": "723:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "716:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:19"
																			},
																			"nativeSrc": "716:10:19",
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "711:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "691:3:19",
																"nodeType": "YulBlock",
																"src": "691:3:19",
																"statements": []
															},
															"src": "687:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "820:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "825:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "816:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:19"
																		},
																		"nativeSrc": "816:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "834:1:19",
																		"nodeType": "YulLiteral",
																		"src": "834:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "809:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:19"
																},
																"nativeSrc": "809:27:19",
																"nodeType": "YulFunctionCall",
																"src": "809:27:19"
															},
															"nativeSrc": "809:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "809:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "592:250:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "636:3:19",
														"nodeType": "YulTypedName",
														"src": "636:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "641:3:19",
														"nodeType": "YulTypedName",
														"src": "641:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "646:6:19",
														"nodeType": "YulTypedName",
														"src": "646:6:19",
														"type": ""
													}
												],
												"src": "592:250:19"
											},
											{
												"body": {
													"nativeSrc": "897:221:19",
													"nodeType": "YulBlock",
													"src": "897:221:19",
													"statements": [
														{
															"nativeSrc": "907:26:19",
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "927:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "921:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:19"
																},
																"nativeSrc": "921:12:19",
																"nodeType": "YulFunctionCall",
																"src": "921:12:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "911:6:19",
																	"nodeType": "YulTypedName",
																	"src": "911:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "949:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "954:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "942:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:19"
																},
																"nativeSrc": "942:19:19",
																"nodeType": "YulFunctionCall",
																"src": "942:19:19"
															},
															"nativeSrc": "942:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "942:19:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1009:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1016:4:19",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1005:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:19"
																		},
																		"nativeSrc": "1005:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1027:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1032:4:19",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1023:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:19"
																		},
																		"nativeSrc": "1023:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1039:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "970:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:19"
																},
																"nativeSrc": "970:76:19",
																"nodeType": "YulFunctionCall",
																"src": "970:76:19"
															},
															"nativeSrc": "970:76:19",
															"nodeType": "YulExpressionStatement",
															"src": "970:76:19"
														},
														{
															"nativeSrc": "1055:57:19",
															"nodeType": "YulAssignment",
															"src": "1055:57:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1070:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1083:6:19",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1091:2:19",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1079:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:19"
																						},
																						"nativeSrc": "1079:15:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1100:2:19",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1096:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:19"
																						},
																						"nativeSrc": "1096:7:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1075:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:19"
																				},
																				"nativeSrc": "1075:29:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1066:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:19"
																		},
																		"nativeSrc": "1066:39:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1062:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:19"
																},
																"nativeSrc": "1062:50:19",
																"nodeType": "YulFunctionCall",
																"src": "1062:50:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1055:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "847:271:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "874:5:19",
														"nodeType": "YulTypedName",
														"src": "874:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "881:3:19",
														"nodeType": "YulTypedName",
														"src": "881:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "889:3:19",
														"nodeType": "YulTypedName",
														"src": "889:3:19",
														"type": ""
													}
												],
												"src": "847:271:19"
											},
											{
												"body": {
													"nativeSrc": "1244:99:19",
													"nodeType": "YulBlock",
													"src": "1244:99:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1261:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1272:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1254:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:19"
																},
																"nativeSrc": "1254:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1254:21:19"
															},
															"nativeSrc": "1254:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:19"
														},
														{
															"nativeSrc": "1284:53:19",
															"nodeType": "YulAssignment",
															"src": "1284:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1310:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1322:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1333:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1318:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:19"
																		},
																		"nativeSrc": "1318:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1292:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:19"
																},
																"nativeSrc": "1292:45:19",
																"nodeType": "YulFunctionCall",
																"src": "1292:45:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1284:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1123:220:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1213:9:19",
														"nodeType": "YulTypedName",
														"src": "1213:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1224:6:19",
														"nodeType": "YulTypedName",
														"src": "1224:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1235:4:19",
														"nodeType": "YulTypedName",
														"src": "1235:4:19",
														"type": ""
													}
												],
												"src": "1123:220:19"
											},
											{
												"body": {
													"nativeSrc": "1418:110:19",
													"nodeType": "YulBlock",
													"src": "1418:110:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1464:16:19",
																"nodeType": "YulBlock",
																"src": "1464:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1466:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:19"
																			},
																			"nativeSrc": "1466:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:19"
																		},
																		"nativeSrc": "1466:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1439:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:19"
																		},
																		"nativeSrc": "1435:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1460:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1431:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:19"
																},
																"nativeSrc": "1431:32:19",
																"nodeType": "YulFunctionCall",
																"src": "1431:32:19"
															},
															"nativeSrc": "1428:52:19",
															"nodeType": "YulIf",
															"src": "1428:52:19"
														},
														{
															"nativeSrc": "1489:33:19",
															"nodeType": "YulAssignment",
															"src": "1489:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1512:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1499:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:19"
																},
																"nativeSrc": "1499:23:19",
																"nodeType": "YulFunctionCall",
																"src": "1499:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1489:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1348:180:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1384:9:19",
														"nodeType": "YulTypedName",
														"src": "1384:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1395:7:19",
														"nodeType": "YulTypedName",
														"src": "1395:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1407:6:19",
														"nodeType": "YulTypedName",
														"src": "1407:6:19",
														"type": ""
													}
												],
												"src": "1348:180:19"
											},
											{
												"body": {
													"nativeSrc": "1634:102:19",
													"nodeType": "YulBlock",
													"src": "1634:102:19",
													"statements": [
														{
															"nativeSrc": "1644:26:19",
															"nodeType": "YulAssignment",
															"src": "1644:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1656:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1652:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:19"
																},
																"nativeSrc": "1652:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1652:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1644:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1686:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1701:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1717:3:19",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1722:1:19",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1713:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:19"
																						},
																						"nativeSrc": "1713:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1726:1:19",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1709:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:19"
																				},
																				"nativeSrc": "1709:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1697:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:19"
																		},
																		"nativeSrc": "1697:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:19"
																},
																"nativeSrc": "1679:51:19",
																"nodeType": "YulFunctionCall",
																"src": "1679:51:19"
															},
															"nativeSrc": "1679:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1533:203:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1603:9:19",
														"nodeType": "YulTypedName",
														"src": "1603:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1614:6:19",
														"nodeType": "YulTypedName",
														"src": "1614:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1625:4:19",
														"nodeType": "YulTypedName",
														"src": "1625:4:19",
														"type": ""
													}
												],
												"src": "1533:203:19"
											},
											{
												"body": {
													"nativeSrc": "1790:124:19",
													"nodeType": "YulBlock",
													"src": "1790:124:19",
													"statements": [
														{
															"nativeSrc": "1800:29:19",
															"nodeType": "YulAssignment",
															"src": "1800:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1822:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1809:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:19"
																},
																"nativeSrc": "1809:20:19",
																"nodeType": "YulFunctionCall",
																"src": "1809:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1800:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1892:16:19",
																"nodeType": "YulBlock",
																"src": "1892:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1901:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1904:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1894:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:19"
																			},
																			"nativeSrc": "1894:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:19"
																		},
																		"nativeSrc": "1894:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1851:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1862:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1877:3:19",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1882:1:19",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1873:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:19"
																								},
																								"nativeSrc": "1873:11:19",
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1886:1:19",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1869:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:19"
																						},
																						"nativeSrc": "1869:19:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1858:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:19"
																				},
																				"nativeSrc": "1858:31:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1848:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:19"
																		},
																		"nativeSrc": "1848:42:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1841:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:19"
																},
																"nativeSrc": "1841:50:19",
																"nodeType": "YulFunctionCall",
																"src": "1841:50:19"
															},
															"nativeSrc": "1838:70:19",
															"nodeType": "YulIf",
															"src": "1838:70:19"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1741:173:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:19",
														"nodeType": "YulTypedName",
														"src": "1769:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1780:5:19",
														"nodeType": "YulTypedName",
														"src": "1780:5:19",
														"type": ""
													}
												],
												"src": "1741:173:19"
											},
											{
												"body": {
													"nativeSrc": "2006:167:19",
													"nodeType": "YulBlock",
													"src": "2006:167:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2052:16:19",
																"nodeType": "YulBlock",
																"src": "2052:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2061:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2064:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2054:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:19"
																			},
																			"nativeSrc": "2054:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:19"
																		},
																		"nativeSrc": "2054:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2027:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2036:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2023:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:19"
																		},
																		"nativeSrc": "2023:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2048:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2019:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:19"
																},
																"nativeSrc": "2019:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2019:32:19"
															},
															"nativeSrc": "2016:52:19",
															"nodeType": "YulIf",
															"src": "2016:52:19"
														},
														{
															"nativeSrc": "2077:39:19",
															"nodeType": "YulAssignment",
															"src": "2077:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2106:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2087:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:19"
																},
																"nativeSrc": "2087:29:19",
																"nodeType": "YulFunctionCall",
																"src": "2087:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2077:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:19"
																}
															]
														},
														{
															"nativeSrc": "2125:42:19",
															"nodeType": "YulAssignment",
															"src": "2125:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2152:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2163:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2148:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:19"
																		},
																		"nativeSrc": "2148:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2135:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:19"
																},
																"nativeSrc": "2135:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2135:32:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2125:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1919:254:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1964:9:19",
														"nodeType": "YulTypedName",
														"src": "1964:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1975:7:19",
														"nodeType": "YulTypedName",
														"src": "1975:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1987:6:19",
														"nodeType": "YulTypedName",
														"src": "1987:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1995:6:19",
														"nodeType": "YulTypedName",
														"src": "1995:6:19",
														"type": ""
													}
												],
												"src": "1919:254:19"
											},
											{
												"body": {
													"nativeSrc": "2279:76:19",
													"nodeType": "YulBlock",
													"src": "2279:76:19",
													"statements": [
														{
															"nativeSrc": "2289:26:19",
															"nodeType": "YulAssignment",
															"src": "2289:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2301:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2312:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2297:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:19"
																},
																"nativeSrc": "2297:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2297:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2289:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2289:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2331:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:19"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2342:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2324:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:19"
																},
																"nativeSrc": "2324:25:19",
																"nodeType": "YulFunctionCall",
																"src": "2324:25:19"
															},
															"nativeSrc": "2324:25:19",
															"nodeType": "YulExpressionStatement",
															"src": "2324:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2178:177:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2248:9:19",
														"nodeType": "YulTypedName",
														"src": "2248:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2259:6:19",
														"nodeType": "YulTypedName",
														"src": "2259:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2270:4:19",
														"nodeType": "YulTypedName",
														"src": "2270:4:19",
														"type": ""
													}
												],
												"src": "2178:177:19"
											},
											{
												"body": {
													"nativeSrc": "2464:224:19",
													"nodeType": "YulBlock",
													"src": "2464:224:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:16:19",
																"nodeType": "YulBlock",
																"src": "2510:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2519:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2522:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2512:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:19"
																			},
																			"nativeSrc": "2512:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:19"
																		},
																		"nativeSrc": "2512:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:19"
																		},
																		"nativeSrc": "2481:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:19"
																},
																"nativeSrc": "2477:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:19"
															},
															"nativeSrc": "2474:52:19",
															"nodeType": "YulIf",
															"src": "2474:52:19"
														},
														{
															"nativeSrc": "2535:39:19",
															"nodeType": "YulAssignment",
															"src": "2535:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2564:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2545:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2545:18:19"
																},
																"nativeSrc": "2545:29:19",
																"nodeType": "YulFunctionCall",
																"src": "2545:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2535:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:19"
																}
															]
														},
														{
															"nativeSrc": "2583:48:19",
															"nodeType": "YulAssignment",
															"src": "2583:48:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2616:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2627:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2612:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:19"
																		},
																		"nativeSrc": "2612:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2593:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2593:18:19"
																},
																"nativeSrc": "2593:38:19",
																"nodeType": "YulFunctionCall",
																"src": "2593:38:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2583:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:19"
																}
															]
														},
														{
															"nativeSrc": "2640:42:19",
															"nodeType": "YulAssignment",
															"src": "2640:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2667:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2678:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2663:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:19"
																		},
																		"nativeSrc": "2663:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2650:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:19"
																},
																"nativeSrc": "2650:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2650:32:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2640:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2360:328:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2414:9:19",
														"nodeType": "YulTypedName",
														"src": "2414:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2425:7:19",
														"nodeType": "YulTypedName",
														"src": "2425:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2437:6:19",
														"nodeType": "YulTypedName",
														"src": "2437:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2445:6:19",
														"nodeType": "YulTypedName",
														"src": "2445:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2453:6:19",
														"nodeType": "YulTypedName",
														"src": "2453:6:19",
														"type": ""
													}
												],
												"src": "2360:328:19"
											},
											{
												"body": {
													"nativeSrc": "2763:116:19",
													"nodeType": "YulBlock",
													"src": "2763:116:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2809:16:19",
																"nodeType": "YulBlock",
																"src": "2809:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2818:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2818:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2821:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2821:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2811:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2811:6:19"
																			},
																			"nativeSrc": "2811:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2811:12:19"
																		},
																		"nativeSrc": "2811:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2811:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2784:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2784:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2793:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2780:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:19"
																		},
																		"nativeSrc": "2780:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2780:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2805:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2776:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:19"
																},
																"nativeSrc": "2776:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2776:32:19"
															},
															"nativeSrc": "2773:52:19",
															"nodeType": "YulIf",
															"src": "2773:52:19"
														},
														{
															"nativeSrc": "2834:39:19",
															"nodeType": "YulAssignment",
															"src": "2834:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2863:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2844:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2844:18:19"
																},
																"nativeSrc": "2844:29:19",
																"nodeType": "YulFunctionCall",
																"src": "2844:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2834:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2693:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2729:9:19",
														"nodeType": "YulTypedName",
														"src": "2729:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2740:7:19",
														"nodeType": "YulTypedName",
														"src": "2740:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2752:6:19",
														"nodeType": "YulTypedName",
														"src": "2752:6:19",
														"type": ""
													}
												],
												"src": "2693:186:19"
											},
											{
												"body": {
													"nativeSrc": "2968:263:19",
													"nodeType": "YulBlock",
													"src": "2968:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3014:16:19",
																"nodeType": "YulBlock",
																"src": "3014:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3023:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3026:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3016:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:19"
																			},
																			"nativeSrc": "3016:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:19"
																		},
																		"nativeSrc": "3016:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2989:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2998:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2985:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:19"
																		},
																		"nativeSrc": "2985:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3010:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2981:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:19"
																},
																"nativeSrc": "2981:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2981:32:19"
															},
															"nativeSrc": "2978:52:19",
															"nodeType": "YulIf",
															"src": "2978:52:19"
														},
														{
															"nativeSrc": "3039:39:19",
															"nodeType": "YulAssignment",
															"src": "3039:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3068:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3049:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:19"
																},
																"nativeSrc": "3049:29:19",
																"nodeType": "YulFunctionCall",
																"src": "3049:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3039:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:19"
																}
															]
														},
														{
															"nativeSrc": "3087:45:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3117:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3128:2:19",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3113:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:19"
																		},
																		"nativeSrc": "3113:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3100:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:19"
																},
																"nativeSrc": "3100:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3100:32:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3091:5:19",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3185:16:19",
																"nodeType": "YulBlock",
																"src": "3185:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3194:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3197:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3187:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:19"
																			},
																			"nativeSrc": "3187:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:19"
																		},
																		"nativeSrc": "3187:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3154:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3175:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:19"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3168:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:19"
																						},
																						"nativeSrc": "3168:13:19",
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3161:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:19"
																				},
																				"nativeSrc": "3161:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3151:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:19"
																		},
																		"nativeSrc": "3151:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3144:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:19"
																},
																"nativeSrc": "3144:40:19",
																"nodeType": "YulFunctionCall",
																"src": "3144:40:19"
															},
															"nativeSrc": "3141:60:19",
															"nodeType": "YulIf",
															"src": "3141:60:19"
														},
														{
															"nativeSrc": "3210:15:19",
															"nodeType": "YulAssignment",
															"src": "3210:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "3220:5:19",
																"nodeType": "YulIdentifier",
																"src": "3220:5:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3210:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2884:347:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2926:9:19",
														"nodeType": "YulTypedName",
														"src": "2926:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2937:7:19",
														"nodeType": "YulTypedName",
														"src": "2937:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2949:6:19",
														"nodeType": "YulTypedName",
														"src": "2949:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2957:6:19",
														"nodeType": "YulTypedName",
														"src": "2957:6:19",
														"type": ""
													}
												],
												"src": "2884:347:19"
											},
											{
												"body": {
													"nativeSrc": "3268:95:19",
													"nodeType": "YulBlock",
													"src": "3268:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3285:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3292:3:19",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3297:10:19",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3288:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:19"
																		},
																		"nativeSrc": "3288:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3278:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:19"
																},
																"nativeSrc": "3278:31:19",
																"nodeType": "YulFunctionCall",
																"src": "3278:31:19"
															},
															"nativeSrc": "3278:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3325:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3328:4:19",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3318:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:19"
																},
																"nativeSrc": "3318:15:19",
																"nodeType": "YulFunctionCall",
																"src": "3318:15:19"
															},
															"nativeSrc": "3318:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3349:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3352:4:19",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3342:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:19"
																},
																"nativeSrc": "3342:15:19",
																"nodeType": "YulFunctionCall",
																"src": "3342:15:19"
															},
															"nativeSrc": "3342:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3236:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:19"
											},
											{
												"body": {
													"nativeSrc": "3442:557:19",
													"nodeType": "YulBlock",
													"src": "3442:557:19",
													"statements": [
														{
															"nativeSrc": "3452:28:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3452:28:19",
															"value": {
																"kind": "number",
																"nativeSrc": "3462:18:19",
																"nodeType": "YulLiteral",
																"src": "3462:18:19",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3456:2:19",
																	"nodeType": "YulTypedName",
																	"src": "3456:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3507:22:19",
																"nodeType": "YulBlock",
																"src": "3507:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3509:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "3509:16:19"
																			},
																			"nativeSrc": "3509:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3509:18:19"
																		},
																		"nativeSrc": "3509:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3509:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3495:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3495:6:19"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3503:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "3503:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3492:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3492:2:19"
																},
																"nativeSrc": "3492:14:19",
																"nodeType": "YulFunctionCall",
																"src": "3492:14:19"
															},
															"nativeSrc": "3489:40:19",
															"nodeType": "YulIf",
															"src": "3489:40:19"
														},
														{
															"nativeSrc": "3538:17:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:17:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3552:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3552:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3548:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3548:3:19"
																},
																"nativeSrc": "3548:7:19",
																"nodeType": "YulFunctionCall",
																"src": "3548:7:19"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3542:2:19",
																	"nodeType": "YulTypedName",
																	"src": "3542:2:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3564:23:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3564:23:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3584:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3584:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3578:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3578:5:19"
																},
																"nativeSrc": "3578:9:19",
																"nodeType": "YulFunctionCall",
																"src": "3578:9:19"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3568:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3568:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3596:73:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3596:73:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3618:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3618:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "3642:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "3642:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3650:2:19",
																										"nodeType": "YulLiteral",
																										"src": "3650:2:19",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3638:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "3638:3:19"
																								},
																								"nativeSrc": "3638:15:19",
																								"nodeType": "YulFunctionCall",
																								"src": "3638:15:19"
																							},
																							{
																								"name": "_2",
																								"nativeSrc": "3655:2:19",
																								"nodeType": "YulIdentifier",
																								"src": "3655:2:19"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3634:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "3634:3:19"
																						},
																						"nativeSrc": "3634:24:19",
																						"nodeType": "YulFunctionCall",
																						"src": "3634:24:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3660:2:19",
																						"nodeType": "YulLiteral",
																						"src": "3660:2:19",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3630:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:19"
																				},
																				"nativeSrc": "3630:33:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3630:33:19"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "3665:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "3665:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3626:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3626:3:19"
																		},
																		"nativeSrc": "3626:42:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3626:42:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3614:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3614:3:19"
																},
																"nativeSrc": "3614:55:19",
																"nodeType": "YulFunctionCall",
																"src": "3614:55:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3600:10:19",
																	"nodeType": "YulTypedName",
																	"src": "3600:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3728:22:19",
																"nodeType": "YulBlock",
																"src": "3728:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3730:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "3730:16:19"
																			},
																			"nativeSrc": "3730:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3730:18:19"
																		},
																		"nativeSrc": "3730:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3730:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3687:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "3687:10:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3699:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "3699:2:19"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3684:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "3684:2:19"
																		},
																		"nativeSrc": "3684:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3684:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3707:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "3707:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3719:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3719:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3704:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "3704:2:19"
																		},
																		"nativeSrc": "3704:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3704:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3681:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3681:2:19"
																},
																"nativeSrc": "3681:46:19",
																"nodeType": "YulFunctionCall",
																"src": "3681:46:19"
															},
															"nativeSrc": "3678:72:19",
															"nodeType": "YulIf",
															"src": "3678:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3766:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3766:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3770:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "3770:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:19"
																},
																"nativeSrc": "3759:22:19",
																"nodeType": "YulFunctionCall",
																"src": "3759:22:19"
															},
															"nativeSrc": "3759:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "3759:22:19"
														},
														{
															"nativeSrc": "3790:15:19",
															"nodeType": "YulAssignment",
															"src": "3790:15:19",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3799:6:19",
																"nodeType": "YulIdentifier",
																"src": "3799:6:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3790:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3790:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3821:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3821:6:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3829:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3829:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3814:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3814:6:19"
																},
																"nativeSrc": "3814:22:19",
																"nodeType": "YulFunctionCall",
																"src": "3814:22:19"
															},
															"nativeSrc": "3814:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "3814:22:19"
														},
														{
															"body": {
																"nativeSrc": "3874:16:19",
																"nodeType": "YulBlock",
																"src": "3874:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3883:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3883:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3886:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3886:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3876:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3876:6:19"
																			},
																			"nativeSrc": "3876:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3876:12:19"
																		},
																		"nativeSrc": "3876:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3876:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3855:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3855:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3860:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3860:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3851:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3851:3:19"
																		},
																		"nativeSrc": "3851:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3851:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3869:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3869:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3848:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3848:2:19"
																},
																"nativeSrc": "3848:25:19",
																"nodeType": "YulFunctionCall",
																"src": "3848:25:19"
															},
															"nativeSrc": "3845:45:19",
															"nodeType": "YulIf",
															"src": "3845:45:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3916:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3916:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3924:4:19",
																				"nodeType": "YulLiteral",
																				"src": "3924:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3912:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:19"
																		},
																		"nativeSrc": "3912:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3912:17:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3931:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3931:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3936:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3936:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3899:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3899:12:19"
																},
																"nativeSrc": "3899:44:19",
																"nodeType": "YulFunctionCall",
																"src": "3899:44:19"
															},
															"nativeSrc": "3899:44:19",
															"nodeType": "YulExpressionStatement",
															"src": "3899:44:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3967:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3967:6:19"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3975:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3975:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3963:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3963:3:19"
																				},
																				"nativeSrc": "3963:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3963:19:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3984:4:19",
																				"nodeType": "YulLiteral",
																				"src": "3984:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3959:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3959:3:19"
																		},
																		"nativeSrc": "3959:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3959:30:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3991:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3991:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3952:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3952:6:19"
																},
																"nativeSrc": "3952:41:19",
																"nodeType": "YulFunctionCall",
																"src": "3952:41:19"
															},
															"nativeSrc": "3952:41:19",
															"nodeType": "YulExpressionStatement",
															"src": "3952:41:19"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nativeSrc": "3368:631:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3411:3:19",
														"nodeType": "YulTypedName",
														"src": "3411:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3416:6:19",
														"nodeType": "YulTypedName",
														"src": "3416:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3424:3:19",
														"nodeType": "YulTypedName",
														"src": "3424:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3432:5:19",
														"nodeType": "YulTypedName",
														"src": "3432:5:19",
														"type": ""
													}
												],
												"src": "3368:631:19"
											},
											{
												"body": {
													"nativeSrc": "4134:536:19",
													"nodeType": "YulBlock",
													"src": "4134:536:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4181:16:19",
																"nodeType": "YulBlock",
																"src": "4181:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4190:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4190:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4193:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4193:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4183:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4183:6:19"
																			},
																			"nativeSrc": "4183:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4183:12:19"
																		},
																		"nativeSrc": "4183:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4183:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4155:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4155:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4164:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4164:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4151:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4151:3:19"
																		},
																		"nativeSrc": "4151:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4151:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4176:3:19",
																		"nodeType": "YulLiteral",
																		"src": "4176:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4147:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4147:3:19"
																},
																"nativeSrc": "4147:33:19",
																"nodeType": "YulFunctionCall",
																"src": "4147:33:19"
															},
															"nativeSrc": "4144:53:19",
															"nodeType": "YulIf",
															"src": "4144:53:19"
														},
														{
															"nativeSrc": "4206:39:19",
															"nodeType": "YulAssignment",
															"src": "4206:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4235:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4235:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4216:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "4216:18:19"
																},
																"nativeSrc": "4216:29:19",
																"nodeType": "YulFunctionCall",
																"src": "4216:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4206:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4206:6:19"
																}
															]
														},
														{
															"nativeSrc": "4254:48:19",
															"nodeType": "YulAssignment",
															"src": "4254:48:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4287:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4287:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4298:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4298:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4283:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4283:3:19"
																		},
																		"nativeSrc": "4283:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4283:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4264:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "4264:18:19"
																},
																"nativeSrc": "4264:38:19",
																"nodeType": "YulFunctionCall",
																"src": "4264:38:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4254:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4254:6:19"
																}
															]
														},
														{
															"nativeSrc": "4311:42:19",
															"nodeType": "YulAssignment",
															"src": "4311:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4338:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4338:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4349:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4349:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4334:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4334:3:19"
																		},
																		"nativeSrc": "4334:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4334:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4321:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4321:12:19"
																},
																"nativeSrc": "4321:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4321:32:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4311:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4311:6:19"
																}
															]
														},
														{
															"nativeSrc": "4362:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4362:46:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4393:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4393:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4404:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4404:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4389:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:19"
																		},
																		"nativeSrc": "4389:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4389:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4376:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4376:12:19"
																},
																"nativeSrc": "4376:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4376:32:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4366:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4366:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4451:16:19",
																"nodeType": "YulBlock",
																"src": "4451:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4460:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4460:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4463:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4463:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4453:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4453:6:19"
																			},
																			"nativeSrc": "4453:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4453:12:19"
																		},
																		"nativeSrc": "4453:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4453:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4423:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4431:18:19",
																		"nodeType": "YulLiteral",
																		"src": "4431:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4420:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4420:2:19"
																},
																"nativeSrc": "4420:30:19",
																"nodeType": "YulFunctionCall",
																"src": "4420:30:19"
															},
															"nativeSrc": "4417:50:19",
															"nodeType": "YulIf",
															"src": "4417:50:19"
														},
														{
															"nativeSrc": "4476:32:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4476:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4490:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4490:9:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4501:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4501:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4486:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4486:3:19"
																},
																"nativeSrc": "4486:22:19",
																"nodeType": "YulFunctionCall",
																"src": "4486:22:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4480:2:19",
																	"nodeType": "YulTypedName",
																	"src": "4480:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4556:16:19",
																"nodeType": "YulBlock",
																"src": "4556:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4565:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4565:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4568:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4568:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4558:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4558:6:19"
																			},
																			"nativeSrc": "4558:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4558:12:19"
																		},
																		"nativeSrc": "4558:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4558:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4535:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "4535:2:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4539:4:19",
																						"nodeType": "YulLiteral",
																						"src": "4539:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4531:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4531:3:19"
																				},
																				"nativeSrc": "4531:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4531:13:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4546:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4546:7:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4527:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:19"
																		},
																		"nativeSrc": "4527:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4520:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:19"
																},
																"nativeSrc": "4520:35:19",
																"nodeType": "YulFunctionCall",
																"src": "4520:35:19"
															},
															"nativeSrc": "4517:55:19",
															"nodeType": "YulIf",
															"src": "4517:55:19"
														},
														{
															"nativeSrc": "4581:83:19",
															"nodeType": "YulAssignment",
															"src": "4581:83:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4629:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "4629:2:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4633:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4633:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4625:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4625:3:19"
																		},
																		"nativeSrc": "4625:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4625:11:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4651:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "4651:2:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4638:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "4638:12:19"
																		},
																		"nativeSrc": "4638:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4638:16:19"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4656:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "4656:7:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "4591:33:19",
																	"nodeType": "YulIdentifier",
																	"src": "4591:33:19"
																},
																"nativeSrc": "4591:73:19",
																"nodeType": "YulFunctionCall",
																"src": "4591:73:19"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4581:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4581:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "4004:666:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4076:9:19",
														"nodeType": "YulTypedName",
														"src": "4076:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4087:7:19",
														"nodeType": "YulTypedName",
														"src": "4087:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4099:6:19",
														"nodeType": "YulTypedName",
														"src": "4099:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4107:6:19",
														"nodeType": "YulTypedName",
														"src": "4107:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4115:6:19",
														"nodeType": "YulTypedName",
														"src": "4115:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4123:6:19",
														"nodeType": "YulTypedName",
														"src": "4123:6:19",
														"type": ""
													}
												],
												"src": "4004:666:19"
											},
											{
												"body": {
													"nativeSrc": "4772:427:19",
													"nodeType": "YulBlock",
													"src": "4772:427:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4818:16:19",
																"nodeType": "YulBlock",
																"src": "4818:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4827:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4827:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4830:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4830:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4820:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4820:6:19"
																			},
																			"nativeSrc": "4820:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4820:12:19"
																		},
																		"nativeSrc": "4820:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4820:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4793:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4793:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4802:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4802:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4789:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4789:3:19"
																		},
																		"nativeSrc": "4789:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4789:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4814:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4814:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4785:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4785:3:19"
																},
																"nativeSrc": "4785:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4785:32:19"
															},
															"nativeSrc": "4782:52:19",
															"nodeType": "YulIf",
															"src": "4782:52:19"
														},
														{
															"nativeSrc": "4843:39:19",
															"nodeType": "YulAssignment",
															"src": "4843:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4872:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4872:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4853:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "4853:18:19"
																},
																"nativeSrc": "4853:29:19",
																"nodeType": "YulFunctionCall",
																"src": "4853:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4843:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:19"
																}
															]
														},
														{
															"nativeSrc": "4891:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4891:46:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4922:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4922:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4933:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4933:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4918:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4918:3:19"
																		},
																		"nativeSrc": "4918:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4918:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4905:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4905:12:19"
																},
																"nativeSrc": "4905:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4905:32:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4895:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4895:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4980:16:19",
																"nodeType": "YulBlock",
																"src": "4980:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4989:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4989:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4992:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4992:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4982:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4982:6:19"
																			},
																			"nativeSrc": "4982:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4982:12:19"
																		},
																		"nativeSrc": "4982:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4982:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4952:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4952:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4960:18:19",
																		"nodeType": "YulLiteral",
																		"src": "4960:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4949:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4949:2:19"
																},
																"nativeSrc": "4949:30:19",
																"nodeType": "YulFunctionCall",
																"src": "4949:30:19"
															},
															"nativeSrc": "4946:50:19",
															"nodeType": "YulIf",
															"src": "4946:50:19"
														},
														{
															"nativeSrc": "5005:32:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5005:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5019:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5019:9:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5030:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5030:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5015:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5015:3:19"
																},
																"nativeSrc": "5015:22:19",
																"nodeType": "YulFunctionCall",
																"src": "5015:22:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5009:2:19",
																	"nodeType": "YulTypedName",
																	"src": "5009:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5085:16:19",
																"nodeType": "YulBlock",
																"src": "5085:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5094:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5094:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5097:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5097:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5087:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5087:6:19"
																			},
																			"nativeSrc": "5087:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5087:12:19"
																		},
																		"nativeSrc": "5087:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5087:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5064:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "5064:2:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5068:4:19",
																						"nodeType": "YulLiteral",
																						"src": "5068:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5060:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5060:3:19"
																				},
																				"nativeSrc": "5060:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5060:13:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5075:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5075:7:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5056:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5056:3:19"
																		},
																		"nativeSrc": "5056:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5056:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5049:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5049:6:19"
																},
																"nativeSrc": "5049:35:19",
																"nodeType": "YulFunctionCall",
																"src": "5049:35:19"
															},
															"nativeSrc": "5046:55:19",
															"nodeType": "YulIf",
															"src": "5046:55:19"
														},
														{
															"nativeSrc": "5110:83:19",
															"nodeType": "YulAssignment",
															"src": "5110:83:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5158:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "5158:2:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5162:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5162:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5154:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5154:3:19"
																		},
																		"nativeSrc": "5154:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5154:11:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5180:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "5180:2:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5167:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "5167:12:19"
																		},
																		"nativeSrc": "5167:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5167:16:19"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5185:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "5185:7:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "5120:33:19",
																	"nodeType": "YulIdentifier",
																	"src": "5120:33:19"
																},
																"nativeSrc": "5120:73:19",
																"nodeType": "YulFunctionCall",
																"src": "5120:73:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5110:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5110:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "4675:524:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4730:9:19",
														"nodeType": "YulTypedName",
														"src": "4730:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4741:7:19",
														"nodeType": "YulTypedName",
														"src": "4741:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4753:6:19",
														"nodeType": "YulTypedName",
														"src": "4753:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4761:6:19",
														"nodeType": "YulTypedName",
														"src": "4761:6:19",
														"type": ""
													}
												],
												"src": "4675:524:19"
											},
											{
												"body": {
													"nativeSrc": "5291:173:19",
													"nodeType": "YulBlock",
													"src": "5291:173:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5337:16:19",
																"nodeType": "YulBlock",
																"src": "5337:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5346:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5346:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5349:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5339:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5339:6:19"
																			},
																			"nativeSrc": "5339:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5339:12:19"
																		},
																		"nativeSrc": "5339:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5339:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5312:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5312:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5321:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5321:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5308:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5308:3:19"
																		},
																		"nativeSrc": "5308:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5308:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5333:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5333:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5304:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5304:3:19"
																},
																"nativeSrc": "5304:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5304:32:19"
															},
															"nativeSrc": "5301:52:19",
															"nodeType": "YulIf",
															"src": "5301:52:19"
														},
														{
															"nativeSrc": "5362:39:19",
															"nodeType": "YulAssignment",
															"src": "5362:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5391:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5391:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5372:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "5372:18:19"
																},
																"nativeSrc": "5372:29:19",
																"nodeType": "YulFunctionCall",
																"src": "5372:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5362:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5362:6:19"
																}
															]
														},
														{
															"nativeSrc": "5410:48:19",
															"nodeType": "YulAssignment",
															"src": "5410:48:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5443:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5443:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5454:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5454:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5439:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:19"
																		},
																		"nativeSrc": "5439:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5420:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "5420:18:19"
																},
																"nativeSrc": "5420:38:19",
																"nodeType": "YulFunctionCall",
																"src": "5420:38:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5410:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5204:260:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5249:9:19",
														"nodeType": "YulTypedName",
														"src": "5249:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5260:7:19",
														"nodeType": "YulTypedName",
														"src": "5260:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5272:6:19",
														"nodeType": "YulTypedName",
														"src": "5272:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5280:6:19",
														"nodeType": "YulTypedName",
														"src": "5280:6:19",
														"type": ""
													}
												],
												"src": "5204:260:19"
											},
											{
												"body": {
													"nativeSrc": "5524:325:19",
													"nodeType": "YulBlock",
													"src": "5524:325:19",
													"statements": [
														{
															"nativeSrc": "5534:22:19",
															"nodeType": "YulAssignment",
															"src": "5534:22:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5548:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5548:1:19",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5551:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "5551:4:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5544:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:19"
																},
																"nativeSrc": "5544:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5544:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5534:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:19"
																}
															]
														},
														{
															"nativeSrc": "5565:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5565:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5595:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "5595:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5601:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5601:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5591:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:19"
																},
																"nativeSrc": "5591:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5591:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5569:18:19",
																	"nodeType": "YulTypedName",
																	"src": "5569:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5642:31:19",
																"nodeType": "YulBlock",
																"src": "5642:31:19",
																"statements": [
																	{
																		"nativeSrc": "5644:27:19",
																		"nodeType": "YulAssignment",
																		"src": "5644:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5658:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "5658:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5666:4:19",
																					"nodeType": "YulLiteral",
																					"src": "5666:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5654:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "5654:3:19"
																			},
																			"nativeSrc": "5654:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5654:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5644:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5644:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5622:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "5622:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5615:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:19"
																},
																"nativeSrc": "5615:26:19",
																"nodeType": "YulFunctionCall",
																"src": "5615:26:19"
															},
															"nativeSrc": "5612:61:19",
															"nodeType": "YulIf",
															"src": "5612:61:19"
														},
														{
															"body": {
																"nativeSrc": "5732:111:19",
																"nodeType": "YulBlock",
																"src": "5732:111:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5753:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5753:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5760:3:19",
																							"nodeType": "YulLiteral",
																							"src": "5760:3:19",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5765:10:19",
																							"nodeType": "YulLiteral",
																							"src": "5765:10:19",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5756:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5756:3:19"
																					},
																					"nativeSrc": "5756:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5756:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5746:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5746:6:19"
																			},
																			"nativeSrc": "5746:31:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5746:31:19"
																		},
																		"nativeSrc": "5746:31:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5746:31:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5797:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5797:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5800:4:19",
																					"nodeType": "YulLiteral",
																					"src": "5800:4:19",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5790:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5790:6:19"
																			},
																			"nativeSrc": "5790:15:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5790:15:19"
																		},
																		"nativeSrc": "5790:15:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5790:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5825:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5825:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5828:4:19",
																					"nodeType": "YulLiteral",
																					"src": "5828:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5818:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5818:6:19"
																			},
																			"nativeSrc": "5818:15:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5818:15:19"
																		},
																		"nativeSrc": "5818:15:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5818:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5688:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "5688:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5711:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5711:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5719:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5719:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5708:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "5708:2:19"
																		},
																		"nativeSrc": "5708:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5708:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5685:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5685:2:19"
																},
																"nativeSrc": "5685:38:19",
																"nodeType": "YulFunctionCall",
																"src": "5685:38:19"
															},
															"nativeSrc": "5682:161:19",
															"nodeType": "YulIf",
															"src": "5682:161:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5469:380:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5504:4:19",
														"nodeType": "YulTypedName",
														"src": "5504:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5513:6:19",
														"nodeType": "YulTypedName",
														"src": "5513:6:19",
														"type": ""
													}
												],
												"src": "5469:380:19"
											},
											{
												"body": {
													"nativeSrc": "6011:218:19",
													"nodeType": "YulBlock",
													"src": "6011:218:19",
													"statements": [
														{
															"nativeSrc": "6021:26:19",
															"nodeType": "YulAssignment",
															"src": "6021:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6033:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6033:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6044:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6044:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6029:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6029:3:19"
																},
																"nativeSrc": "6029:18:19",
																"nodeType": "YulFunctionCall",
																"src": "6029:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6021:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6021:4:19"
																}
															]
														},
														{
															"nativeSrc": "6056:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6056:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6074:3:19",
																				"nodeType": "YulLiteral",
																				"src": "6074:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6070:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6070:3:19"
																		},
																		"nativeSrc": "6070:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6070:11:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6083:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6083:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6066:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6066:3:19"
																},
																"nativeSrc": "6066:19:19",
																"nodeType": "YulFunctionCall",
																"src": "6066:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6060:2:19",
																	"nodeType": "YulTypedName",
																	"src": "6060:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6101:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6101:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6116:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6116:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6124:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "6124:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6112:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6112:3:19"
																		},
																		"nativeSrc": "6112:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6112:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6094:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6094:6:19"
																},
																"nativeSrc": "6094:34:19",
																"nodeType": "YulFunctionCall",
																"src": "6094:34:19"
															},
															"nativeSrc": "6094:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "6094:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6148:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6148:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6159:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6159:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6144:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6144:3:19"
																		},
																		"nativeSrc": "6144:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6144:18:19"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6164:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6164:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6137:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6137:6:19"
																},
																"nativeSrc": "6137:34:19",
																"nodeType": "YulFunctionCall",
																"src": "6137:34:19"
															},
															"nativeSrc": "6137:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "6137:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6191:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6191:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6202:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6202:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6187:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6187:3:19"
																		},
																		"nativeSrc": "6187:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6187:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6211:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6211:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6219:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "6219:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6207:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6207:3:19"
																		},
																		"nativeSrc": "6207:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6207:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6180:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6180:6:19"
																},
																"nativeSrc": "6180:43:19",
																"nodeType": "YulFunctionCall",
																"src": "6180:43:19"
															},
															"nativeSrc": "6180:43:19",
															"nodeType": "YulExpressionStatement",
															"src": "6180:43:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5854:375:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5964:9:19",
														"nodeType": "YulTypedName",
														"src": "5964:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5975:6:19",
														"nodeType": "YulTypedName",
														"src": "5975:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5983:6:19",
														"nodeType": "YulTypedName",
														"src": "5983:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5991:6:19",
														"nodeType": "YulTypedName",
														"src": "5991:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6002:4:19",
														"nodeType": "YulTypedName",
														"src": "6002:4:19",
														"type": ""
													}
												],
												"src": "5854:375:19"
											},
											{
												"body": {
													"nativeSrc": "6363:145:19",
													"nodeType": "YulBlock",
													"src": "6363:145:19",
													"statements": [
														{
															"nativeSrc": "6373:26:19",
															"nodeType": "YulAssignment",
															"src": "6373:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6385:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6385:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6396:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6396:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6381:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6381:3:19"
																},
																"nativeSrc": "6381:18:19",
																"nodeType": "YulFunctionCall",
																"src": "6381:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6373:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6373:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6415:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6415:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6430:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6430:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6446:3:19",
																								"nodeType": "YulLiteral",
																								"src": "6446:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6451:1:19",
																								"nodeType": "YulLiteral",
																								"src": "6451:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6442:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "6442:3:19"
																						},
																						"nativeSrc": "6442:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "6442:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6455:1:19",
																						"nodeType": "YulLiteral",
																						"src": "6455:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6438:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6438:3:19"
																				},
																				"nativeSrc": "6438:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6438:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6426:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6426:3:19"
																		},
																		"nativeSrc": "6426:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6426:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6408:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6408:6:19"
																},
																"nativeSrc": "6408:51:19",
																"nodeType": "YulFunctionCall",
																"src": "6408:51:19"
															},
															"nativeSrc": "6408:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "6408:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6479:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6479:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6490:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6490:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6475:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6475:3:19"
																		},
																		"nativeSrc": "6475:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6475:18:19"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6495:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6495:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6468:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6468:6:19"
																},
																"nativeSrc": "6468:34:19",
																"nodeType": "YulFunctionCall",
																"src": "6468:34:19"
															},
															"nativeSrc": "6468:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "6468:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6234:274:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6324:9:19",
														"nodeType": "YulTypedName",
														"src": "6324:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6335:6:19",
														"nodeType": "YulTypedName",
														"src": "6335:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6343:6:19",
														"nodeType": "YulTypedName",
														"src": "6343:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6354:4:19",
														"nodeType": "YulTypedName",
														"src": "6354:4:19",
														"type": ""
													}
												],
												"src": "6234:274:19"
											},
											{
												"body": {
													"nativeSrc": "6545:95:19",
													"nodeType": "YulBlock",
													"src": "6545:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6569:3:19",
																				"nodeType": "YulLiteral",
																				"src": "6569:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6574:10:19",
																				"nodeType": "YulLiteral",
																				"src": "6574:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6565:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:19"
																		},
																		"nativeSrc": "6565:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6565:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6555:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6555:6:19"
																},
																"nativeSrc": "6555:31:19",
																"nodeType": "YulFunctionCall",
																"src": "6555:31:19"
															},
															"nativeSrc": "6555:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "6555:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6602:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6602:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6605:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6605:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6595:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6595:6:19"
																},
																"nativeSrc": "6595:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6595:15:19"
															},
															"nativeSrc": "6595:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6595:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6626:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6626:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6629:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6629:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6619:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6619:6:19"
																},
																"nativeSrc": "6619:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6619:15:19"
															},
															"nativeSrc": "6619:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6619:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6513:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6513:127:19"
											},
											{
												"body": {
													"nativeSrc": "6677:95:19",
													"nodeType": "YulBlock",
													"src": "6677:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6694:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6694:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6701:3:19",
																				"nodeType": "YulLiteral",
																				"src": "6701:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6706:10:19",
																				"nodeType": "YulLiteral",
																				"src": "6706:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6697:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6697:3:19"
																		},
																		"nativeSrc": "6697:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6697:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6687:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6687:6:19"
																},
																"nativeSrc": "6687:31:19",
																"nodeType": "YulFunctionCall",
																"src": "6687:31:19"
															},
															"nativeSrc": "6687:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "6687:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6734:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6734:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6737:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6737:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6727:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6727:6:19"
																},
																"nativeSrc": "6727:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6727:15:19"
															},
															"nativeSrc": "6727:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6727:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6758:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6758:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6761:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6761:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6751:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6751:6:19"
																},
																"nativeSrc": "6751:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6751:15:19"
															},
															"nativeSrc": "6751:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6751:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6645:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6645:127:19"
											},
											{
												"body": {
													"nativeSrc": "6824:88:19",
													"nodeType": "YulBlock",
													"src": "6824:88:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6855:22:19",
																"nodeType": "YulBlock",
																"src": "6855:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6857:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6857:16:19"
																			},
																			"nativeSrc": "6857:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6857:18:19"
																		},
																		"nativeSrc": "6857:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6857:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6840:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6840:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6851:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6851:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6847:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6847:3:19"
																		},
																		"nativeSrc": "6847:6:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6847:6:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6837:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6837:2:19"
																},
																"nativeSrc": "6837:17:19",
																"nodeType": "YulFunctionCall",
																"src": "6837:17:19"
															},
															"nativeSrc": "6834:43:19",
															"nodeType": "YulIf",
															"src": "6834:43:19"
														},
														{
															"nativeSrc": "6886:20:19",
															"nodeType": "YulAssignment",
															"src": "6886:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6897:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6897:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6904:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6904:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6893:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6893:3:19"
																},
																"nativeSrc": "6893:13:19",
																"nodeType": "YulFunctionCall",
																"src": "6893:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6886:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6886:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "6777:135:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6806:5:19",
														"nodeType": "YulTypedName",
														"src": "6806:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6816:3:19",
														"nodeType": "YulTypedName",
														"src": "6816:3:19",
														"type": ""
													}
												],
												"src": "6777:135:19"
											},
											{
												"body": {
													"nativeSrc": "7120:286:19",
													"nodeType": "YulBlock",
													"src": "7120:286:19",
													"statements": [
														{
															"nativeSrc": "7130:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7130:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7148:3:19",
																				"nodeType": "YulLiteral",
																				"src": "7148:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7153:1:19",
																				"nodeType": "YulLiteral",
																				"src": "7153:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7144:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:19"
																		},
																		"nativeSrc": "7144:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7144:11:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7157:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7157:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7140:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:19"
																},
																"nativeSrc": "7140:19:19",
																"nodeType": "YulFunctionCall",
																"src": "7140:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7134:2:19",
																	"nodeType": "YulTypedName",
																	"src": "7134:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7175:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7175:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7190:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7190:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7198:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "7198:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7186:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7186:3:19"
																		},
																		"nativeSrc": "7186:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7186:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7168:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7168:6:19"
																},
																"nativeSrc": "7168:34:19",
																"nodeType": "YulFunctionCall",
																"src": "7168:34:19"
															},
															"nativeSrc": "7168:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "7168:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7222:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7222:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7233:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7233:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7218:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7218:3:19"
																		},
																		"nativeSrc": "7218:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7218:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7242:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7242:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7250:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "7250:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7238:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7238:3:19"
																		},
																		"nativeSrc": "7238:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7238:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:19"
																},
																"nativeSrc": "7211:43:19",
																"nodeType": "YulFunctionCall",
																"src": "7211:43:19"
															},
															"nativeSrc": "7211:43:19",
															"nodeType": "YulExpressionStatement",
															"src": "7211:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7274:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7274:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7285:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7285:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7270:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7270:3:19"
																		},
																		"nativeSrc": "7270:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7270:18:19"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7290:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7290:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7263:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7263:6:19"
																},
																"nativeSrc": "7263:34:19",
																"nodeType": "YulFunctionCall",
																"src": "7263:34:19"
															},
															"nativeSrc": "7263:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "7263:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7317:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7317:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7328:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7328:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7313:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7313:3:19"
																		},
																		"nativeSrc": "7313:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7313:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7333:3:19",
																		"nodeType": "YulLiteral",
																		"src": "7333:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7306:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7306:6:19"
																},
																"nativeSrc": "7306:31:19",
																"nodeType": "YulFunctionCall",
																"src": "7306:31:19"
															},
															"nativeSrc": "7306:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "7306:31:19"
														},
														{
															"nativeSrc": "7346:54:19",
															"nodeType": "YulAssignment",
															"src": "7346:54:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7372:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7372:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7384:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7384:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7395:3:19",
																				"nodeType": "YulLiteral",
																				"src": "7395:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7380:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7380:3:19"
																		},
																		"nativeSrc": "7380:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7354:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "7354:17:19"
																},
																"nativeSrc": "7354:46:19",
																"nodeType": "YulFunctionCall",
																"src": "7354:46:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7346:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7346:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6917:489:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7065:9:19",
														"nodeType": "YulTypedName",
														"src": "7065:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7076:6:19",
														"nodeType": "YulTypedName",
														"src": "7076:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7084:6:19",
														"nodeType": "YulTypedName",
														"src": "7084:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7092:6:19",
														"nodeType": "YulTypedName",
														"src": "7092:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7100:6:19",
														"nodeType": "YulTypedName",
														"src": "7100:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7111:4:19",
														"nodeType": "YulTypedName",
														"src": "7111:4:19",
														"type": ""
													}
												],
												"src": "6917:489:19"
											},
											{
												"body": {
													"nativeSrc": "7491:169:19",
													"nodeType": "YulBlock",
													"src": "7491:169:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7537:16:19",
																"nodeType": "YulBlock",
																"src": "7537:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7546:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7546:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7549:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7549:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7539:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7539:6:19"
																			},
																			"nativeSrc": "7539:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7539:12:19"
																		},
																		"nativeSrc": "7539:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7539:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7512:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7512:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7521:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7521:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7508:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7508:3:19"
																		},
																		"nativeSrc": "7508:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7508:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7533:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7533:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7504:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7504:3:19"
																},
																"nativeSrc": "7504:32:19",
																"nodeType": "YulFunctionCall",
																"src": "7504:32:19"
															},
															"nativeSrc": "7501:52:19",
															"nodeType": "YulIf",
															"src": "7501:52:19"
														},
														{
															"nativeSrc": "7562:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7562:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7581:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7581:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7575:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7575:5:19"
																},
																"nativeSrc": "7575:16:19",
																"nodeType": "YulFunctionCall",
																"src": "7575:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7566:5:19",
																	"nodeType": "YulTypedName",
																	"src": "7566:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7624:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7624:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "7600:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "7600:23:19"
																},
																"nativeSrc": "7600:30:19",
																"nodeType": "YulFunctionCall",
																"src": "7600:30:19"
															},
															"nativeSrc": "7600:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "7600:30:19"
														},
														{
															"nativeSrc": "7639:15:19",
															"nodeType": "YulAssignment",
															"src": "7639:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "7649:5:19",
																"nodeType": "YulIdentifier",
																"src": "7649:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7639:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7639:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "7411:249:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7457:9:19",
														"nodeType": "YulTypedName",
														"src": "7457:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7468:7:19",
														"nodeType": "YulTypedName",
														"src": "7468:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7480:6:19",
														"nodeType": "YulTypedName",
														"src": "7480:6:19",
														"type": ""
													}
												],
												"src": "7411:249:19"
											},
											{
												"body": {
													"nativeSrc": "7852:309:19",
													"nodeType": "YulBlock",
													"src": "7852:309:19",
													"statements": [
														{
															"nativeSrc": "7862:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7882:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7882:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7876:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7876:5:19"
																},
																"nativeSrc": "7876:13:19",
																"nodeType": "YulFunctionCall",
																"src": "7876:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7866:6:19",
																	"nodeType": "YulTypedName",
																	"src": "7866:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7937:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7937:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7945:4:19",
																				"nodeType": "YulLiteral",
																				"src": "7945:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:19"
																		},
																		"nativeSrc": "7933:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7952:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7952:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7957:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7957:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7898:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "7898:34:19"
																},
																"nativeSrc": "7898:66:19",
																"nodeType": "YulFunctionCall",
																"src": "7898:66:19"
															},
															"nativeSrc": "7898:66:19",
															"nodeType": "YulExpressionStatement",
															"src": "7898:66:19"
														},
														{
															"nativeSrc": "7973:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7973:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7990:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7990:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7995:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7995:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7986:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7986:3:19"
																},
																"nativeSrc": "7986:16:19",
																"nodeType": "YulFunctionCall",
																"src": "7986:16:19"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "7977:5:19",
																	"nodeType": "YulTypedName",
																	"src": "7977:5:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8011:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8011:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8033:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8033:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8027:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8027:5:19"
																},
																"nativeSrc": "8027:13:19",
																"nodeType": "YulFunctionCall",
																"src": "8027:13:19"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "8015:8:19",
																	"nodeType": "YulTypedName",
																	"src": "8015:8:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8088:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8088:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8096:4:19",
																				"nodeType": "YulLiteral",
																				"src": "8096:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8084:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8084:3:19"
																		},
																		"nativeSrc": "8084:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8084:17:19"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "8103:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8103:5:19"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "8110:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "8110:8:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8049:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "8049:34:19"
																},
																"nativeSrc": "8049:70:19",
																"nodeType": "YulFunctionCall",
																"src": "8049:70:19"
															},
															"nativeSrc": "8049:70:19",
															"nodeType": "YulExpressionStatement",
															"src": "8049:70:19"
														},
														{
															"nativeSrc": "8128:27:19",
															"nodeType": "YulAssignment",
															"src": "8128:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "8139:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8139:5:19"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "8146:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "8146:8:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8135:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8135:3:19"
																},
																"nativeSrc": "8135:20:19",
																"nodeType": "YulFunctionCall",
																"src": "8135:20:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8128:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8128:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7665:496:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7820:3:19",
														"nodeType": "YulTypedName",
														"src": "7820:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7825:6:19",
														"nodeType": "YulTypedName",
														"src": "7825:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7833:6:19",
														"nodeType": "YulTypedName",
														"src": "7833:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7844:3:19",
														"nodeType": "YulTypedName",
														"src": "7844:3:19",
														"type": ""
													}
												],
												"src": "7665:496:19"
											},
											{
												"body": {
													"nativeSrc": "8222:65:19",
													"nodeType": "YulBlock",
													"src": "8222:65:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8239:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8239:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "8242:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8242:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8232:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8232:6:19"
																},
																"nativeSrc": "8232:14:19",
																"nodeType": "YulFunctionCall",
																"src": "8232:14:19"
															},
															"nativeSrc": "8232:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "8232:14:19"
														},
														{
															"nativeSrc": "8255:26:19",
															"nodeType": "YulAssignment",
															"src": "8255:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8273:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8273:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8276:4:19",
																		"nodeType": "YulLiteral",
																		"src": "8276:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "8263:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "8263:9:19"
																},
																"nativeSrc": "8263:18:19",
																"nodeType": "YulFunctionCall",
																"src": "8263:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8255:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8255:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "8166:121:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8205:3:19",
														"nodeType": "YulTypedName",
														"src": "8205:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8213:4:19",
														"nodeType": "YulTypedName",
														"src": "8213:4:19",
														"type": ""
													}
												],
												"src": "8166:121:19"
											},
											{
												"body": {
													"nativeSrc": "8373:437:19",
													"nodeType": "YulBlock",
													"src": "8373:437:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8406:398:19",
																"nodeType": "YulBlock",
																"src": "8406:398:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8427:1:19",
																					"nodeType": "YulLiteral",
																					"src": "8427:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "8430:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "8430:5:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8420:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8420:6:19"
																			},
																			"nativeSrc": "8420:16:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8420:16:19"
																		},
																		"nativeSrc": "8420:16:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8420:16:19"
																	},
																	{
																		"nativeSrc": "8449:30:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8449:30:19",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8471:1:19",
																					"nodeType": "YulLiteral",
																					"src": "8471:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8474:4:19",
																					"nodeType": "YulLiteral",
																					"src": "8474:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "8461:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:19"
																			},
																			"nativeSrc": "8461:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8461:18:19"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "8453:4:19",
																				"nodeType": "YulTypedName",
																				"src": "8453:4:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8492:57:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8492:57:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "8515:4:19",
																					"nodeType": "YulIdentifier",
																					"src": "8515:4:19"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8525:1:19",
																							"nodeType": "YulLiteral",
																							"src": "8525:1:19",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "8532:10:19",
																									"nodeType": "YulIdentifier",
																									"src": "8532:10:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8544:2:19",
																									"nodeType": "YulLiteral",
																									"src": "8544:2:19",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8528:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "8528:3:19"
																							},
																							"nativeSrc": "8528:19:19",
																							"nodeType": "YulFunctionCall",
																							"src": "8528:19:19"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "8521:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8521:3:19"
																					},
																					"nativeSrc": "8521:27:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8521:27:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8511:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8511:3:19"
																			},
																			"nativeSrc": "8511:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8511:38:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "8496:11:19",
																				"nodeType": "YulTypedName",
																				"src": "8496:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8586:23:19",
																			"nodeType": "YulBlock",
																			"src": "8586:23:19",
																			"statements": [
																				{
																					"nativeSrc": "8588:19:19",
																					"nodeType": "YulAssignment",
																					"src": "8588:19:19",
																					"value": {
																						"name": "data",
																						"nativeSrc": "8603:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "8603:4:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "8588:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "8588:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "8568:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "8568:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8580:4:19",
																					"nodeType": "YulLiteral",
																					"src": "8580:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8565:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "8565:2:19"
																			},
																			"nativeSrc": "8565:20:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8565:20:19"
																		},
																		"nativeSrc": "8562:47:19",
																		"nodeType": "YulIf",
																		"src": "8562:47:19"
																	},
																	{
																		"nativeSrc": "8622:41:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8622:41:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "8636:4:19",
																					"nodeType": "YulIdentifier",
																					"src": "8636:4:19"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8646:1:19",
																							"nodeType": "YulLiteral",
																							"src": "8646:1:19",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8653:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "8653:3:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8658:2:19",
																									"nodeType": "YulLiteral",
																									"src": "8658:2:19",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8649:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "8649:3:19"
																							},
																							"nativeSrc": "8649:12:19",
																							"nodeType": "YulFunctionCall",
																							"src": "8649:12:19"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "8642:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8642:3:19"
																					},
																					"nativeSrc": "8642:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8642:20:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8632:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8632:3:19"
																			},
																			"nativeSrc": "8632:31:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8632:31:19"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "8626:2:19",
																				"nodeType": "YulTypedName",
																				"src": "8626:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8676:24:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8676:24:19",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "8689:11:19",
																			"nodeType": "YulIdentifier",
																			"src": "8689:11:19"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "8680:5:19",
																				"nodeType": "YulTypedName",
																				"src": "8680:5:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8774:20:19",
																			"nodeType": "YulBlock",
																			"src": "8774:20:19",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "8783:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "8783:5:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8790:1:19",
																								"nodeType": "YulLiteral",
																								"src": "8790:1:19",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "8776:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "8776:6:19"
																						},
																						"nativeSrc": "8776:16:19",
																						"nodeType": "YulFunctionCall",
																						"src": "8776:16:19"
																					},
																					"nativeSrc": "8776:16:19",
																					"nodeType": "YulExpressionStatement",
																					"src": "8776:16:19"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "8724:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "8724:5:19"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "8731:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "8731:2:19"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8721:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "8721:2:19"
																			},
																			"nativeSrc": "8721:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8721:13:19"
																		},
																		"nativeSrc": "8713:81:19",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "8735:26:19",
																			"nodeType": "YulBlock",
																			"src": "8735:26:19",
																			"statements": [
																				{
																					"nativeSrc": "8737:22:19",
																					"nodeType": "YulAssignment",
																					"src": "8737:22:19",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "8750:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "8750:5:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8757:1:19",
																								"nodeType": "YulLiteral",
																								"src": "8757:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "8746:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "8746:3:19"
																						},
																						"nativeSrc": "8746:13:19",
																						"nodeType": "YulFunctionCall",
																						"src": "8746:13:19"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "8737:5:19",
																							"nodeType": "YulIdentifier",
																							"src": "8737:5:19"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "8717:3:19",
																			"nodeType": "YulBlock",
																			"src": "8717:3:19",
																			"statements": []
																		},
																		"src": "8713:81:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "8389:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8389:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8394:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8394:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8386:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8386:2:19"
																},
																"nativeSrc": "8386:11:19",
																"nodeType": "YulFunctionCall",
																"src": "8386:11:19"
															},
															"nativeSrc": "8383:421:19",
															"nodeType": "YulIf",
															"src": "8383:421:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "8292:518:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8345:5:19",
														"nodeType": "YulTypedName",
														"src": "8345:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8352:3:19",
														"nodeType": "YulTypedName",
														"src": "8352:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "8357:10:19",
														"nodeType": "YulTypedName",
														"src": "8357:10:19",
														"type": ""
													}
												],
												"src": "8292:518:19"
											},
											{
												"body": {
													"nativeSrc": "8900:81:19",
													"nodeType": "YulBlock",
													"src": "8900:81:19",
													"statements": [
														{
															"nativeSrc": "8910:65:19",
															"nodeType": "YulAssignment",
															"src": "8910:65:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8925:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "8925:4:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "8943:1:19",
																										"nodeType": "YulLiteral",
																										"src": "8943:1:19",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "8946:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "8946:3:19"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "8939:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "8939:3:19"
																								},
																								"nativeSrc": "8939:11:19",
																								"nodeType": "YulFunctionCall",
																								"src": "8939:11:19"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "8956:1:19",
																										"nodeType": "YulLiteral",
																										"src": "8956:1:19",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "8952:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "8952:3:19"
																								},
																								"nativeSrc": "8952:6:19",
																								"nodeType": "YulFunctionCall",
																								"src": "8952:6:19"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "8935:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "8935:3:19"
																						},
																						"nativeSrc": "8935:24:19",
																						"nodeType": "YulFunctionCall",
																						"src": "8935:24:19"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8931:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8931:3:19"
																				},
																				"nativeSrc": "8931:29:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8931:29:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8921:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8921:3:19"
																		},
																		"nativeSrc": "8921:40:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8921:40:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8967:1:19",
																				"nodeType": "YulLiteral",
																				"src": "8967:1:19",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8970:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8970:3:19"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8963:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8963:3:19"
																		},
																		"nativeSrc": "8963:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8963:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8918:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8918:2:19"
																},
																"nativeSrc": "8918:57:19",
																"nodeType": "YulFunctionCall",
																"src": "8918:57:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8910:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8910:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8815:166:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8877:4:19",
														"nodeType": "YulTypedName",
														"src": "8877:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8883:3:19",
														"nodeType": "YulTypedName",
														"src": "8883:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8891:4:19",
														"nodeType": "YulTypedName",
														"src": "8891:4:19",
														"type": ""
													}
												],
												"src": "8815:166:19"
											},
											{
												"body": {
													"nativeSrc": "9082:1249:19",
													"nodeType": "YulBlock",
													"src": "9082:1249:19",
													"statements": [
														{
															"nativeSrc": "9092:24:19",
															"nodeType": "YulVariableDeclaration",
															"src": "9092:24:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9112:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "9112:3:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9106:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "9106:5:19"
																},
																"nativeSrc": "9106:10:19",
																"nodeType": "YulFunctionCall",
																"src": "9106:10:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "9096:6:19",
																	"nodeType": "YulTypedName",
																	"src": "9096:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9159:22:19",
																"nodeType": "YulBlock",
																"src": "9159:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9161:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "9161:16:19"
																			},
																			"nativeSrc": "9161:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9161:18:19"
																		},
																		"nativeSrc": "9161:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9161:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9131:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9131:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9139:18:19",
																		"nodeType": "YulLiteral",
																		"src": "9139:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9128:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "9128:2:19"
																},
																"nativeSrc": "9128:30:19",
																"nodeType": "YulFunctionCall",
																"src": "9128:30:19"
															},
															"nativeSrc": "9125:56:19",
															"nodeType": "YulIf",
															"src": "9125:56:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9234:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "9234:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "9272:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "9272:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "9266:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "9266:5:19"
																				},
																				"nativeSrc": "9266:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9266:11:19"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "9240:25:19",
																			"nodeType": "YulIdentifier",
																			"src": "9240:25:19"
																		},
																		"nativeSrc": "9240:38:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9240:38:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9280:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9280:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "9190:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "9190:43:19"
																},
																"nativeSrc": "9190:97:19",
																"nodeType": "YulFunctionCall",
																"src": "9190:97:19"
															},
															"nativeSrc": "9190:97:19",
															"nodeType": "YulExpressionStatement",
															"src": "9190:97:19"
														},
														{
															"nativeSrc": "9296:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "9296:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "9313:1:19",
																"nodeType": "YulLiteral",
																"src": "9313:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9300:9:19",
																	"nodeType": "YulTypedName",
																	"src": "9300:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9323:23:19",
															"nodeType": "YulVariableDeclaration",
															"src": "9323:23:19",
															"value": {
																"kind": "number",
																"nativeSrc": "9342:4:19",
																"nodeType": "YulLiteral",
																"src": "9342:4:19",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "9327:11:19",
																	"nodeType": "YulTypedName",
																	"src": "9327:11:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9355:17:19",
															"nodeType": "YulAssignment",
															"src": "9355:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "9368:4:19",
																"nodeType": "YulLiteral",
																"src": "9368:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9355:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "9355:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9418:656:19",
																		"nodeType": "YulBlock",
																		"src": "9418:656:19",
																		"statements": [
																			{
																				"nativeSrc": "9432:35:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9432:35:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9451:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "9451:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9463:2:19",
																									"nodeType": "YulLiteral",
																									"src": "9463:2:19",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9459:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "9459:3:19"
																							},
																							"nativeSrc": "9459:7:19",
																							"nodeType": "YulFunctionCall",
																							"src": "9459:7:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9447:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "9447:3:19"
																					},
																					"nativeSrc": "9447:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9447:20:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9436:7:19",
																						"nodeType": "YulTypedName",
																						"src": "9436:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9480:49:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9480:49:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9524:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "9524:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "9494:29:19",
																						"nodeType": "YulIdentifier",
																						"src": "9494:29:19"
																					},
																					"nativeSrc": "9494:35:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9494:35:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9484:6:19",
																						"nodeType": "YulTypedName",
																						"src": "9484:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9542:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9542:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9551:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9551:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9546:1:19",
																						"nodeType": "YulTypedName",
																						"src": "9546:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9629:172:19",
																					"nodeType": "YulBlock",
																					"src": "9629:172:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9654:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "9654:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9672:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "9672:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9677:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "9677:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9668:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "9668:3:19"
																												},
																												"nativeSrc": "9668:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "9668:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9662:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "9662:5:19"
																										},
																										"nativeSrc": "9662:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "9662:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9647:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "9647:6:19"
																								},
																								"nativeSrc": "9647:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9647:42:19"
																							},
																							"nativeSrc": "9647:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "9647:42:19"
																						},
																						{
																							"nativeSrc": "9706:24:19",
																							"nodeType": "YulAssignment",
																							"src": "9706:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9720:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "9720:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9728:1:19",
																										"nodeType": "YulLiteral",
																										"src": "9728:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9716:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "9716:3:19"
																								},
																								"nativeSrc": "9716:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9716:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9706:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "9706:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9747:40:19",
																							"nodeType": "YulAssignment",
																							"src": "9747:40:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9764:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "9764:9:19"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "9775:11:19",
																										"nodeType": "YulIdentifier",
																										"src": "9775:11:19"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9760:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "9760:3:19"
																								},
																								"nativeSrc": "9760:27:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9760:27:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9747:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "9747:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9576:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "9576:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9579:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "9579:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9573:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "9573:2:19"
																					},
																					"nativeSrc": "9573:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9573:14:19"
																				},
																				"nativeSrc": "9565:236:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9588:28:19",
																					"nodeType": "YulBlock",
																					"src": "9588:28:19",
																					"statements": [
																						{
																							"nativeSrc": "9590:24:19",
																							"nodeType": "YulAssignment",
																							"src": "9590:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9599:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "9599:1:19"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "9602:11:19",
																										"nodeType": "YulIdentifier",
																										"src": "9602:11:19"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9595:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "9595:3:19"
																								},
																								"nativeSrc": "9595:19:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9595:19:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9590:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "9590:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9569:3:19",
																					"nodeType": "YulBlock",
																					"src": "9569:3:19",
																					"statements": []
																				},
																				"src": "9565:236:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "9849:166:19",
																					"nodeType": "YulBlock",
																					"src": "9849:166:19",
																					"statements": [
																						{
																							"nativeSrc": "9867:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9867:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9894:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "9894:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9899:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "9899:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9890:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "9890:3:19"
																										},
																										"nativeSrc": "9890:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "9890:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9884:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "9884:5:19"
																								},
																								"nativeSrc": "9884:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9884:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9871:9:19",
																									"nodeType": "YulTypedName",
																									"src": "9871:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9934:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "9934:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9946:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "9946:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "9973:1:19",
																																				"nodeType": "YulLiteral",
																																				"src": "9973:1:19",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "9976:6:19",
																																				"nodeType": "YulIdentifier",
																																				"src": "9976:6:19"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "9969:3:19",
																																			"nodeType": "YulIdentifier",
																																			"src": "9969:3:19"
																																		},
																																		"nativeSrc": "9969:14:19",
																																		"nodeType": "YulFunctionCall",
																																		"src": "9969:14:19"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "9985:3:19",
																																		"nodeType": "YulLiteral",
																																		"src": "9985:3:19",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "9965:3:19",
																																	"nodeType": "YulIdentifier",
																																	"src": "9965:3:19"
																																},
																																"nativeSrc": "9965:24:19",
																																"nodeType": "YulFunctionCall",
																																"src": "9965:24:19"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "9995:1:19",
																																		"nodeType": "YulLiteral",
																																		"src": "9995:1:19",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "9991:3:19",
																																	"nodeType": "YulIdentifier",
																																	"src": "9991:3:19"
																																},
																																"nativeSrc": "9991:6:19",
																																"nodeType": "YulFunctionCall",
																																"src": "9991:6:19"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "9961:3:19",
																															"nodeType": "YulIdentifier",
																															"src": "9961:3:19"
																														},
																														"nativeSrc": "9961:37:19",
																														"nodeType": "YulFunctionCall",
																														"src": "9961:37:19"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "9957:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "9957:3:19"
																												},
																												"nativeSrc": "9957:42:19",
																												"nodeType": "YulFunctionCall",
																												"src": "9957:42:19"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "9942:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "9942:3:19"
																										},
																										"nativeSrc": "9942:58:19",
																										"nodeType": "YulFunctionCall",
																										"src": "9942:58:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9927:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "9927:6:19"
																								},
																								"nativeSrc": "9927:74:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9927:74:19"
																							},
																							"nativeSrc": "9927:74:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "9927:74:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9820:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "9820:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9829:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "9829:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9817:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "9817:2:19"
																					},
																					"nativeSrc": "9817:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9817:19:19"
																				},
																				"nativeSrc": "9814:201:19",
																				"nodeType": "YulIf",
																				"src": "9814:201:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10035:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "10035:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10049:1:19",
																											"nodeType": "YulLiteral",
																											"src": "10049:1:19",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "10052:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "10052:6:19"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "10045:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "10045:3:19"
																									},
																									"nativeSrc": "10045:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "10045:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10061:1:19",
																									"nodeType": "YulLiteral",
																									"src": "10061:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10041:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "10041:3:19"
																							},
																							"nativeSrc": "10041:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "10041:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10028:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10028:6:19"
																					},
																					"nativeSrc": "10028:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "10028:36:19"
																				},
																				"nativeSrc": "10028:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "10028:36:19"
																			}
																		]
																	},
																	"nativeSrc": "9411:663:19",
																	"nodeType": "YulCase",
																	"src": "9411:663:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9416:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9416:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10091:234:19",
																		"nodeType": "YulBlock",
																		"src": "10091:234:19",
																		"statements": [
																			{
																				"nativeSrc": "10105:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10105:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10118:1:19",
																					"nodeType": "YulLiteral",
																					"src": "10118:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10109:5:19",
																						"nodeType": "YulTypedName",
																						"src": "10109:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10154:67:19",
																					"nodeType": "YulBlock",
																					"src": "10154:67:19",
																					"statements": [
																						{
																							"nativeSrc": "10172:35:19",
																							"nodeType": "YulAssignment",
																							"src": "10172:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10191:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "10191:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10196:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "10196:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10187:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "10187:3:19"
																										},
																										"nativeSrc": "10187:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "10187:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10181:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "10181:5:19"
																								},
																								"nativeSrc": "10181:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "10181:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10172:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "10172:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10135:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "10135:6:19"
																				},
																				"nativeSrc": "10132:89:19",
																				"nodeType": "YulIf",
																				"src": "10132:89:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10241:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "10241:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10300:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "10300:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10307:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "10307:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10247:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "10247:52:19"
																							},
																							"nativeSrc": "10247:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "10247:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10234:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10234:6:19"
																					},
																					"nativeSrc": "10234:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "10234:81:19"
																				},
																				"nativeSrc": "10234:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "10234:81:19"
																			}
																		]
																	},
																	"nativeSrc": "10083:242:19",
																	"nodeType": "YulCase",
																	"src": "10083:242:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9391:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9391:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9399:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9399:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9388:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "9388:2:19"
																},
																"nativeSrc": "9388:14:19",
																"nodeType": "YulFunctionCall",
																"src": "9388:14:19"
															},
															"nativeSrc": "9381:944:19",
															"nodeType": "YulSwitch",
															"src": "9381:944:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8986:1345:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9067:4:19",
														"nodeType": "YulTypedName",
														"src": "9067:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9073:3:19",
														"nodeType": "YulTypedName",
														"src": "9073:3:19",
														"type": ""
													}
												],
												"src": "8986:1345:19"
											},
											{
												"body": {
													"nativeSrc": "10385:79:19",
													"nodeType": "YulBlock",
													"src": "10385:79:19",
													"statements": [
														{
															"nativeSrc": "10395:17:19",
															"nodeType": "YulAssignment",
															"src": "10395:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10407:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10407:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10410:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10410:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10403:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10403:3:19"
																},
																"nativeSrc": "10403:9:19",
																"nodeType": "YulFunctionCall",
																"src": "10403:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10395:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10395:4:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10436:22:19",
																"nodeType": "YulBlock",
																"src": "10436:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10438:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10438:16:19"
																			},
																			"nativeSrc": "10438:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10438:18:19"
																		},
																		"nativeSrc": "10438:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10438:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10427:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "10427:4:19"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10433:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10433:1:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10424:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10424:2:19"
																},
																"nativeSrc": "10424:11:19",
																"nodeType": "YulFunctionCall",
																"src": "10424:11:19"
															},
															"nativeSrc": "10421:37:19",
															"nodeType": "YulIf",
															"src": "10421:37:19"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10336:128:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10367:1:19",
														"nodeType": "YulTypedName",
														"src": "10367:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10370:1:19",
														"nodeType": "YulTypedName",
														"src": "10370:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10376:4:19",
														"nodeType": "YulTypedName",
														"src": "10376:4:19",
														"type": ""
													}
												],
												"src": "10336:128:19"
											},
											{
												"body": {
													"nativeSrc": "10501:95:19",
													"nodeType": "YulBlock",
													"src": "10501:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10518:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10518:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10525:3:19",
																				"nodeType": "YulLiteral",
																				"src": "10525:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10530:10:19",
																				"nodeType": "YulLiteral",
																				"src": "10530:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10521:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10521:3:19"
																		},
																		"nativeSrc": "10521:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10521:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10511:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10511:6:19"
																},
																"nativeSrc": "10511:31:19",
																"nodeType": "YulFunctionCall",
																"src": "10511:31:19"
															},
															"nativeSrc": "10511:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "10511:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10558:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10558:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10561:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10561:4:19",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10551:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10551:6:19"
																},
																"nativeSrc": "10551:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10551:15:19"
															},
															"nativeSrc": "10551:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10551:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10582:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10582:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10585:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10585:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10575:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10575:6:19"
																},
																"nativeSrc": "10575:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10575:15:19"
															},
															"nativeSrc": "10575:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10575:15:19"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "10469:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "10469:127:19"
											},
											{
												"body": {
													"nativeSrc": "10633:95:19",
													"nodeType": "YulBlock",
													"src": "10633:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10650:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10650:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10657:3:19",
																				"nodeType": "YulLiteral",
																				"src": "10657:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10662:10:19",
																				"nodeType": "YulLiteral",
																				"src": "10662:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10653:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10653:3:19"
																		},
																		"nativeSrc": "10653:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10653:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10643:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10643:6:19"
																},
																"nativeSrc": "10643:31:19",
																"nodeType": "YulFunctionCall",
																"src": "10643:31:19"
															},
															"nativeSrc": "10643:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "10643:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10690:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10690:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10693:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10693:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10683:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:19"
																},
																"nativeSrc": "10683:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10683:15:19"
															},
															"nativeSrc": "10683:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10683:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10714:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10714:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10717:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10717:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10707:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10707:6:19"
																},
																"nativeSrc": "10707:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10707:15:19"
															},
															"nativeSrc": "10707:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10707:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10601:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "10601:127:19"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610127575f3560e01c806370a08231116100a9578063b88d4fde1161006e578063b88d4fde14610260578063c87b56dd14610273578063d204c45e14610286578063e985e9c514610299578063f2fde38b146102ac575f80fd5b806370a0823114610219578063715018a61461022c5780638da5cb5b1461023457806395d89b4114610245578063a22cb4651461024d575f80fd5b806323b872dd116100ef57806323b872dd146101ba5780632f745c59146101cd57806342842e0e146101e05780634f6ccce7146101f35780636352211e14610206575f80fd5b806301ffc9a71461012b57806306fdde0314610153578063081812fc14610168578063095ea7b31461019357806318160ddd146101a8575b5f80fd5b61013e61013936600461123c565b6102bf565b60405190151581526020015b60405180910390f35b61015b6102cf565b60405161014a91906112a4565b61017b6101763660046112b6565b61035e565b6040516001600160a01b03909116815260200161014a565b6101a66101a13660046112e8565b610385565b005b6008545b60405190815260200161014a565b6101a66101c8366004611310565b610394565b6101ac6101db3660046112e8565b610422565b6101a66101ee366004611310565b610485565b6101ac6102013660046112b6565b6104a4565b61017b6102143660046112b6565b6104f9565b6101ac610227366004611349565b610503565b6101a6610548565b600b546001600160a01b031661017b565b61015b61055b565b6101a661025b366004611362565b61056a565b6101a661026e366004611422565b610575565b61015b6102813660046112b6565b61058c565b6101a6610294366004611499565b610597565b61013e6102a73660046114f7565b6105c9565b6101a66102ba366004611349565b6105f6565b5f6102c982610633565b92915050565b60605f80546102dd90611528565b80601f016020809104026020016040519081016040528092919081815260200182805461030990611528565b80156103545780601f1061032b57610100808354040283529160200191610354565b820191905f5260205f20905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b5f61036882610657565b505f828152600460205260409020546001600160a01b03166102c9565b61039082823361068f565b5050565b6001600160a01b0382166103c257604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6103ce83833361069c565b9050836001600160a01b0316816001600160a01b03161461041c576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103b9565b50505050565b5f61042c83610503565b821061045d5760405163295f44f760e21b81526001600160a01b0384166004820152602481018390526044016103b9565b506001600160a01b03919091165f908152600660209081526040808320938352929052205490565b61049f83838360405180602001604052805f815250610575565b505050565b5f6104ae60085490565b82106104d65760405163295f44f760e21b81525f6004820152602481018390526044016103b9565b600882815481106104e9576104e9611560565b905f5260205f2001549050919050565b5f6102c982610657565b5f6001600160a01b03821661052d576040516322718ad960e21b81525f60048201526024016103b9565b506001600160a01b03165f9081526003602052604090205490565b6105506106b0565b6105595f6106dd565b565b6060600180546102dd90611528565b61039033838361072e565b610580848484610394565b61041c848484846107cc565b60606102c9826108f2565b61059f6106b0565b600c80545f91826105af83611588565b9190505590506105bf83826109f5565b61049f8183610a0e565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6105fe6106b0565b6001600160a01b03811661062757604051631e4fbdf760e01b81525f60048201526024016103b9565b610630816106dd565b50565b5f6001600160e01b03198216632483248360e11b14806102c957506102c982610a5d565b5f818152600260205260408120546001600160a01b0316806102c957604051637e27328960e01b8152600481018490526024016103b9565b61049f8383836001610a81565b5f6106a8848484610b85565b949350505050565b600b546001600160a01b031633146105595760405163118cdaa760e01b81523360048201526024016103b9565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03821661076057604051630b61174360e31b81526001600160a01b03831660048201526024016103b9565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561041c57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061080e9033908890879087906004016115a0565b6020604051808303815f875af1925050508015610848575060408051601f3d908101601f19168201909252610845918101906115dc565b60015b6108af573d808015610875576040519150601f19603f3d011682016040523d82523d5f602084013e61087a565b606091505b5080515f036108a757604051633250574960e11b81526001600160a01b03851660048201526024016103b9565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146108eb57604051633250574960e11b81526001600160a01b03851660048201526024016103b9565b5050505050565b60606108fd82610657565b505f828152600a60205260408120805461091690611528565b80601f016020809104026020016040519081016040528092919081815260200182805461094290611528565b801561098d5780601f106109645761010080835404028352916020019161098d565b820191905f5260205f20905b81548152906001019060200180831161097057829003601f168201915b505050505090505f6109a960408051602081019091525f815290565b905080515f036109ba575092915050565b8151156109ec5780826040516020016109d49291906115f7565b60405160208183030381529060405292505050919050565b6106a884610c50565b610390828260405180602001604052805f815250610cc1565b5f828152600a60205260409020610a258282611669565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b5f6001600160e01b0319821663780e9d6360e01b14806102c957506102c982610cd7565b8080610a9557506001600160a01b03821615155b15610b56575f610aa484610657565b90506001600160a01b03831615801590610ad05750826001600160a01b0316816001600160a01b031614155b8015610ae35750610ae181846105c9565b155b15610b0c5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103b9565b8115610b545783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f80610b92858585610d26565b90506001600160a01b038116610bee57610be984600880545f838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610c11565b846001600160a01b0316816001600160a01b031614610c1157610c118185610e18565b6001600160a01b038516610c2d57610c2884610ea5565b6106a8565b846001600160a01b0316816001600160a01b0316146106a8576106a88585610f4c565b6060610c5b82610657565b505f610c7160408051602081019091525f815290565b90505f815111610c8f5760405180602001604052805f815250610cba565b80610c9984610f9a565b604051602001610caa9291906115f7565b6040516020818303038152906040525b9392505050565b610ccb838361102a565b61049f5f8484846107cc565b5f6001600160e01b031982166380ac58cd60e01b1480610d0757506001600160e01b03198216635b5e139f60e01b145b806102c957506301ffc9a760e01b6001600160e01b03198316146102c9565b5f828152600260205260408120546001600160a01b0390811690831615610d5257610d5281848661108b565b6001600160a01b03811615610d8c57610d6d5f855f80610a81565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610dba576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f610e2283610503565b5f83815260076020526040902054909150808214610e73576001600160a01b0384165f9081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b505f9182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008545f90610eb690600190611729565b5f8381526009602052604081205460088054939450909284908110610edd57610edd611560565b905f5260205f20015490508060088381548110610efc57610efc611560565b5f918252602080832090910192909255828152600990915260408082208490558582528120556008805480610f3357610f3361173c565b600190038181905f5260205f20015f9055905550505050565b5f6001610f5884610503565b610f629190611729565b6001600160a01b039093165f908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60605f610fa6836110ef565b60010190505f8167ffffffffffffffff811115610fc557610fc561139b565b6040519080825280601f01601f191660200182016040528015610fef576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ff957509392505050565b6001600160a01b03821661105357604051633250574960e11b81525f60048201526024016103b9565b5f61105f83835f61069c565b90506001600160a01b0381161561049f576040516339e3563760e11b81525f60048201526024016103b9565b6110968383836111c6565b61049f576001600160a01b0383166110c457604051637e27328960e01b8152600481018290526024016103b9565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103b9565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061112d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611159576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061117757662386f26fc10000830492506010015b6305f5e100831061118f576305f5e100830492506008015b61271083106111a357612710830492506004015b606483106111b5576064830492506002015b600a83106102c95760010192915050565b5f6001600160a01b038316158015906106a85750826001600160a01b0316846001600160a01b031614806111ff57506111ff84846105c9565b806106a85750505f908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610630575f80fd5b5f6020828403121561124c575f80fd5b8135610cba81611227565b5f5b83811015611271578181015183820152602001611259565b50505f910152565b5f8151808452611290816020860160208601611257565b601f01601f19169290920160200192915050565b602081525f610cba6020830184611279565b5f602082840312156112c6575f80fd5b5035919050565b80356001600160a01b03811681146112e3575f80fd5b919050565b5f80604083850312156112f9575f80fd5b611302836112cd565b946020939093013593505050565b5f805f60608486031215611322575f80fd5b61132b846112cd565b9250611339602085016112cd565b9150604084013590509250925092565b5f60208284031215611359575f80fd5b610cba826112cd565b5f8060408385031215611373575f80fd5b61137c836112cd565b915060208301358015158114611390575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff808411156113c9576113c961139b565b604051601f8501601f19908116603f011681019082821181831017156113f1576113f161139b565b81604052809350858152868686011115611409575f80fd5b858560208301375f602087830101525050509392505050565b5f805f8060808587031215611435575f80fd5b61143e856112cd565b935061144c602086016112cd565b925060408501359150606085013567ffffffffffffffff81111561146e575f80fd5b8501601f8101871361147e575f80fd5b61148d878235602084016113af565b91505092959194509250565b5f80604083850312156114aa575f80fd5b6114b3836112cd565b9150602083013567ffffffffffffffff8111156114ce575f80fd5b8301601f810185136114de575f80fd5b6114ed858235602084016113af565b9150509250929050565b5f8060408385031215611508575f80fd5b611511836112cd565b915061151f602084016112cd565b90509250929050565b600181811c9082168061153c57607f821691505b60208210810361155a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f6001820161159957611599611574565b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906115d290830184611279565b9695505050505050565b5f602082840312156115ec575f80fd5b8151610cba81611227565b5f8351611608818460208801611257565b83519083019061161c818360208801611257565b01949350505050565b601f82111561049f57805f5260205f20601f840160051c8101602085101561164a5750805b601f840160051c820191505b818110156108eb575f8155600101611656565b815167ffffffffffffffff8111156116835761168361139b565b611697816116918454611528565b84611625565b602080601f8311600181146116ca575f84156116b35750858301515b5f19600386901b1c1916600185901b178555611721565b5f85815260208120601f198616915b828110156116f8578886015182559484019460019091019084016116d9565b508582101561171557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b818103818111156102c9576102c9611574565b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220520763df96be8e7c9ad4378d98f03869f9ec199a7784bbb8102b609b4e67729f64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x123C JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x548 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17B JUMP JUMPDEST PUSH2 0x15B PUSH2 0x55B JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x1362 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH0 PUSH2 0x2C9 DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2DD SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x309 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x354 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x354 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x337 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x368 DUP3 PUSH2 0x657 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x390 DUP3 DUP3 CALLER PUSH2 0x68F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3CE DUP4 DUP4 CALLER PUSH2 0x69C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x42C DUP4 PUSH2 0x503 JUMP JUMPDEST DUP3 LT PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3B9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x49F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x575 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4AE PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4E9 JUMPI PUSH2 0x4E9 PUSH2 0x1560 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C9 DUP3 PUSH2 0x657 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x550 PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x559 PUSH0 PUSH2 0x6DD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2DD SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x390 CALLER DUP4 DUP4 PUSH2 0x72E JUMP JUMPDEST PUSH2 0x580 DUP5 DUP5 DUP5 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x41C DUP5 DUP5 DUP5 DUP5 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C9 DUP3 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x59F PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x5AF DUP4 PUSH2 0x1588 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x5BF DUP4 DUP3 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x49F DUP2 DUP4 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x630 DUP2 PUSH2 0x6DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2C9 JUMPI POP PUSH2 0x2C9 DUP3 PUSH2 0xA5D JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x49F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA81 JUMP JUMPDEST PUSH0 PUSH2 0x6A8 DUP5 DUP5 DUP5 PUSH2 0xB85 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x80E SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x848 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x845 SWAP2 DUP2 ADD SWAP1 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8AF JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x87A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8FD DUP3 PUSH2 0x657 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x916 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x942 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x964 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x970 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x9A9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x9BA JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x9EC JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A8 DUP5 PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x390 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xCC1 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xA25 DUP3 DUP3 PUSH2 0x1669 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2C9 JUMPI POP PUSH2 0x2C9 DUP3 PUSH2 0xCD7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xA95 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xB56 JUMPI PUSH0 PUSH2 0xAA4 DUP5 PUSH2 0x657 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xAD0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAE3 JUMPI POP PUSH2 0xAE1 DUP2 DUP5 PUSH2 0x5C9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB54 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB92 DUP6 DUP6 DUP6 PUSH2 0xD26 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBEE JUMPI PUSH2 0xBE9 DUP5 PUSH1 0x8 DUP1 SLOAD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC11 JUMPI PUSH2 0xC11 DUP2 DUP6 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xC2D JUMPI PUSH2 0xC28 DUP5 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6A8 JUMPI PUSH2 0x6A8 DUP6 DUP6 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC5B DUP3 PUSH2 0x657 JUMP JUMPDEST POP PUSH0 PUSH2 0xC71 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xCBA JUMP JUMPDEST DUP1 PUSH2 0xC99 DUP5 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAA SWAP3 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCCB DUP4 DUP4 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x49F PUSH0 DUP5 DUP5 DUP5 PUSH2 0x7CC JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xD07 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2C9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2C9 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xD52 JUMPI PUSH2 0xD52 DUP2 DUP5 DUP7 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD8C JUMPI PUSH2 0xD6D PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xDBA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE22 DUP4 PUSH2 0x503 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0xE73 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH0 SWAP1 PUSH2 0xEB6 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0xEDD JUMPI PUSH2 0xEDD PUSH2 0x1560 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xEFC JUMPI PUSH2 0xEFC PUSH2 0x1560 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0xF33 JUMPI PUSH2 0xF33 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0xF58 DUP5 PUSH2 0x503 JUMP JUMPDEST PUSH2 0xF62 SWAP2 SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xFA6 DUP4 PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC5 JUMPI PUSH2 0xFC5 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFEF JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xFF9 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH0 PUSH2 0x105F DUP4 DUP4 PUSH0 PUSH2 0x69C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x1096 DUP4 DUP4 DUP4 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x49F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x112D JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1159 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1177 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x118F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11A3 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x11B5 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2C9 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A8 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x11FF JUMPI POP PUSH2 0x11FF DUP5 DUP5 PUSH2 0x5C9 JUMP JUMPDEST DUP1 PUSH2 0x6A8 JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x630 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCBA DUP2 PUSH2 0x1227 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1271 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1259 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1290 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xCBA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1279 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1302 DUP4 PUSH2 0x12CD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1322 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132B DUP5 PUSH2 0x12CD JUMP JUMPDEST SWAP3 POP PUSH2 0x1339 PUSH1 0x20 DUP6 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1359 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCBA DUP3 PUSH2 0x12CD JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1373 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x137C DUP4 PUSH2 0x12CD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1390 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0x13C9 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13F1 PUSH2 0x139B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1409 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1435 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x143E DUP6 PUSH2 0x12CD JUMP JUMPDEST SWAP4 POP PUSH2 0x144C PUSH1 0x20 DUP7 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x146E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x147E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148D DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x13AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14B3 DUP4 PUSH2 0x12CD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x14DE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14ED DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x13AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1508 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1511 DUP4 PUSH2 0x12CD JUMP JUMPDEST SWAP2 POP PUSH2 0x151F PUSH1 0x20 DUP5 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x153C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x155A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1599 JUMPI PUSH2 0x1599 PUSH2 0x1574 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x15D2 SWAP1 DUP4 ADD DUP5 PUSH2 0x1279 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCBA DUP2 PUSH2 0x1227 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0x1608 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1257 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x161C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1257 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x49F JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x164A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8EB JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1656 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1683 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x1697 DUP2 PUSH2 0x1691 DUP5 SLOAD PUSH2 0x1528 JUMP JUMPDEST DUP5 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x16CA JUMPI PUSH0 DUP5 ISZERO PUSH2 0x16B3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1721 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x16D9 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1715 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C9 JUMPI PUSH2 0x2C9 PUSH2 0x1574 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SMOD PUSH4 0xDF96BE8E PUSH29 0x9AD4378D98F03869F9EC199A7784BBB8102B609B4E67729F64736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "388:1296:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1427:246;;;;;;:::i;:::-;;:::i;:::-;;;565:14:19;;558:22;540:41;;528:2;513:18;1427:246:18;;;;;;;;2438:91:5;;;:::i;:::-;;;;;;;:::i;3610:158::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:19;;;1679:51;;1667:2;1652:18;3610:158:5;1533:203:19;3429:115:5;;;;;;:::i;:::-;;:::i;:::-;;2117:104:8;2196:10;:17;2117:104;;;2324:25:19;;;2312:2;2297:18;2117:104:8;2178:177:19;4279:588:5;;;;;;:::i;:::-;;:::i;1781:260:8:-;;;;;;:::i;:::-;;:::i;4938:134:5:-;;;;;;:::i;:::-;;:::i;2298:231:8:-;;;;;;:::i;:::-;;:::i;2251:120:5:-;;;;;;:::i;:::-;;:::i;1976:213::-;;;;;;:::i;:::-;;:::i;2368:103:0:-;;;:::i;1693:87::-;1766:6;;-1:-1:-1;;;;;1766:6:0;1693:87;;2598:95:5;;;:::i;3840:146::-;;;;;;:::i;:::-;;:::i;5143:211::-;;;;;;:::i;:::-;;:::i;1248:171:18:-;;;;;;:::i;:::-;;:::i;569:187::-;;;;;;:::i;:::-;;:::i;4057:155:5:-;;;;;;:::i;:::-;;:::i;2626:220:0:-;;;;;;:::i;:::-;;:::i;1427:246:18:-;1600:4;1629:36;1653:11;1629:23;:36::i;:::-;1622:43;1427:246;-1:-1:-1;;1427:246:18:o;2438:91:5:-;2483:13;2516:5;2509:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:91;:::o;3610:158::-;3677:7;3697:22;3711:7;3697:13;:22::i;:::-;-1:-1:-1;6186:7:5;6213:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6213:24:5;3739:21;6116:129;3429:115;3501:35;3510:2;3514:7;752:10:12;3501:8:5;:35::i;:::-;3429:115;;:::o;4279:588::-;-1:-1:-1;;;;;4374:16:5;;4370:89;;4414:33;;-1:-1:-1;;;4414:33:5;;4444:1;4414:33;;;1679:51:19;1652:18;;4414:33:5;;;;;;;;4370:89;4680:21;4704:34;4712:2;4716:7;752:10:12;4704:7:5;:34::i;:::-;4680:58;;4770:4;-1:-1:-1;;;;;4753:21:5;:13;-1:-1:-1;;;;;4753:21:5;;4749:111;;4798:50;;-1:-1:-1;;;4798:50:5;;-1:-1:-1;;;;;6112:15:19;;;4798:50:5;;;6094:34:19;6144:18;;;6137:34;;;6207:15;;6187:18;;;6180:43;6029:18;;4798:50:5;5854:375:19;4749:111:5;4359:508;4279:588;;;:::o;1781:260:8:-;1869:7;1902:16;1912:5;1902:9;:16::i;:::-;1893:5;:25;1889:101;;1942:36;;-1:-1:-1;;;1942:36:8;;-1:-1:-1;;;;;6426:32:19;;1942:36:8;;;6408:51:19;6475:18;;;6468:34;;;6381:18;;1942:36:8;6234:274:19;1889:101:8;-1:-1:-1;;;;;;2007:19:8;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1781:260::o;4938:134:5:-;5025:39;5042:4;5048:2;5052:7;5025:39;;;;;;;;;;;;:16;:39::i;:::-;4938:134;;;:::o;2298:231:8:-;2364:7;2397:13;2196:10;:17;;2117:104;2397:13;2388:5;:22;2384:103;;2434:41;;-1:-1:-1;;;2434:41:8;;2465:1;2434:41;;;6408:51:19;6475:18;;;6468:34;;;6381:18;;2434:41:8;6234:274:19;2384:103:8;2504:10;2515:5;2504:17;;;;;;;;:::i;:::-;;;;;;;;;2497:24;;2298:231;;;:::o;2251:120:5:-;2314:7;2341:22;2355:7;2341:13;:22::i;1976:213::-;2039:7;-1:-1:-1;;;;;2063:19:5;;2059:89;;2106:30;;-1:-1:-1;;;2106:30:5;;2133:1;2106:30;;;1679:51:19;1652:18;;2106:30:5;1533:203:19;2059:89:5;-1:-1:-1;;;;;;2165:16:5;;;;;:9;:16;;;;;;;1976:213::o;2368:103:0:-;1579:13;:11;:13::i;:::-;2433:30:::1;2460:1;2433:18;:30::i;:::-;2368:103::o:0;2598:95:5:-;2645:13;2678:7;2671:14;;;;;:::i;3840:146::-;3926:52;752:10:12;3959:8:5;3969;3926:18;:52::i;5143:211::-;5257:31;5270:4;5276:2;5280:7;5257:12;:31::i;:::-;5299:47;5322:4;5328:2;5332:7;5341:4;5299:22;:47::i;1248:171:18:-;1355:13;1388:23;1403:7;1388:14;:23::i;569:187::-;1579:13:0;:11;:13::i;:::-;664:12:18::1;:14:::0;;646:15:::1;::::0;;664:14:::1;::::0;::::1;:::i;:::-;;;;;646:32;;689:22;699:2;703:7;689:9;:22::i;:::-;722:26;735:7;744:3;722:12;:26::i;4057:155:5:-:0;-1:-1:-1;;;;;4169:25:5;;;4145:4;4169:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4057:155::o;2626:220:0:-;1579:13;:11;:13::i;:::-;-1:-1:-1;;;;;2711:22:0;::::1;2707:93;;2757:31;::::0;-1:-1:-1;;;2757:31:0;;2785:1:::1;2757:31;::::0;::::1;1679:51:19::0;1652:18;;2757:31:0::1;1533:203:19::0;2707:93:0::1;2810:28;2829:8;2810:18;:28::i;:::-;2626:220:::0;:::o;963:209:9:-;1065:4;-1:-1:-1;;;;;;1089:35:9;;-1:-1:-1;;;1089:35:9;;:75;;;1128:36;1152:11;1128:23;:36::i;16585:247:5:-;16648:7;5971:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5971:16:5;;16712:90;;16759:31;;-1:-1:-1;;;16759:31:5;;;;;2324:25:19;;;2297:18;;16759:31:5;2178:177:19;14817:122:5;14898:33;14907:2;14911:7;14920:4;14926;14898:8;:33::i;834:214:18:-;981:7;1008:32;1022:2;1026:7;1035:4;1008:13;:32::i;:::-;1001:39;834:214;-1:-1:-1;;;;834:214:18:o;1858:166:0:-;1766:6;;-1:-1:-1;;;;;1766:6:0;752:10:12;1918:23:0;1914:103;;1965:40;;-1:-1:-1;;;1965:40:0;;752:10:12;1965:40:0;;;1679:51:19;1652:18;;1965:40:0;1533:203:19;3006:191:0;3099:6;;;-1:-1:-1;;;;;3116:17:0;;;-1:-1:-1;;;;;;3116:17:0;;;;;;;3149:40;;3099:6;;;3116:17;3099:6;;3149:40;;3080:16;;3149:40;3069:128;3006:191;:::o;16024:318:5:-;-1:-1:-1;;;;;16132:22:5;;16128:93;;16178:31;;-1:-1:-1;;;16178:31:5;;-1:-1:-1;;;;;1697:32:19;;16178:31:5;;;1679:51:19;1652:18;;16178:31:5;1533:203:19;16128:93:5;-1:-1:-1;;;;;16231:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;16231:46:5;;;;;;;;;;16293:41;;540::19;;;16293::5;;513:18:19;16293:41:5;;;;;;;16024:318;;;:::o;17382:799::-;-1:-1:-1;;;;;17499:14:5;;;:18;17495:679;;17538:71;;-1:-1:-1;;;17538:71:5;;-1:-1:-1;;;;;17538:36:5;;;;;:71;;752:10:12;;17589:4:5;;17595:7;;17604:4;;17538:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17538:71:5;;;;;;;;-1:-1:-1;;17538:71:5;;;;;;;;;;;;:::i;:::-;;;17534:629;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17852:6;:13;17869:1;17852:18;17848:300;;17902:25;;-1:-1:-1;;;17902:25:5;;-1:-1:-1;;;;;1697:32:19;;17902:25:5;;;1679:51:19;1652:18;;17902:25:5;1533:203:19;17848:300:5;18098:6;18092:13;18083:6;18079:2;18075:15;18068:38;17534:629;-1:-1:-1;;;;;;17657:51:5;;-1:-1:-1;;;17657:51:5;17653:132;;17740:25;;-1:-1:-1;;;17740:25:5;;-1:-1:-1;;;;;1697:32:19;;17740:25:5;;;1679:51:19;1652:18;;17740:25:5;1533:203:19;17653:132:5;17610:190;17382:799;;;;:::o;1243:609:9:-;1316:13;1342:22;1356:7;1342:13;:22::i;:::-;-1:-1:-1;1377:23:9;1403:19;;;:10;:19;;;;;1377:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1433:18;1454:10;3350:9:5;;;;;;;;;-1:-1:-1;3350:9:5;;;3273:94;1454:10:9;1433:31;;1546:4;1540:18;1562:1;1540:23;1536:72;;-1:-1:-1;1587:9:9;1243:609;-1:-1:-1;;1243:609:9:o;1536:72::-;1709:23;;:27;1705:97;;1774:4;1780:9;1760:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1753:37;;;;1243:609;;;:::o;1705:97::-;1821:23;1836:7;1821:14;:23::i;10936:102:5:-;11004:26;11014:2;11018:7;11004:26;;;;;;;;;;;;:9;:26::i;1978:170:9:-;2070:19;;;;:10;:19;;;;;:31;2092:9;2070:19;:31;:::i;:::-;-1:-1:-1;2117:23:9;;2324:25:19;;;2117:23:9;;2312:2:19;2297:18;2117:23:9;;;;;;;1978:170;;:::o;1473:224:8:-;1575:4;-1:-1:-1;;;;;;1599:50:8;;-1:-1:-1;;;1599:50:8;;:90;;;1653:36;1677:11;1653:23;:36::i;15127:678:5:-;15289:9;:31;;;-1:-1:-1;;;;;;15302:18:5;;;;15289:31;15285:471;;;15337:13;15353:22;15367:7;15353:13;:22::i;:::-;15337:38;-1:-1:-1;;;;;;15506:18:5;;;;;;:35;;;15537:4;-1:-1:-1;;;;;15528:13:5;:5;-1:-1:-1;;;;;15528:13:5;;;15506:35;:69;;;;;15546:29;15563:5;15570:4;15546:16;:29::i;:::-;15545:30;15506:69;15502:144;;;15603:27;;-1:-1:-1;;;15603:27:5;;-1:-1:-1;;;;;1697:32:19;;15603:27:5;;;1679:51:19;1652:18;;15603:27:5;1533:203:19;15502:144:5;15666:9;15662:83;;;15721:7;15717:2;-1:-1:-1;;;;;15701:28:5;15710:5;-1:-1:-1;;;;;15701:28:5;;;;;;;;;;;15662:83;15322:434;15285:471;-1:-1:-1;;15768:24:5;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15768:29:5;-1:-1:-1;;;;;15768:29:5;;;;;;;;;;15127:678::o;2590:640:8:-;2685:7;2705:21;2729:32;2743:2;2747:7;2756:4;2729:13;:32::i;:::-;2705:56;-1:-1:-1;;;;;;2778:27:8;;2774:214;;2822:40;2854:7;4054:10;:17;;4027:24;;;;:15;:24;;;;;:44;;;4082:24;;;;;;;;;;;;3950:164;2822:40;2774:214;;;2901:2;-1:-1:-1;;;;;2884:19:8;:13;-1:-1:-1;;;;;2884:19:8;;2880:108;;2920:56;2953:13;2968:7;2920:32;:56::i;:::-;-1:-1:-1;;;;;3002:16:8;;2998:192;;3035:45;3072:7;3035:36;:45::i;:::-;2998:192;;;3119:2;-1:-1:-1;;;;;3102:19:8;:13;-1:-1:-1;;;;;3102:19:8;;3098:92;;3138:40;3166:2;3170:7;3138:27;:40::i;2764:260:5:-;2828:13;2854:22;2868:7;2854:13;:22::i;:::-;;2889:21;2913:10;3350:9;;;;;;;;;-1:-1:-1;3350:9:5;;;3273:94;2913:10;2889:34;;2965:1;2947:7;2941:21;:25;:75;;;;;;;;;;;;;;;;;2983:7;2992:18;:7;:16;:18::i;:::-;2969:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2941:75;2934:82;2764:260;-1:-1:-1;;;2764:260:5:o;11265:185::-;11360:18;11366:2;11370:7;11360:5;:18::i;:::-;11389:53;11420:1;11424:2;11428:7;11437:4;11389:22;:53::i;1607:305::-;1709:4;-1:-1:-1;;;;;;1746:40:5;;-1:-1:-1;;;1746:40:5;;:105;;-1:-1:-1;;;;;;;1803:48:5;;-1:-1:-1;;;1803:48:5;1746:105;:158;;;-1:-1:-1;;;;;;;;;;885:40:14;;;1868:36:5;785:148:14;9078:824:5;9164:7;5971:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5971:16:5;;;;9279:18;;;9275:88;;9314:37;9331:4;9337;9343:7;9314:16;:37::i;:::-;-1:-1:-1;;;;;9410:18:5;;;9406:263;;9528:48;9545:1;9549:7;9566:1;9570:5;9528:8;:48::i;:::-;-1:-1:-1;;;;;9622:15:5;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9622:20:5;;;9406:263;-1:-1:-1;;;;;9685:16:5;;;9681:111;;-1:-1:-1;;;;;9747:13:5;;;;;;:9;:13;;;;;:18;;9764:1;9747:18;;;9681:111;9804:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9804:21:5;-1:-1:-1;;;;;9804:21:5;;;;;;;;;9843:27;;9804:16;;9843:27;;;;;;;9890:4;9078:824;-1:-1:-1;;;;9078:824:5:o;4741:977:8:-;5007:22;5032:15;5042:4;5032:9;:15::i;:::-;5058:18;5079:26;;;:17;:26;;;;;;5007:40;;-1:-1:-1;5212:28:8;;;5208:328;;-1:-1:-1;;;;;5279:18:8;;5257:19;5279:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5330:30;;;;;;:44;;;5447:30;;:17;:30;;;;;:43;;;5208:328;-1:-1:-1;5632:26:8;;;;:17;:26;;;;;;;;5625:33;;;-1:-1:-1;;;;;5676:18:8;;;;;:12;:18;;;;;:34;;;;;;;5669:41;4741:977::o;6013:1079::-;6291:10;:17;6266:22;;6291:21;;6311:1;;6291:21;:::i;:::-;6323:18;6344:24;;;:15;:24;;;;;;6717:10;:26;;6266:46;;-1:-1:-1;6344:24:8;;6266:46;;6717:26;;;;;;:::i;:::-;;;;;;;;;6695:48;;6781:11;6756:10;6767;6756:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6861:28;;;:15;:28;;;;;;;:41;;;7033:24;;;;;7026:31;7068:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6084:1008;;;6013:1079;:::o;3531:218::-;3616:14;3649:1;3633:13;3643:2;3633:9;:13::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;3661:16:8;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3706:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3531:218:8:o;660:718:13:-;716:13;767:14;784:17;795:5;784:10;:17::i;:::-;804:1;784:21;767:38;;820:20;854:6;843:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;843:18:13;-1:-1:-1;820:41:13;-1:-1:-1;985:28:13;;;1001:2;985:28;1042:290;-1:-1:-1;;1074:5:13;-1:-1:-1;;;1211:2:13;1200:14;;1195:32;1074:5;1182:46;1274:2;1265:11;;;-1:-1:-1;1295:21:13;1042:290;1295:21;-1:-1:-1;1353:6:13;660:718;-1:-1:-1;;;660:718:13:o;10238:335:5:-;-1:-1:-1;;;;;10306:16:5;;10302:89;;10346:33;;-1:-1:-1;;;10346:33:5;;10376:1;10346:33;;;1679:51:19;1652:18;;10346:33:5;1533:203:19;10302:89:5;10401:21;10425:32;10433:2;10437:7;10454:1;10425:7;:32::i;:::-;10401:56;-1:-1:-1;;;;;;10472:27:5;;;10468:98;;10523:31;;-1:-1:-1;;;10523:31:5;;10551:1;10523:31;;;1679:51:19;1652:18;;10523:31:5;1533:203:19;7285:376:5;7398:38;7412:5;7419:7;7428;7398:13;:38::i;:::-;7393:261;;-1:-1:-1;;;;;7457:19:5;;7453:190;;7504:31;;-1:-1:-1;;;7504:31:5;;;;;2324:25:19;;;2297:18;;7504:31:5;2178:177:19;7453:190:5;7583:44;;-1:-1:-1;;;7583:44:5;;-1:-1:-1;;;;;6426:32:19;;7583:44:5;;;6408:51:19;6475:18;;;6468:34;;;6381:18;;7583:44:5;6234:274:19;12534:948:16;12587:7;;-1:-1:-1;;;12665:17:16;;12661:106;;-1:-1:-1;;;12703:17:16;;;-1:-1:-1;12749:2:16;12739:12;12661:106;12794:8;12785:5;:17;12781:106;;12832:8;12823:17;;;-1:-1:-1;12869:2:16;12859:12;12781:106;12914:8;12905:5;:17;12901:106;;12952:8;12943:17;;;-1:-1:-1;12989:2:16;12979:12;12901:106;13034:7;13025:5;:16;13021:103;;13071:7;13062:16;;;-1:-1:-1;13107:1:16;13097:11;13021:103;13151:7;13142:5;:16;13138:103;;13188:7;13179:16;;;-1:-1:-1;13224:1:16;13214:11;13138:103;13268:7;13259:5;:16;13255:103;;13305:7;13296:16;;;-1:-1:-1;13341:1:16;13331:11;13255:103;13385:7;13376:5;:16;13372:68;;13423:1;13413:11;13468:6;12534:948;-1:-1:-1;;12534:948:16:o;6565:276:5:-;6668:4;-1:-1:-1;;;;;6705:21:5;;;;;;:128;;;6753:7;-1:-1:-1;;;;;6744:16:5;:5;-1:-1:-1;;;;;6744:16:5;;:52;;;;6764:32;6781:5;6788:7;6764:16;:32::i;:::-;6744:88;;;-1:-1:-1;;6186:7:5;6213:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6213:24:5;;;6800:32;;;;;-1:-1:-1;6565:276:5:o;14:131:19:-;-1:-1:-1;;;;;;88:32:19;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:19;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:19;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:19:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:19;;1348:180;-1:-1:-1;1348:180:19:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:19;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:19:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:631;3432:5;3462:18;3503:2;3495:6;3492:14;3489:40;;;3509:18;;:::i;:::-;3584:2;3578:9;3552:2;3638:15;;-1:-1:-1;;3634:24:19;;;3660:2;3630:33;3626:42;3614:55;;;3684:18;;;3704:22;;;3681:46;3678:72;;;3730:18;;:::i;:::-;3770:10;3766:2;3759:22;3799:6;3790:15;;3829:6;3821;3814:22;3869:3;3860:6;3855:3;3851:16;3848:25;3845:45;;;3886:1;3883;3876:12;3845:45;3936:6;3931:3;3924:4;3916:6;3912:17;3899:44;3991:1;3984:4;3975:6;3967;3963:19;3959:30;3952:41;;;;3368:631;;;;;:::o;4004:666::-;4099:6;4107;4115;4123;4176:3;4164:9;4155:7;4151:23;4147:33;4144:53;;;4193:1;4190;4183:12;4144:53;4216:29;4235:9;4216:29;:::i;:::-;4206:39;;4264:38;4298:2;4287:9;4283:18;4264:38;:::i;:::-;4254:48;;4349:2;4338:9;4334:18;4321:32;4311:42;;4404:2;4393:9;4389:18;4376:32;4431:18;4423:6;4420:30;4417:50;;;4463:1;4460;4453:12;4417:50;4486:22;;4539:4;4531:13;;4527:27;-1:-1:-1;4517:55:19;;4568:1;4565;4558:12;4517:55;4591:73;4656:7;4651:2;4638:16;4633:2;4629;4625:11;4591:73;:::i;:::-;4581:83;;;4004:666;;;;;;;:::o;4675:524::-;4753:6;4761;4814:2;4802:9;4793:7;4789:23;4785:32;4782:52;;;4830:1;4827;4820:12;4782:52;4853:29;4872:9;4853:29;:::i;:::-;4843:39;;4933:2;4922:9;4918:18;4905:32;4960:18;4952:6;4949:30;4946:50;;;4992:1;4989;4982:12;4946:50;5015:22;;5068:4;5060:13;;5056:27;-1:-1:-1;5046:55:19;;5097:1;5094;5087:12;5046:55;5120:73;5185:7;5180:2;5167:16;5162:2;5158;5154:11;5120:73;:::i;:::-;5110:83;;;4675:524;;;;;:::o;5204:260::-;5272:6;5280;5333:2;5321:9;5312:7;5308:23;5304:32;5301:52;;;5349:1;5346;5339:12;5301:52;5372:29;5391:9;5372:29;:::i;:::-;5362:39;;5420:38;5454:2;5443:9;5439:18;5420:38;:::i;:::-;5410:48;;5204:260;;;;;:::o;5469:380::-;5548:1;5544:12;;;;5591;;;5612:61;;5666:4;5658:6;5654:17;5644:27;;5612:61;5719:2;5711:6;5708:14;5688:18;5685:38;5682:161;;5765:10;5760:3;5756:20;5753:1;5746:31;5800:4;5797:1;5790:15;5828:4;5825:1;5818:15;5682:161;;5469:380;;;:::o;6513:127::-;6574:10;6569:3;6565:20;6562:1;6555:31;6605:4;6602:1;6595:15;6629:4;6626:1;6619:15;6645:127;6706:10;6701:3;6697:20;6694:1;6687:31;6737:4;6734:1;6727:15;6761:4;6758:1;6751:15;6777:135;6816:3;6837:17;;;6834:43;;6857:18;;:::i;:::-;-1:-1:-1;6904:1:19;6893:13;;6777:135::o;6917:489::-;-1:-1:-1;;;;;7186:15:19;;;7168:34;;7238:15;;7233:2;7218:18;;7211:43;7285:2;7270:18;;7263:34;;;7333:3;7328:2;7313:18;;7306:31;;;7111:4;;7354:46;;7380:19;;7372:6;7354:46;:::i;:::-;7346:54;6917:489;-1:-1:-1;;;;;;6917:489:19:o;7411:249::-;7480:6;7533:2;7521:9;7512:7;7508:23;7504:32;7501:52;;;7549:1;7546;7539:12;7501:52;7581:9;7575:16;7600:30;7624:5;7600:30;:::i;7665:496::-;7844:3;7882:6;7876:13;7898:66;7957:6;7952:3;7945:4;7937:6;7933:17;7898:66;:::i;:::-;8027:13;;7986:16;;;;8049:70;8027:13;7986:16;8096:4;8084:17;;8049:70;:::i;:::-;8135:20;;7665:496;-1:-1:-1;;;;7665:496:19:o;8292:518::-;8394:2;8389:3;8386:11;8383:421;;;8430:5;8427:1;8420:16;8474:4;8471:1;8461:18;8544:2;8532:10;8528:19;8525:1;8521:27;8515:4;8511:38;8580:4;8568:10;8565:20;8562:47;;;-1:-1:-1;8603:4:19;8562:47;8658:2;8653:3;8649:12;8646:1;8642:20;8636:4;8632:31;8622:41;;8713:81;8731:2;8724:5;8721:13;8713:81;;;8790:1;8776:16;;8757:1;8746:13;8713:81;;8986:1345;9112:3;9106:10;9139:18;9131:6;9128:30;9125:56;;;9161:18;;:::i;:::-;9190:97;9280:6;9240:38;9272:4;9266:11;9240:38;:::i;:::-;9234:4;9190:97;:::i;:::-;9342:4;;9399:2;9388:14;;9416:1;9411:663;;;;10118:1;10135:6;10132:89;;;-1:-1:-1;10187:19:19;;;10181:26;10132:89;-1:-1:-1;;8943:1:19;8939:11;;;8935:24;8931:29;8921:40;8967:1;8963:11;;;8918:57;10234:81;;9381:944;;9411:663;8239:1;8232:14;;;8276:4;8263:18;;-1:-1:-1;;9447:20:19;;;9565:236;9579:7;9576:1;9573:14;9565:236;;;9668:19;;;9662:26;9647:42;;9760:27;;;;9728:1;9716:14;;;;9595:19;;9565:236;;;9569:3;9829:6;9820:7;9817:19;9814:201;;;9890:19;;;9884:26;-1:-1:-1;;9973:1:19;9969:14;;;9985:3;9965:24;9961:37;9957:42;9942:58;9927:74;;9814:201;;;10061:1;10052:6;10049:1;10045:14;10041:22;10035:4;10028:36;9381:944;;;;;8986:1345;;:::o;10336:128::-;10403:9;;;10424:11;;;10421:37;;;10438:18;;:::i;10469:127::-;10530:10;10525:3;10521:20;10518:1;10511:31;10561:4;10558:1;10551:15;10585:4;10582:1;10575:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1204400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "31531",
								"balanceOf(address)": "2608",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2397",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeMint(address,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26767",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "6799",
								"tokenOfOwnerByIndex(address,uint256)": "4969",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2392",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							},
							"internal": {
								"_increaseBalance(address,uint128)": "infinite",
								"_update(address,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 388,
									"end": 1684,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 502,
									"end": 561,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 502,
									"end": 561,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 502,
									"end": 561,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 502,
									"end": 561,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 502,
									"end": 561,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 502,
									"end": 561,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 561,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 502,
									"end": 561,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 502,
									"end": 561,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 502,
									"end": 561,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 502,
									"end": 561,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 547,
									"end": 557,
									"name": "CALLER",
									"source": 18
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "135E539195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "139195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1494,
									"end": 1499,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1486,
									"end": 1491,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1486,
									"end": 1499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1510,
									"end": 1517,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1520,
									"end": 1527,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1517,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1510,
									"end": 1527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1390,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2847,
									"end": 2898,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2820,
									"end": 2838,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 2820,
									"end": 2838,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1414,
									"end": 1446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1262,
									"end": 1454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3080,
									"end": 3096,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3080,
									"end": 3096,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3069,
									"end": 3197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 19,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 19,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 19,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 19
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 19,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 19,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 19,
									"value": "7"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 19,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2701,
									"end": 2904,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 2701,
									"end": 2904,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 1684,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220520763df96be8e7c9ad4378d98f03869f9ec199a7784bbb8102b609b4e67729f64736f6c63430008160033",
									".code": [
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "C87B56DD"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "D204C45E"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "tag",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "2F745C59"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "42842E0E"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "4F6CCCE7"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "1FFC9A7"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "6FDDE03"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "81812FC"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "18160DDD"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 1684,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 1427,
											"end": 1673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 1427,
											"end": 1673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2221,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2117,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2196,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2196,
											"end": 2213,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2117,
											"end": 2221,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2117,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2117,
											"end": 2221,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2221,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2117,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1781,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1781,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2298,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2298,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 1248,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "tag",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 1248,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 569,
											"end": 756,
											"name": "tag",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 756,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 569,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 569,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 569,
											"end": 756,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 569,
											"end": 756,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 569,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 569,
											"end": 756,
											"name": "tag",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 569,
											"end": 756,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 569,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 569,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1600,
											"end": 1604,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 1653,
											"end": 1664,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 1629,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1665,
											"name": "tag",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 1629,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1622,
											"end": 1665,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1427,
											"end": 1673,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2516,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3711,
											"end": 3718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3697,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3501,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4704,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4704,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4766,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6112,
											"end": 6127,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6112,
											"end": 6127,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6112,
											"end": 6127,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6094,
											"end": 6128,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6207,
											"end": 6222,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6207,
											"end": 6222,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6187,
											"end": 6205,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 6187,
											"end": 6205,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6187,
											"end": 6205,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6180,
											"end": 6223,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6029,
											"end": 6047,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 6029,
											"end": 6047,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5854,
											"end": 6229,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1781,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1912,
											"end": 1917,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1902,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1918,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1889,
											"end": 1990,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1978,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1978,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "295F44F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1942,
											"end": 1978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1942,
											"end": 1978,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 1978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1978,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6408,
											"end": 6459,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6468,
											"end": 6502,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6468,
											"end": 6502,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6468,
											"end": 6502,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1942,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6234,
											"end": 6508,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 1990,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1889,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 2041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5025,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2196,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2196,
											"end": 2213,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2196,
											"end": 2213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2117,
											"end": 2221,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2397,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2410,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2384,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2384,
											"end": 2487,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "295F44F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6408,
											"end": 6459,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6468,
											"end": 6502,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6468,
											"end": 6502,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6468,
											"end": 6502,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6234,
											"end": 6508,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2384,
											"end": 2487,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2384,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2515,
											"end": 2520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2504,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2341,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2460,
											"end": 2461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2433,
											"end": 2463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2658,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2678,
											"end": 2685,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2671,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3967,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 3977,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3926,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5257,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5322,
											"end": 5326,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5339,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5299,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "tag",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 1248,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1388,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 1403,
											"end": 1410,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1388,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 1388,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 569,
											"end": 756,
											"name": "tag",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 569,
											"end": 756,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 664,
											"end": 678,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 664,
											"end": 678,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 646,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 661,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 646,
											"end": 661,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 664,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 664,
											"end": 678,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 664,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 664,
											"end": 678,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 664,
											"end": 678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 664,
											"end": 678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 664,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 664,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 664,
											"end": 678,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 664,
											"end": 678,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 646,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 646,
											"end": 678,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 689,
											"end": 711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 699,
											"end": 701,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 703,
											"end": 710,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 689,
											"end": 698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 689,
											"end": 711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 689,
											"end": 711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 689,
											"end": 711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 722,
											"end": 748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 735,
											"end": 742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 744,
											"end": 747,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 722,
											"end": 734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 722,
											"end": 748,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2757,
											"end": 2788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2788,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2829,
											"end": 2837,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2810,
											"end": 2838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1065,
											"end": 1069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24832483"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1089,
											"end": 1164,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1128,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1152,
											"end": 1163,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1128,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16648,
											"end": 16655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5978,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 14907,
											"end": 14909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14911,
											"end": 14918,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14920,
											"end": 14924,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14926,
											"end": 14930,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14898,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 14898,
											"end": 14931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 834,
											"end": 1048,
											"name": "tag",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 834,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 981,
											"end": 988,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "211"
										},
										{
											"begin": 1022,
											"end": 1024,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1026,
											"end": 1033,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1035,
											"end": 1039,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1008,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 1008,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1008,
											"end": 1040,
											"name": "tag",
											"source": 18,
											"value": "211"
										},
										{
											"begin": 1008,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 834,
											"end": 1048,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3069,
											"end": 3197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16249,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16024,
											"end": 16342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 752,
											"end": 762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17589,
											"end": 17593,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 17589,
											"end": 17593,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17595,
											"end": 17602,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17595,
											"end": 17602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17604,
											"end": 17608,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17604,
											"end": 17608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17852,
											"end": 17858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17852,
											"end": 17865,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17869,
											"end": 17870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17852,
											"end": 17870,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18098,
											"end": 18104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18092,
											"end": 18105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 18083,
											"end": 18089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18079,
											"end": 18081,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18075,
											"end": 18090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18068,
											"end": 18106,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17610,
											"end": 17800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17382,
											"end": 18181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1329,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1342,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1342,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1364,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 1342,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1377,
											"end": 1400,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1377,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1377,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1451,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1562,
											"end": 1563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1563,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1536,
											"end": 1608,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 1596,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1608,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1536,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1732,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1736,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1705,
											"end": 1802,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 1760,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1802,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1705,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1821,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 11014,
											"end": 11016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11004,
											"end": 11030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1978,
											"end": 2148,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1978,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2080,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2092,
											"end": 2101,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2070,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH",
											"source": 9,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 2148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 2148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 2148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1697,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1473,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1599,
											"end": 1649,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1649,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "780E9D63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1599,
											"end": 1649,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1649,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1599,
											"end": 1689,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1677,
											"end": 1688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1653,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15289,
											"end": 15298,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15337,
											"end": 15350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 15367,
											"end": 15374,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15353,
											"end": 15366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 15353,
											"end": 15375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15337,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15537,
											"end": 15541,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15528,
											"end": 15533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 15563,
											"end": 15568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15570,
											"end": 15574,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15546,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 15546,
											"end": 15575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15545,
											"end": 15575,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15666,
											"end": 15675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15721,
											"end": 15728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15717,
											"end": 15719,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15710,
											"end": 15715,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15322,
											"end": 15756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15783,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 3230,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2590,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2743,
											"end": 2745,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2747,
											"end": 2754,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2729,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 2805,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2774,
											"end": 2988,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4054,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4054,
											"end": 4071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4054,
											"end": 4071,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4051,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4042,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4027,
											"end": 4051,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4027,
											"end": 4051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4051,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4051,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "PUSH",
											"source": 8,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3950,
											"end": 4114,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2774,
											"end": 2988,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2988,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2774,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2880,
											"end": 2988,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2975,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2920,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2976,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2920,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3018,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3018,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2998,
											"end": 3190,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3035,
											"end": 3080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3080,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3035,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2998,
											"end": 3190,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 3190,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2998,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3121,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3102,
											"end": 3115,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3098,
											"end": 3190,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3166,
											"end": 3168,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3177,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3138,
											"end": 3178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2854,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2962,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2966,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 2990,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2992,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 2992,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2969,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 11366,
											"end": 11368,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11370,
											"end": 11377,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11360,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 11360,
											"end": 11378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11389,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 11420,
											"end": 11421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11426,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11428,
											"end": 11435,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11437,
											"end": 11441,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11389,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 11389,
											"end": 11442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 885,
											"end": 925,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 885,
											"end": 925,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 885,
											"end": 925,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 785,
											"end": 933,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5978,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 9331,
											"end": 9335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9337,
											"end": 9341,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9350,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 9314,
											"end": 9351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 9528,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9756,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9811,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 9894,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9078,
											"end": 9902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4741,
											"end": 5718,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 4741,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5007,
											"end": 5029,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 5032,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5047,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 5032,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5105,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5079,
											"end": 5105,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5079,
											"end": 5105,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5079,
											"end": 5096,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5079,
											"end": 5105,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5105,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5079,
											"end": 5105,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5079,
											"end": 5105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5079,
											"end": 5105,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5079,
											"end": 5105,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5007,
											"end": 5047,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5007,
											"end": 5047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5212,
											"end": 5240,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5240,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5240,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5208,
											"end": 5536,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5257,
											"end": 5276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5291,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5313,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5313,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5313,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5313,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5313,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5360,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5360,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5360,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5360,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5360,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5374,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5477,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5464,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5447,
											"end": 5477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5477,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5477,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5490,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5536,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5208,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5649,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5658,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5658,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5658,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5710,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5710,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 5718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 7092,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 6013,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6301,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6288,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6291,
											"end": 6312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6312,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6311,
											"end": 6312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6291,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6312,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6291,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6359,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6312,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6312,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6368,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6312,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 6717,
											"end": 6743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6781,
											"end": 6792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 6756,
											"end": 6778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6902,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6902,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7026,
											"end": 7057,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7078,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 7068,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7084,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 7092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 7092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 7092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 7092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 7092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3531,
											"end": 3749,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3531,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3650,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3633,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3643,
											"end": 3645,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3633,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3646,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3633,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3633,
											"end": 3650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 3633,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3650,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3633,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3677,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3732,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3732,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3723,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3706,
											"end": 3732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3732,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3732,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3732,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3741,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3741,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3741,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3741,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3531,
											"end": 3749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 716,
											"end": 729,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 784,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 784,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 784,
											"end": 801,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 805,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 767,
											"end": 805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 767,
											"end": 805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 820,
											"end": 840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 860,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 843,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1228,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 660,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10376,
											"end": 10377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10401,
											"end": 10422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10437,
											"end": 10444,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 10425,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10401,
											"end": 10457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 7412,
											"end": 7417,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7426,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7398,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7398,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6408,
											"end": 6459,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6468,
											"end": 6502,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6468,
											"end": 6502,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6468,
											"end": 6502,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6234,
											"end": 6508,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12665,
											"end": 12682,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12665,
											"end": 12682,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12749,
											"end": 12751,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12794,
											"end": 12802,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12785,
											"end": 12790,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12785,
											"end": 12802,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12832,
											"end": 12840,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12869,
											"end": 12871,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12914,
											"end": 12922,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12905,
											"end": 12910,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12960,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12989,
											"end": 12991,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13034,
											"end": 13041,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 13025,
											"end": 13030,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13041,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13071,
											"end": 13078,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13107,
											"end": 13108,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13151,
											"end": 13158,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 13142,
											"end": 13147,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13142,
											"end": 13158,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13188,
											"end": 13195,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13224,
											"end": 13225,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13268,
											"end": 13275,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 13259,
											"end": 13264,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13259,
											"end": 13275,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13305,
											"end": 13312,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13341,
											"end": 13342,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13385,
											"end": 13392,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 13376,
											"end": 13381,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13376,
											"end": 13392,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13423,
											"end": 13424,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13468,
											"end": 13474,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12534,
											"end": 13482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6744,
											"end": 6749,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 6781,
											"end": 6786,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6788,
											"end": 6795,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6764,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6565,
											"end": 6841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 2593,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2360,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "tag",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2807,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 2844,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3432,
											"end": 3437,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3492,
											"end": 3506,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 3509,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3552,
											"end": 3554,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 3638,
											"end": 3653,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3638,
											"end": 3653,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3658,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3634,
											"end": 3658,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3634,
											"end": 3658,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3660,
											"end": 3662,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 3630,
											"end": 3663,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3626,
											"end": 3668,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3614,
											"end": 3669,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3614,
											"end": 3669,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3614,
											"end": 3669,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3704,
											"end": 3726,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3704,
											"end": 3726,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3704,
											"end": 3726,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 3681,
											"end": 3727,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3750,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 3678,
											"end": 3750,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 3730,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "tag",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3770,
											"end": 3780,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3759,
											"end": 3781,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3790,
											"end": 3805,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3790,
											"end": 3805,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3821,
											"end": 3827,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3814,
											"end": 3836,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3869,
											"end": 3872,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3855,
											"end": 3858,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3886,
											"end": 3887,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3884,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3876,
											"end": 3888,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "tag",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3912,
											"end": 3929,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3899,
											"end": 3943,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 3991,
											"end": 3992,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 3988,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3963,
											"end": 3982,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3959,
											"end": 3989,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "tag",
											"source": 19,
											"value": "88"
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4113,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4176,
											"end": 4179,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4155,
											"end": 4162,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4151,
											"end": 4174,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4147,
											"end": 4180,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4191,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "tag",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4216,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 4235,
											"end": 4244,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4216,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 4216,
											"end": 4245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4216,
											"end": 4245,
											"name": "tag",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 4216,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4206,
											"end": 4245,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 4206,
											"end": 4245,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4264,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 4298,
											"end": 4300,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4287,
											"end": 4296,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4283,
											"end": 4301,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4264,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 4264,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4264,
											"end": 4302,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 4264,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4254,
											"end": 4302,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4254,
											"end": 4302,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4349,
											"end": 4351,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4347,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4321,
											"end": 4353,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4393,
											"end": 4402,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4376,
											"end": 4408,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4420,
											"end": 4450,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4463,
											"end": 4464,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "tag",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4539,
											"end": 4543,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4531,
											"end": 4544,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4531,
											"end": 4544,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4527,
											"end": 4554,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4517,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 4517,
											"end": 4572,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4568,
											"end": 4569,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4566,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4517,
											"end": 4572,
											"name": "tag",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 4517,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4591,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4638,
											"end": 4654,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4633,
											"end": 4635,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4625,
											"end": 4636,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4591,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 4591,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4591,
											"end": 4664,
											"name": "tag",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 4591,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4581,
											"end": 4664,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4581,
											"end": 4664,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4581,
											"end": 4664,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "tag",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4753,
											"end": 4759,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4767,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4814,
											"end": 4816,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4802,
											"end": 4811,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4789,
											"end": 4812,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4785,
											"end": 4817,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4830,
											"end": 4831,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4828,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4820,
											"end": 4832,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 4853,
											"end": 4882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "tag",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4843,
											"end": 4882,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4843,
											"end": 4882,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4933,
											"end": 4935,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4922,
											"end": 4931,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4905,
											"end": 4937,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4952,
											"end": 4958,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4949,
											"end": 4979,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 4990,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4982,
											"end": 4994,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5015,
											"end": 5037,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5015,
											"end": 5037,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5068,
											"end": 5072,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5060,
											"end": 5073,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5060,
											"end": 5073,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5046,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 5046,
											"end": 5101,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5097,
											"end": 5098,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5095,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5087,
											"end": 5099,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5046,
											"end": 5101,
											"name": "tag",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 5046,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5120,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5167,
											"end": 5183,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5162,
											"end": 5164,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5158,
											"end": 5160,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5154,
											"end": 5165,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5120,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 5120,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5120,
											"end": 5193,
											"name": "tag",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 5120,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5110,
											"end": 5193,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5110,
											"end": 5193,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5110,
											"end": 5193,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4675,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "tag",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5272,
											"end": 5278,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5286,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5333,
											"end": 5335,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5321,
											"end": 5330,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5312,
											"end": 5319,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5308,
											"end": 5331,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5304,
											"end": 5336,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5339,
											"end": 5351,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "tag",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5372,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5372,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 5372,
											"end": 5401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5372,
											"end": 5401,
											"name": "tag",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 5372,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5362,
											"end": 5401,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5362,
											"end": 5401,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 5420,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "tag",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5410,
											"end": 5458,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5410,
											"end": 5458,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "tag",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5548,
											"end": 5549,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 5544,
											"end": 5556,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5544,
											"end": 5556,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5544,
											"end": 5556,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 5544,
											"end": 5556,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5612,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 5612,
											"end": 5673,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5666,
											"end": 5670,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 5658,
											"end": 5664,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5654,
											"end": 5671,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5612,
											"end": 5673,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 5612,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5719,
											"end": 5721,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5717,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5708,
											"end": 5722,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 5688,
											"end": 5706,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5685,
											"end": 5723,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 5753,
											"end": 5754,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5777,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5800,
											"end": 5804,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 5797,
											"end": 5798,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5828,
											"end": 5832,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5825,
											"end": 5826,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5469,
											"end": 5849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6513,
											"end": 6640,
											"name": "tag",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 6513,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 6569,
											"end": 6572,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 6565,
											"end": 6585,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6586,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6605,
											"end": 6609,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 6602,
											"end": 6603,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 6595,
											"end": 6610,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6629,
											"end": 6633,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6626,
											"end": 6627,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6619,
											"end": 6634,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6645,
											"end": 6772,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 6645,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6706,
											"end": 6716,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 6701,
											"end": 6704,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 6697,
											"end": 6717,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6718,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6737,
											"end": 6741,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 6734,
											"end": 6735,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6761,
											"end": 6765,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6758,
											"end": 6759,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6751,
											"end": 6766,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6777,
											"end": 6912,
											"name": "tag",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 6777,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6816,
											"end": 6819,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6854,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 6837,
											"end": 6854,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6837,
											"end": 6854,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6834,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 6834,
											"end": 6877,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6857,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 6857,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 6857,
											"end": 6875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6857,
											"end": 6875,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 6857,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 6893,
											"end": 6906,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6893,
											"end": 6906,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6777,
											"end": 6912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6917,
											"end": 7406,
											"name": "tag",
											"source": 19,
											"value": "228"
										},
										{
											"begin": 6917,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7186,
											"end": 7201,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7186,
											"end": 7201,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7186,
											"end": 7201,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 7168,
											"end": 7202,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7168,
											"end": 7202,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7238,
											"end": 7253,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7238,
											"end": 7253,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 7233,
											"end": 7235,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7218,
											"end": 7236,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7218,
											"end": 7236,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7211,
											"end": 7254,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7285,
											"end": 7287,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7263,
											"end": 7297,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7263,
											"end": 7297,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7263,
											"end": 7297,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7333,
											"end": 7336,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 7328,
											"end": 7330,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7306,
											"end": 7337,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7306,
											"end": 7337,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7306,
											"end": 7337,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7111,
											"end": 7115,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7115,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7354,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 7354,
											"end": 7400,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7380,
											"end": 7399,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7380,
											"end": 7399,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7354,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 7354,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7354,
											"end": 7400,
											"name": "tag",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 7354,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7346,
											"end": 7400,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 6917,
											"end": 7406,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6917,
											"end": 7406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7411,
											"end": 7660,
											"name": "tag",
											"source": 19,
											"value": "231"
										},
										{
											"begin": 7411,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7480,
											"end": 7486,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7535,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7521,
											"end": 7530,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7512,
											"end": 7519,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7508,
											"end": 7531,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7504,
											"end": 7536,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7501,
											"end": 7553,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7501,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 7501,
											"end": 7553,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7549,
											"end": 7550,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7539,
											"end": 7551,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7501,
											"end": 7553,
											"name": "tag",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 7501,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7575,
											"end": 7591,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 7624,
											"end": 7629,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 7600,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7665,
											"end": 8161,
											"name": "tag",
											"source": 19,
											"value": "256"
										},
										{
											"begin": 7665,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7844,
											"end": 7847,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7888,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7876,
											"end": 7889,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 7898,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 7957,
											"end": 7963,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7952,
											"end": 7955,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7945,
											"end": 7949,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 7933,
											"end": 7950,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7898,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 7898,
											"end": 7964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7898,
											"end": 7964,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 7898,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8027,
											"end": 8040,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8027,
											"end": 8040,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 7986,
											"end": 8002,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7986,
											"end": 8002,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7986,
											"end": 8002,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7986,
											"end": 8002,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8049,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 8027,
											"end": 8040,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7986,
											"end": 8002,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8096,
											"end": 8100,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8084,
											"end": 8101,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 8084,
											"end": 8101,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8049,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 8049,
											"end": 8119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8049,
											"end": 8119,
											"name": "tag",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 8049,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8135,
											"end": 8155,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8135,
											"end": 8155,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 7665,
											"end": 8161,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7665,
											"end": 8161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8292,
											"end": 8810,
											"name": "tag",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 8292,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8394,
											"end": 8396,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 8389,
											"end": 8392,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8386,
											"end": 8397,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8383,
											"end": 8804,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8383,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 8383,
											"end": 8804,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8430,
											"end": 8435,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8436,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8474,
											"end": 8478,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8471,
											"end": 8472,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8461,
											"end": 8479,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 8544,
											"end": 8546,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 8532,
											"end": 8542,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8528,
											"end": 8547,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8525,
											"end": 8526,
											"name": "PUSH",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 8521,
											"end": 8548,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 8515,
											"end": 8519,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8511,
											"end": 8549,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8580,
											"end": 8584,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8565,
											"end": 8585,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 8562,
											"end": 8609,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8562,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 8562,
											"end": 8609,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8607,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8562,
											"end": 8609,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 8562,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8658,
											"end": 8660,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 8653,
											"end": 8656,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8649,
											"end": 8661,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8646,
											"end": 8647,
											"name": "PUSH",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 8636,
											"end": 8640,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8632,
											"end": 8663,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8622,
											"end": 8663,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8622,
											"end": 8663,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8713,
											"end": 8794,
											"name": "tag",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 8713,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8731,
											"end": 8733,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8724,
											"end": 8729,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8721,
											"end": 8734,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 8713,
											"end": 8794,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8713,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 8713,
											"end": 8794,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8790,
											"end": 8791,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8776,
											"end": 8792,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8776,
											"end": 8792,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 8757,
											"end": 8758,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 8746,
											"end": 8759,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8713,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 8713,
											"end": 8794,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8986,
											"end": 10331,
											"name": "tag",
											"source": 19,
											"value": "264"
										},
										{
											"begin": 8986,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9112,
											"end": 9115,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9106,
											"end": 9116,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9131,
											"end": 9137,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9125,
											"end": 9181,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9125,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 9125,
											"end": 9181,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 9161,
											"end": 9179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "tag",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9190,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9240,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 9272,
											"end": 9276,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9266,
											"end": 9277,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 9240,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 9240,
											"end": 9278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9240,
											"end": 9278,
											"name": "tag",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 9240,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9190,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 9190,
											"end": 9287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9190,
											"end": 9287,
											"name": "tag",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 9190,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9342,
											"end": 9346,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9342,
											"end": 9346,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9399,
											"end": 9401,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 9388,
											"end": 9402,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9388,
											"end": 9402,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9416,
											"end": 9417,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 9411,
											"end": 10074,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 10074,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 9411,
											"end": 10074,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10132,
											"end": 10221,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10132,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 10132,
											"end": 10221,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10187,
											"end": 10206,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10187,
											"end": 10206,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10187,
											"end": 10206,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10181,
											"end": 10207,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 10132,
											"end": 10221,
											"name": "tag",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 10132,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8943,
											"end": 8944,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 8939,
											"end": 8950,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8939,
											"end": 8950,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8939,
											"end": 8950,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 8935,
											"end": 8959,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 8931,
											"end": 8960,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 8921,
											"end": 8961,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 8967,
											"end": 8968,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 8963,
											"end": 8974,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8963,
											"end": 8974,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8963,
											"end": 8974,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 8918,
											"end": 8975,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 10234,
											"end": 10315,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10234,
											"end": 10315,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 9381,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 9381,
											"end": 10325,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 10074,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 9411,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8239,
											"end": 8240,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8246,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8232,
											"end": 8246,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8232,
											"end": 8246,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8276,
											"end": 8280,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9801,
											"name": "tag",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 9565,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9579,
											"end": 9586,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9576,
											"end": 9577,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9573,
											"end": 9587,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9801,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 9565,
											"end": 9801,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9668,
											"end": 9687,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9668,
											"end": 9687,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9668,
											"end": 9687,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9662,
											"end": 9688,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9647,
											"end": 9689,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9647,
											"end": 9689,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 9760,
											"end": 9787,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 9760,
											"end": 9787,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9760,
											"end": 9787,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9760,
											"end": 9787,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 9728,
											"end": 9729,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 9716,
											"end": 9730,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9716,
											"end": 9730,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9716,
											"end": 9730,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9716,
											"end": 9730,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9595,
											"end": 9614,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9595,
											"end": 9614,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 9565,
											"end": 9801,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9801,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 9565,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9569,
											"end": 9572,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9829,
											"end": 9835,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9820,
											"end": 9827,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9817,
											"end": 9836,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 9814,
											"end": 10015,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9814,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 9814,
											"end": 10015,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9890,
											"end": 9909,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9890,
											"end": 9909,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9890,
											"end": 9909,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9884,
											"end": 9910,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9973,
											"end": 9974,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 9969,
											"end": 9983,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9969,
											"end": 9983,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9969,
											"end": 9983,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "PUSH",
											"source": 19,
											"value": "F8"
										},
										{
											"begin": 9965,
											"end": 9989,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9961,
											"end": 9998,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 9957,
											"end": 9999,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 9942,
											"end": 10000,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9927,
											"end": 10001,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9927,
											"end": 10001,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 9814,
											"end": 10015,
											"name": "tag",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 9814,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9814,
											"end": 10015,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9814,
											"end": 10015,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10061,
											"end": 10062,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 10052,
											"end": 10058,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10049,
											"end": 10050,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 10045,
											"end": 10059,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 10041,
											"end": 10063,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10035,
											"end": 10039,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 9381,
											"end": 10325,
											"name": "tag",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 9381,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9381,
											"end": 10325,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9381,
											"end": 10325,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9381,
											"end": 10325,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9381,
											"end": 10325,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8986,
											"end": 10331,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8986,
											"end": 10331,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8986,
											"end": 10331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10336,
											"end": 10464,
											"name": "tag",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 10336,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10403,
											"end": 10412,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10403,
											"end": 10412,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10403,
											"end": 10412,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 10424,
											"end": 10435,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10424,
											"end": 10435,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10424,
											"end": 10435,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10421,
											"end": 10458,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10421,
											"end": 10458,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "107"
										},
										{
											"begin": 10421,
											"end": 10458,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "107"
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 10438,
											"end": 10456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10469,
											"end": 10596,
											"name": "tag",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 10469,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10530,
											"end": 10540,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 10525,
											"end": 10528,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 10521,
											"end": 10541,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 10518,
											"end": 10519,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10542,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10561,
											"end": 10565,
											"name": "PUSH",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 10558,
											"end": 10559,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 10551,
											"end": 10566,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10585,
											"end": 10589,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10582,
											"end": 10583,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10575,
											"end": 10590,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/MyNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address,string)": "d204c45e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MyNFT.sol\":\"MyNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x4764a3cb550846ec714888e19407f05c8d3cf56181d4a090f451beb8064b1a41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0dfe15ab99b1ec4aec1d0c90dc077b27aab5a1a0d305c6c641698100fc27c64\",\"dweb:/ipfs/QmWWsr2frKgKhNMJwdRXBe7vgRHCzSNTLyGMxbbc6Fuz81\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x7b29b3947e0a86bf596aa408b1395110a9a7fa31213dc928cf5ec927edff2585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d59b31e9c356988b8eb7bf63a4ea264f583dd0a62b86a163632c40bbe3aa7050\",\"dweb:/ipfs/QmZBiYy7icKr5Lucb8yxujYfg3AMHW2zLD7n4JFYNVSinV\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xdac767d30fc5b3ab8cb3238a18a86a6738f02ec8fad07b1cd74493c7212d3141\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5142e04f3b754c3c24795000e10d90dbd5565499f1b019de9e9f6a847a219a0\",\"dweb:/ipfs/QmS7VJ4LxS4F4okSxSu93ELv6irVCGfQDPDH3ENUz2rGYF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x384ea86fc88a1e6e9052fb711368d07a6041e189f2829e61ec4aed4d11d6d710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://477a233394c0cb62162fcfa7395093b4dacd7d85f47eeecfca454ac84ba97d65\",\"dweb:/ipfs/QmYkcHnYNX9TWmw8kAaWG5krnQ4wHGsrrVkPRV2aG2fMnb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xea2ce2276d96ef81067a452a0c27f31bee2d3c47de47041fda9931c10e825523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29793c6d491ee3bf35f86ed717126830efc0309ac9d10f6c3059f4da0355fce7\",\"dweb:/ipfs/QmUZV6nnQEXoiBDCgYSyPhSqLjAFJsrzghX5aqKWCrmxtH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xc290092fcf0ab4513863ab8bf9e335020d296018f6ef5ee1acc5b0213b3aa00a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19de29536b48c1ac3f45705a3fccf2bfab999e46428b5825247c11c228610a9b\",\"dweb:/ipfs/Qmf8cUC2oUzdDwFGnxjMzCWGZV7Q4DQXuVgPb9DCAZRxyf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]},\"src/MyNFT.sol\":{\"keccak256\":\"0xbb59001d64806e4e29de33e75169315305ef30226a4fa89c8742158a7305fe73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9133e09bbd9398d60d6213ee487ea4f38e20fea933bce4b023fc88ad4bc5001d\",\"dweb:/ipfs/QmXMevYZPiXEX27KqVPYgiTPbbtiNsNvQKkJ48dVrsWF3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1479,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1483,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1486,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1490,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1872,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 8,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 3526,
								"contract": "src/MyNFT.sol:MyNFT",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2060
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:0"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 2061,
							"src": "133:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2060,
										"src": "141:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"711:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2060,
										"src": "711:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "711:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "182:498:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								2060
							],
							"name": "Ownable",
							"nameLocation": "700:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "742:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "726:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "757:87:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "856:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:17:0"
									},
									"src": "850:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "908:84:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1004:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:15:0"
									},
									"src": "998:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1053:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1090:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1074:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1121:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1105:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:57:0"
									},
									"src": "1047:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1296:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1311:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1335:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1327:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1327:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1311:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1307:97:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1339:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1389:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1381:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1381:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1381:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1361:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1361:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1354:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1433:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1414:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1414:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1139:117:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1282:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1274:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:0"
									},
									"scope": 147,
									"src": "1262:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1568:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1579:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1579:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1603:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1462:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1556:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:0"
									},
									"src": "1547:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1748:32:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1766:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1759:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1620:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1702:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1739:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:9:0"
									},
									"scope": 147,
									"src": "1693:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1903:121:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1918:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1918:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "1929:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1929:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1918:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1914:103:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1943:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "1992:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1992:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1965:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1965:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1958:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1788:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1867:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:0:0"
									},
									"scope": 147,
									"src": "1858:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2422:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2452:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2452:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2452:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2433:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2433:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2433:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2032:330:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2412:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2412:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2412:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2377:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2394:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2422:0:0"
									},
									"scope": 147,
									"src": "2368:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2696:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2731:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2723:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2723:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2711:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2707:93:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2735:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2785:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2777:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2777:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2777:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2757:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2757:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2750:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2829:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2810:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2810:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2479:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2686:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2686:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2686:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2635:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2696:0:0"
									},
									"scope": 147,
									"src": "2626:220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3069:128:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3088:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "3080:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3080:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3099:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3080:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3116:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3125:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3116:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3116:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3170:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3180:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3149:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3149:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3144:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2854:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3015:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3042:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3034:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3033:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3069:0:0"
									},
									"scope": 147,
									"src": "3006:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "682:2518:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "105:3097:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2351
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2352,
							"src": "137:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2351,
										"src": "145:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "109:89:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2351
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "138:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2351,
										"src": "146:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "178:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "186:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2351,
										"src": "288:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"297:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "297:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "220:46:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								2351
							],
							"name": "IERC4906",
							"nameLocation": "276:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "312:203:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "527:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "550:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "542:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "541:18:2"
									},
									"src": "521:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "568:214:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "794:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "822:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "814:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "844:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "836:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:42:2"
									},
									"src": "788:68:2"
								}
							],
							"scope": 176,
							"src": "266:593:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "110:751:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "137:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "145:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "109:82:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "142:142:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "296:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "316:314:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "642:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "675:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "667:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "691:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "683:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "708:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "700:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:49:4"
									},
									"src": "636:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "724:155:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "891:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "910:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:4"
									},
									"src": "885:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "934:162:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1108:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1137:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1129:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:18:4"
									},
									"src": "1102:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1155:350:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1517:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1544:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1569:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1561:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1588:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1580:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:52:4"
									},
									"src": "1511:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1604:177:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1793:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1822:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1814:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:18:4"
									},
									"src": "1787:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1840:198:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2050:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2070:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:17:4"
									},
									"src": "2044:43:4"
								}
							],
							"scope": 317,
							"src": "286:1804:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2094:144:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2250:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2271:223:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2506:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2533:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2525:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:4"
									},
									"src": "2500:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2548:135:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2718:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:4"
									},
									"src": "2689:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2743:294:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3049:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3078:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3070:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3094:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3086:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3111:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3103:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:48:4"
									},
									"src": "3043:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3126:155:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3293:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3313:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:16:4"
									},
									"src": "3287:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3337:162:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3511:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3541:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3533:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:18:4"
									},
									"src": "3505:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3559:251:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3822:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3857:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3849:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:35:4"
									},
									"src": "3816:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3892:177:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4081:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4111:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4103:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:4"
									},
									"src": "4075:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4129:200:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4341:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4371:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4363:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:18:4"
									},
									"src": "4335:46:4"
								}
							],
							"scope": 317,
							"src": "2240:2144:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4388:146:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4546:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4568:367:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4947:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4982:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4974:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4998:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4990:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5015:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5007:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:66:4"
									},
									"src": "4941:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "5048:155:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5215:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5236:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:16:4"
									},
									"src": "5209:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5260:162:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5434:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5465:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5457:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:4"
									},
									"src": "5428:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5483:260:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5755:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5784:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5810:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5802:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:33:4"
									},
									"src": "5749:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5825:177:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6014:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6045:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6037:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:4"
									},
									"src": "6008:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "6063:200:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6275:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6306:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6298:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:18:4"
									},
									"src": "6269:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6324:285:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6621:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6655:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6647:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6674:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6666:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:41:4"
									},
									"src": "6615:73:4"
								}
							],
							"scope": 317,
							"src": "4536:2155:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "114:6579:4"
				},
				"id": 4
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							2060
						],
						"ERC165": [
							2339
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							2351
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							2030
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							2315
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:5"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "138:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "146:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "178:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "186:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 2031,
							"src": "234:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2030,
										"src": "242:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 2061,
							"src": "301:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2060,
										"src": "309:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 2316,
							"src": "351:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2315,
										"src": "359:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 2340,
							"src": "401:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2351,
										"src": "409:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2339,
										"src": "418:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "472:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "480:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"822:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2060,
										"src": "822:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"831:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2339,
										"src": "831:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "831:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"839:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "839:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "839:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"848:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2030,
										"src": "848:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "848:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"865:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "865:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "865:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "542:250:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								2030,
								1442,
								2339,
								2351,
								2060
							],
							"name": "ERC721",
							"nameLocation": "812:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"892:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2315,
										"src": "892:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "886:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "904:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "954:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "939:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "939:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1004:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "989:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "989:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1064:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1020:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1036:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1028:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1020:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1122:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1080:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1096:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1088:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1080:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1184:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1140:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1156:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1148:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1140:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1167:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1276:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1208:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1224:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1216:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1208:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1249:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1241:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1233:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1261:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1475:60:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1486:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1494:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1486:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1486:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1510:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1520:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1510:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1510:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1303:110:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1445:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1431:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1431:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1466:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1452:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1452:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:0:5"
									},
									"scope": 1325,
									"src": "1419:116:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2338,
										2350
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1715:197:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1746:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1766:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1761:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1761:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1775:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1761:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1746:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1803:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2030,
																			"src": "1823:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2030_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2030_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1818:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1818:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2030",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1840:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1818:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1803:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1746:105:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1892:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1868:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1874:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2338,
															"src": "1868:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1868:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1746:158:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1726:178:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1543:58:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1616:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1683:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2339,
												"src": "1683:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1691:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2351,
												"src": "1691:7:5"
											}
										],
										"src": "1674:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1641:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1634:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1709:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1709:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:6:5"
									},
									"scope": 1325,
									"src": "1607:305:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2048:141:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2063:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2080:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2072:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2072:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2072:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2063:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2059:89:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2084:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2133:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2125:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2125:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2125:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2106:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2099:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2165:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2175:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2165:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2158:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1920:50:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1985:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2003:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1995:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "2039:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:9:5"
									},
									"scope": 1325,
									"src": "1976:213:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2323:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2355:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2341:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2334:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2197:48:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2260:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2276:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2268:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2314:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:9:5"
									},
									"scope": 1325,
									"src": "2251:120:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2015
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2498:31:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2516:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2509:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2379:53:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2447:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2483:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2483:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:15:5"
									},
									"scope": 1325,
									"src": "2438:91:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2021
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2660:33:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2678:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2671:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2537:55:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2607:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2645:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2645:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:15:5"
									},
									"scope": 1325,
									"src": "2598:95:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2029
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2843:181:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2868:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2854:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2854:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2854:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2903:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2889:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2889:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2913:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2913:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2947:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2941:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2941:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2941:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2956:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2941:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2965:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2941:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3014:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2941:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2983:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2992:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3000:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2128,
																	"src": "2992:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2992:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2969:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2969:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2976:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2969:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2969:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2934:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2701:57:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2773:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2790:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2782:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2828:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2828:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:15:5"
									},
									"scope": 1325,
									"src": "2764:260:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3339:28:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3357:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3350:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "3032:235:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3282:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3290:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3324:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3324:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:15:5"
									},
									"scope": 1325,
									"src": "3273:94:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3490:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3510:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "3523:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3501:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3501:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3375:48:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3438:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3454:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3446:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3466:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3458:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:0:5"
									},
									"scope": 1325,
									"src": "3429:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3686:82:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3711:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3697:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3697:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3752:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3739:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3732:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3552:52:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3619:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3639:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3631:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3677:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3676:9:5"
									},
									"scope": 1325,
									"src": "3610:158:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3915:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "3945:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3945:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3959:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3969:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3926:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3926:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3776:58:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3849:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3890:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3885:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3885:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3866:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3915:0:5"
									},
									"scope": 1325,
									"src": "3840:146:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4151:61:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4169:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4188:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4169:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4195:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4169:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4162:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3994:57:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4066:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4091:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4083:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4106:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4098:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4145:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4145:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:6:5"
									},
									"scope": 1325,
									"src": "4057:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4359:508:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4374:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4388:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4380:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4380:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4380:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4374:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4370:89:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4392:67:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4444:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4436:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4436:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4436:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4414:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4414:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4407:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4688:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4680:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4680:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4712:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4716:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "4725:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4725:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4704:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4680:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4753:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4770:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4753:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4749:111:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4776:84:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4819:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4825:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4834:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4798:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4798:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4791:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4220:53:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4288:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4309:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4301:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4323:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4315:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4300:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4359:0:5"
									},
									"scope": 1325,
									"src": "4279:588:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "5014:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "5042:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5048:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5052:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5061:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "5025:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5025:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "5025:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4875:57:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4947:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4972:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4964:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4986:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4978:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4998:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4990:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5014:0:5"
									},
									"scope": 1325,
									"src": "4938:134:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5246:108:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5270:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5276:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5280:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5257:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5257:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5257:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5322:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5328:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5341:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5299:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5299:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "5080:57:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5152:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5177:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5169:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5191:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5183:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5225:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5212:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5212:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:5"
									},
									"scope": 1325,
									"src": "5143:211:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5953:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5971:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5979:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5971:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5964:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5362:510:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5887:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5904:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5896:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5944:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5943:9:5"
									},
									"scope": 1325,
									"src": "5878:117:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6195:50:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6213:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6229:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6213:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6206:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "6003:107:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "6125:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6138:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6137:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6186:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:9:5"
									},
									"scope": 1325,
									"src": "6116:129:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6674:167:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6705:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6724:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6716:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6716:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6716:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6705:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6744:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6753:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6744:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6781:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6788:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6764:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6764:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6744:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6813:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6800:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6800:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6825:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6800:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6744:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6743:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6705:128:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6685:148:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6253:306:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6574:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6596:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6588:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6611:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6603:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6628:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6620:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6587:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6668:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:5"
									},
									"scope": 1325,
									"src": "6565:276:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7382:279:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7397:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7412:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7419:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7428:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7398:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7398:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7393:261:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7438:216:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7457:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7474:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7466:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7466:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7466:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7457:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7557:86:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7610:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7619:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7583:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7583:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7576:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7453:190:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7478:73:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7527:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7504:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7504:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7497:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6849:430:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7294:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7319:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7311:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7311:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7351:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7343:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7310:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7382:0:5"
									},
									"scope": 1325,
									"src": "7285:376:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8390:82:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8401:64:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8426:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8436:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8426:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8448:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8426:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8426:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7669:640:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8324:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8349:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8341:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8366:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8358:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:0:5"
									},
									"scope": 1325,
									"src": "8315:157:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "9173:729:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "9192:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "9184:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9184:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9208:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "9199:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9199:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9184:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9279:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9295:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9287:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9287:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9287:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9279:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9275:88:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9299:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9331:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9337:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9343:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9314:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9314:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9314:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9410:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9426:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9418:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9418:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9410:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9406:263:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9430:239:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9545:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9537:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9537:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9537:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9549:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9566:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9558:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9558:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9558:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9570:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9528:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9528:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9528:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9593:65:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9622:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9632:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9622:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9641:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9622:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9622:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9685:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9699:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9691:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9691:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9691:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9685:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9681:111:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9703:89:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9718:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9747:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9757:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9747:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9764:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9747:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9747:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9804:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9812:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9804:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9823:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9804:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9804:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9852:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9858:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9862:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9843:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9843:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9838:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9890:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9883:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8480:592:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "9087:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9103:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "9095:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9095:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9115:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "9107:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "9132:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "9124:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9124:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9094:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "9164:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9164:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9163:9:5"
									},
									"scope": 1325,
									"src": "9078:824:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10291:282:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10306:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10320:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10312:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10312:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10312:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10306:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10302:89:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10324:67:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10376:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10368:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10368:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10368:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10346:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10346:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10339:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10409:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10401:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10401:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10433:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10437:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10454:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10446:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10446:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10446:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10425:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10425:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10401:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10472:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10497:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10489:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10489:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10489:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10472:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10468:98:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10501:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10543:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10543:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10543:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10523:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10523:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10516:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9910:322:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10247:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10261:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "10253:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10253:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10273:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "10265:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10252:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10291:0:5"
									},
									"scope": 1325,
									"src": "10238:335:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10993:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "11014:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "11018:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11027:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "11004:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11004:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "11004:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10581:349:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10945:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10963:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10955:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10955:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10975:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10967:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10954:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10993:0:5"
									},
									"scope": 1325,
									"src": "10936:102:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11349:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11366:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11370:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11360:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11360:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11360:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11420:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11412:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11412:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11412:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11424:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11428:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11437:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11389:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11389:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11389:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "11046:213:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11274:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11292:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11284:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11304:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11296:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11296:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11326:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11313:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11313:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11283:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11349:0:5"
									},
									"scope": 1325,
									"src": "11265:185:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11830:191:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11849:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11841:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11841:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11881:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11873:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11873:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11873:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11885:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11902:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11894:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11894:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11894:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11865:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11865:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11841:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11920:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11945:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11937:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11937:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11937:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11920:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11916:98:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11949:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11994:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11971:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11971:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11964:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11458:325:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11798:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11812:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11804:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11804:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11803:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11830:0:5"
									},
									"scope": 1325,
									"src": "11789:232:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12429:399:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12444:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12458:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12450:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12450:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12444:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12440:89:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12462:67:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12514:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12506:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12506:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12506:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12484:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12484:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12477:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12547:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12539:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12539:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12571:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12575:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12592:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12584:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12584:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12584:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12563:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12563:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12539:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12635:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12627:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12627:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12627:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12610:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12714:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12731:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12714:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12710:111:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12737:84:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12780:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12786:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12795:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12759:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12759:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12752:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12606:215:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12639:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12684:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12661:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12661:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12654:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "12029:323:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12367:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12385:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12377:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12377:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12399:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12391:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12411:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12403:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12403:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12376:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12429:0:5"
									},
									"scope": 1325,
									"src": "12358:470:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13857:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13882:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13888:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13892:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13901:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13868:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13868:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13868:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12836:940:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13791:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13813:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13805:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13805:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13827:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13819:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13839:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13831:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13804:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13857:0:5"
									},
									"scope": 1325,
									"src": "13782:130:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "14257:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "14278:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "14284:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "14288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "14268:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "14268:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "14330:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "14336:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "14340:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "14349:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "14307:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14307:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "14307:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13920:229:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14164:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14186:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "14178:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14200:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "14192:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14212:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "14204:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14234:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "14221:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14221:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14177:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14257:0:5"
									},
									"scope": 1325,
									"src": "14155:207:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14887:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14907:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14911:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14920:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14926:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14898:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14898:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14898:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "14370:441:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14826:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14835:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14855:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14847:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14847:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14872:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14864:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14864:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14834:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14887:0:5"
									},
									"scope": 1325,
									"src": "14817:122:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "15221:584:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "15289:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "15302:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15318:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15310:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15310:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15310:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15302:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15289:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "15285:471:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "15322:434:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15345:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "15337:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15337:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "15367:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "15353:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15353:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15337:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15506:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15522:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15514:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15514:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15514:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15506:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15528:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15537:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15528:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15506:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15545:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15563:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15570:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15546:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15546:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15506:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15502:144:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15577:69:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15625:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15603:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15603:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15596:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15666:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15662:83:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15677:68:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15710:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15717:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15721:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15701:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15701:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15696:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15768:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15784:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15768:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15795:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15768:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15768:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14947:174:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15136:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15153:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "15145:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15145:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15165:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "15157:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "15182:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "15174:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15174:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "15193:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "15188:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15188:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15144:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15221:0:5"
									},
									"scope": 1325,
									"src": "15127:678:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "16117:225:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "16132:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16152:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16144:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16144:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16144:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16132:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "16128:93:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "16156:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "16200:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "16178:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16178:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "16171:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "16231:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "16250:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16231:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "16257:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16231:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "16269:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16231:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "16231:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "16308:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "16315:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "16325:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "16293:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16293:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "16288:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15813:205:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "16033:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16060:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "16052:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16052:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16075:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "16067:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16067:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16090:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "16085:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16085:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16051:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16117:0:5"
									},
									"scope": 1325,
									"src": "16024:318:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16657:175:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16676:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16668:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16668:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16693:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16684:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16684:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16668:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16716:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16725:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16725:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16725:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16716:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16712:90:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16737:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16782:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16759:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16759:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16752:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16819:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16812:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "16350:229:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16594:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16616:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16608:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16608:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16607:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16648:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16648:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16647:9:5"
									},
									"scope": 1325,
									"src": "16585:247:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17484:697:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17499:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17502:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17499:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17507:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17499:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17516:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17499:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17495:679:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17519:655:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17634:166:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17657:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17667:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17683:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17667:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17700:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17667:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17657:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17653:132:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17710:75:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17762:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17740:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17740:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17733:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17626:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17619:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17619:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17618:15:5"
																	},
																	"src": "17610:190:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17829:334:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17852:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17859:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17852:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17869:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17852:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17953:195:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "18041:88:5",
																								"nodeType": "YulBlock",
																								"src": "18041:88:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "18079:2:5",
																															"nodeType": "YulLiteral",
																															"src": "18079:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "18083:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "18083:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "18075:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "18075:3:5"
																													},
																													"nativeSrc": "18075:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "18075:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "18098:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "18098:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "18092:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "18092:5:5"
																													},
																													"nativeSrc": "18092:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "18092:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "18068:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "18068:6:5"
																											},
																											"nativeSrc": "18068:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "18068:38:5"
																										},
																										"nativeSrc": "18068:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "18068:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18083:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18098:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "18032:97:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17848:300:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17872:75:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17924:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17902:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17902:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17895:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17821:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17808:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17808:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17807:21:5"
																	},
																	"src": "17801:362:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "17575:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17575:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17589:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17595:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17604:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17554:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17538:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17538:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17558:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17538:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17538:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17534:629:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16840:536:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "17391:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "17414:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17436:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "17428:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17448:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "17440:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17440:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17470:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "17457:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17457:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17413:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17484:0:5"
									},
									"scope": 1325,
									"src": "17382:799:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "794:17390:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "110:18076:5"
				},
				"id": 5
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2351
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:6"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 2352,
							"src": "139:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2351,
										"src": "147:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"297:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2351,
										"src": "297:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "205:69:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								2351
							],
							"name": "IERC721",
							"nameLocation": "286:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "312:90:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "414:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "439:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "423:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "461:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "445:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "481:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "465:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:67:6"
									},
									"src": "408:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "498:96:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "606:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "631:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "615:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "654:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "638:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "680:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "664:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:74:6"
									},
									"src": "600:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "697:119:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "828:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "859:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "843:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "882:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "866:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "897:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "892:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "892:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:64:6"
									},
									"src": "822:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "915:78:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1026:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1018:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1064:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1056:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:17:6"
									},
									"scope": 1442,
									"src": "999:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1081:137:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1233:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1249:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1241:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1289:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1281:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:15:6"
									},
									"scope": 1442,
									"src": "1224:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1304:578:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1897:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1922:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1914:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1936:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1928:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1948:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1940:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1972:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1957:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1957:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:0:6"
									},
									"scope": 1442,
									"src": "1888:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1995:720:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2730:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2755:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2747:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2769:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2761:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2781:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2773:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2798:0:6"
									},
									"scope": 1442,
									"src": "2721:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2807:747:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3569:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3590:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3582:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3596:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3616:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3608:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:0:6"
									},
									"scope": 1442,
									"src": "3560:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3642:464:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4121:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4137:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4129:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4149:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4141:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4166:0:6"
									},
									"scope": 1442,
									"src": "4112:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4175:324:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4514:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4540:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4532:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4532:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4555:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4550:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4550:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4531:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4573:0:6"
									},
									"scope": 1442,
									"src": "4505:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4582:145:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4742:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4762:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4754:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4802:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4794:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:18:6"
									},
									"scope": 1442,
									"src": "4733:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4820:142:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4977:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5017:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "5009:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "5050:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5050:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:6:6"
									},
									"scope": 1442,
									"src": "4968:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "276:4783:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "111:4950:6"
				},
				"id": 6
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "147:156:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "315:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "338:509:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "862:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "897:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "889:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "924:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "916:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "947:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "939:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "980:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "965:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "965:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:113:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1010:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1010:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:8:7"
									},
									"scope": 1460,
									"src": "853:165:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "305:716:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "119:904:7"
				},
				"id": 7
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721Enumerable": [
							1844
						],
						"IERC165": [
							2351
						],
						"IERC721Enumerable": [
							2002
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "131:24:8"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 1326,
							"src": "159:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "167:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 2003,
							"src": "198:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2002,
										"src": "206:17:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 2340,
							"src": "258:64:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1467,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2351,
										"src": "266:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1470,
										"name": "ERC721",
										"nameLocations": [
											"762:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "762:6:8"
									},
									"id": 1471,
									"nodeType": "InheritanceSpecifier",
									"src": "762:6:8"
								},
								{
									"baseName": {
										"id": 1472,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"770:17:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2002,
										"src": "770:17:8"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "770:17:8"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "326:396:8",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."
							},
							"fullyImplemented": true,
							"id": 1844,
							"linearizedBaseContracts": [
								1844,
								2002,
								1325,
								269,
								2030,
								1442,
								2339,
								2351,
								2060
							],
							"name": "ERC721Enumerable",
							"nameLocation": "742:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1479,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "863:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "795:80:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1478,
										"keyName": "owner",
										"keyNameLocation": "811:5:8",
										"keyType": {
											"id": 1474,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "803:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "795:59:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1477,
											"keyName": "index",
											"keyNameLocation": "836:5:8",
											"keyType": {
												"id": 1475,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "828:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "820:33:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1476,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "845:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1483,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "926:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "882:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1482,
										"keyName": "tokenId",
										"keyNameLocation": "898:7:8",
										"keyType": {
											"id": 1480,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "890:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "882:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1481,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "909:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1486,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "970:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "952:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1484,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "952:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1485,
										"nodeType": "ArrayTypeName",
										"src": "952:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1490,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "1031:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "987:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1489,
										"keyName": "tokenId",
										"keyNameLocation": "1003:7:8",
										"keyType": {
											"id": 1487,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "995:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "987:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1488,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1014:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "1055:172:8",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 1497,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "1239:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1270:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1262:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1285:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1277:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:30:8"
									},
									"src": "1233:59:8"
								},
								{
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "1300:52:8",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 1500,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "1364:34:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1398:2:8"
									},
									"src": "1358:43:8"
								},
								{
									"baseFunctions": [
										417,
										2350
									],
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "1581:116:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1511,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "1599:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1513,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "1619:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2002_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2002_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1512,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1614:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1614:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$2002",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1638:11:8",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1614:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1599:50:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1519,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "1677:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1517,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1653:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1844_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1659:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1653:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1653:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1599:90:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1510,
												"id": 1522,
												"nodeType": "Return",
												"src": "1592:97:8"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "1409:58:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1482:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1507,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1505,
												"name": "IERC165",
												"nameLocations": [
													"1549:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2351,
												"src": "1549:7:8"
											},
											{
												"id": 1506,
												"name": "ERC721",
												"nameLocations": [
													"1558:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1558:6:8"
											}
										],
										"src": "1540:25:8"
									},
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1507:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1500:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1500:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:20:8"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1575:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1575:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1574:6:8"
									},
									"scope": 1844,
									"src": "1473:224:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1993
									],
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "1878:163:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1534,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "1893:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1536,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "1912:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1535,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "1902:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1902:16:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1893:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1545,
												"nodeType": "IfStatement",
												"src": "1889:101:8",
												"trueBody": {
													"id": 1544,
													"nodeType": "Block",
													"src": "1920:70:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1540,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "1965:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1541,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "1972:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1539,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1497,
																	"src": "1942:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1942:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1543,
															"nodeType": "RevertStatement",
															"src": "1935:43:8"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1546,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "2007:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1548,
														"indexExpression": {
															"id": 1547,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "2020:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2007:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1550,
													"indexExpression": {
														"id": 1549,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "2027:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2007:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1533,
												"id": 1551,
												"nodeType": "Return",
												"src": "2000:33:8"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "1705:70:8",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1790:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1818:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1810:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1810:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1833:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1825:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1809:30:8"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1869:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:9:8"
									},
									"scope": 1844,
									"src": "1781:260:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1983
									],
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "2178:43:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "2196:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2207:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2196:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "2189:24:8"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "2049:62:8",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2126:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2137:2:8"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2169:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2169:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2168:9:8"
									},
									"scope": 1844,
									"src": "2117:104:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2001
									],
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "2373:156:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1571,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "2388:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1572,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "2397:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2397:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2388:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "2384:103:8",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "2412:75:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2465:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2457:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2457:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2457:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1580,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "2469:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1575,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1497,
																	"src": "2434:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2434:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1582,
															"nodeType": "RevertStatement",
															"src": "2427:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1585,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "2504:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1587,
													"indexExpression": {
														"id": 1586,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "2515:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2504:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1570,
												"id": 1588,
												"nodeType": "Return",
												"src": "2497:24:8"
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "2229:63:8",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2307:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2328:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2320:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:15:8"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2364:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:9:8"
									},
									"scope": 1844,
									"src": "2298:231:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										882
									],
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "2694:536:8",
										"statements": [
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2713:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "2705:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1603,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2705:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1611,
												"initialValue": {
													"arguments": [
														{
															"id": 1607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "2743:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1608,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2747:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1609,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "2756:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1605,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2729:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1844_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2735:7:8",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "2729:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2729:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2705:56:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1612,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "2778:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2803:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2795:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1613,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2795:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2795:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2778:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1623,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "2884:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1624,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "2901:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2884:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1632,
													"nodeType": "IfStatement",
													"src": "2880:108:8",
													"trueBody": {
														"id": 1631,
														"nodeType": "Block",
														"src": "2905:83:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1627,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "2953:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1628,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "2968:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1626,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "2920:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2920:56:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1630,
																"nodeType": "ExpressionStatement",
																"src": "2920:56:8"
															}
														]
													}
												},
												"id": 1633,
												"nodeType": "IfStatement",
												"src": "2774:214:8",
												"trueBody": {
													"id": 1622,
													"nodeType": "Block",
													"src": "2807:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1619,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "2854:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1618,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "2822:31:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2822:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1621,
															"nodeType": "ExpressionStatement",
															"src": "2822:40:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1634,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "3002:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3016:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3008:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1635,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3008:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3008:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3002:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1645,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "3102:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1646,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "3119:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3102:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1654,
													"nodeType": "IfStatement",
													"src": "3098:92:8",
													"trueBody": {
														"id": 1653,
														"nodeType": "Block",
														"src": "3123:67:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1649,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1593,
																			"src": "3166:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1650,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "3170:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1648,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "3138:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3138:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1652,
																"nodeType": "ExpressionStatement",
																"src": "3138:40:8"
															}
														]
													}
												},
												"id": 1655,
												"nodeType": "IfStatement",
												"src": "2998:192:8",
												"trueBody": {
													"id": 1644,
													"nodeType": "Block",
													"src": "3020:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1641,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "3072:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1640,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "3035:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3035:45:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1643,
															"nodeType": "ExpressionStatement",
															"src": "3035:45:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1656,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1604,
													"src": "3209:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1657,
												"nodeType": "Return",
												"src": "3202:20:8"
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "2537:47:8",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2599:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1599,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2667:8:8"
									},
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2615:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2607:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2627:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2619:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2644:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2636:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:43:8"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2685:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:9:8"
									},
									"scope": 1844,
									"src": "2590:640:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "3605:144:8",
										"statements": [
											{
												"assignments": [
													1668
												],
												"declarations": [
													{
														"constant": false,
														"id": 1668,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3624:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "3616:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3616:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1674,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1670,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "3643:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1669,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "3633:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3633:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3649:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3633:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3616:34:8"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1675,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "3661:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1678,
															"indexExpression": {
																"id": 1676,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "3674:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3661:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1679,
														"indexExpression": {
															"id": 1677,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "3678:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3661:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1680,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3688:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3661:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "3661:34:8"
											},
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1683,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "3706:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1685,
														"indexExpression": {
															"id": 1684,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3724:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3706:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1686,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "3735:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3706:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "3706:35:8"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "3238:287:8",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3540:27:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3576:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3568:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3588:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3580:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3567:29:8"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3605:0:8"
									},
									"scope": 1844,
									"src": "3531:218:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "4016:98:8",
										"statements": [
											{
												"expression": {
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1696,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "4027:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1698,
														"indexExpression": {
															"id": 1697,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "4043:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4027:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1699,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "4054:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4065:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4054:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4027:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "4027:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1706,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "4098:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1703,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "4082:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4093:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4082:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4082:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "4082:24:8"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "3757:187:8",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3959:31:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3999:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "3991:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3990:17:8"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4016:0:8"
									},
									"scope": 1844,
									"src": "3950:164:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "4822:896:8",
										"statements": [
											{
												"assignments": [
													1719
												],
												"declarations": [
													{
														"constant": false,
														"id": 1719,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "5015:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1769,
														"src": "5007:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5007:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1723,
												"initialValue": {
													"arguments": [
														{
															"id": 1721,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "5042:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1720,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "5032:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5032:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5007:40:8"
											},
											{
												"assignments": [
													1725
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "5066:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1769,
														"src": "5058:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5058:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1729,
												"initialValue": {
													"baseExpression": {
														"id": 1726,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "5079:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1728,
													"indexExpression": {
														"id": 1727,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "5097:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5079:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5058:47:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1730,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "5212:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1731,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "5226:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5212:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1756,
												"nodeType": "IfStatement",
												"src": "5208:328:8",
												"trueBody": {
													"id": 1755,
													"nodeType": "Block",
													"src": "5242:294:8",
													"statements": [
														{
															"assignments": [
																1734
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1734,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5265:11:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1755,
																	"src": "5257:19:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1733,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5257:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1740,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1735,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "5279:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1737,
																	"indexExpression": {
																		"id": 1736,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "5292:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5279:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1739,
																"indexExpression": {
																	"id": 1738,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "5298:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5279:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5257:56:8"
														},
														{
															"expression": {
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1741,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "5330:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1744,
																		"indexExpression": {
																			"id": 1742,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1713,
																			"src": "5343:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5330:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1745,
																	"indexExpression": {
																		"id": 1743,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1725,
																		"src": "5349:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5330:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1746,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "5363:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5330:44:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1748,
															"nodeType": "ExpressionStatement",
															"src": "5330:44:8"
														},
														{
															"expression": {
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1749,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1483,
																		"src": "5447:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1751,
																	"indexExpression": {
																		"id": 1750,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "5465:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5447:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1752,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "5480:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5447:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1754,
															"nodeType": "ExpressionStatement",
															"src": "5447:43:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5625:33:8",
													"subExpression": {
														"baseExpression": {
															"id": 1757,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "5632:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1759,
														"indexExpression": {
															"id": 1758,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "5650:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5632:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "5625:33:8"
											},
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5669:41:8",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1762,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "5676:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1764,
															"indexExpression": {
																"id": 1763,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "5689:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5676:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1766,
														"indexExpression": {
															"id": 1765,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "5695:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5676:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "5669:41:8"
											}
										]
									},
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "4122:613:8",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4750:32:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4791:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4783:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4783:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4805:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4797:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4782:31:8"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4822:0:8"
									},
									"scope": 1844,
									"src": "4741:977:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "6084:1008:8",
										"statements": [
											{
												"assignments": [
													1777
												],
												"declarations": [
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6274:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "6266:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1776,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6266:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1778,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "6291:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6302:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6291:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6311:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6291:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6266:46:8"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6331:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "6323:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1783,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6323:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"baseExpression": {
														"id": 1785,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "6344:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1787,
													"indexExpression": {
														"id": 1786,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "6360:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6344:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6323:45:8"
											},
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6703:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "6695:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6695:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1794,
												"initialValue": {
													"baseExpression": {
														"id": 1791,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "6717:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1793,
													"indexExpression": {
														"id": 1792,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "6728:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6717:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6695:48:8"
											},
											{
												"expression": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1795,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "6756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1797,
														"indexExpression": {
															"id": 1796,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "6767:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6756:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1798,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "6781:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6756:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "6756:36:8"
											},
											{
												"expression": {
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1801,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "6861:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1803,
														"indexExpression": {
															"id": 1802,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "6877:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6861:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1804,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "6892:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6861:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "6861:41:8"
											},
											{
												"expression": {
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7026:31:8",
													"subExpression": {
														"baseExpression": {
															"id": 1807,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "7033:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1809,
														"indexExpression": {
															"id": 1808,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "7049:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7033:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1811,
												"nodeType": "ExpressionStatement",
												"src": "7026:31:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1812,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "7068:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7079:3:8",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "7068:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "7068:16:8"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "5726:281:8",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "6022:36:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6067:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6059:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6058:17:8"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6084:0:8"
									},
									"scope": 1844,
									"src": "6013:1079:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "7299:154:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1827,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "7314:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7323:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7314:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1834,
												"nodeType": "IfStatement",
												"src": "7310:86:8",
												"trueBody": {
													"id": 1833,
													"nodeType": "Block",
													"src": "7326:70:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1830,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "7348:34:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7348:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1832,
															"nodeType": "RevertStatement",
															"src": "7341:43:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1838,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "7429:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1839,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "7438:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1835,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7406:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1844_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7412:16:8",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "7406:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7406:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "7406:39:8"
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "7100:108:8",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "7223:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1825,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7290:8:8"
									},
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7248:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "7240:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7240:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7265:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "7257:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1822,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7257:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:33:8"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7299:0:8"
									},
									"scope": 1844,
									"src": "7214:239:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1845,
							"src": "724:6732:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268,
								1497,
								1500
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "131:7327:8"
				},
				"id": 8
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1970
						],
						"IERC165": [
							2351
						],
						"IERC4906": [
							175
						],
						"Strings": [
							2315
						]
					},
					"id": 1971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "131:24:9"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1971,
							"sourceUnit": 1326,
							"src": "159:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1847,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "167:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1971,
							"sourceUnit": 2316,
							"src": "198:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1849,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2315,
										"src": "206:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1852,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1971,
							"sourceUnit": 176,
							"src": "251:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1851,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "259:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1854,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1971,
							"sourceUnit": 152,
							"src": "311:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1853,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2351,
										"src": "319:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1856,
										"name": "IERC4906",
										"nameLocations": [
											"482:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "482:8:9"
									},
									"id": 1857,
									"nodeType": "InheritanceSpecifier",
									"src": "482:8:9"
								},
								{
									"baseName": {
										"id": 1858,
										"name": "ERC721",
										"nameLocations": [
											"492:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "492:6:9"
									},
									"id": 1859,
									"nodeType": "InheritanceSpecifier",
									"src": "492:6:9"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1855,
								"nodeType": "StructuredDocumentation",
								"src": "371:71:9",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1970,
							"linearizedBaseContracts": [
								1970,
								1325,
								269,
								2030,
								175,
								1442,
								2339,
								2351,
								2060
							],
							"name": "ERC721URIStorage",
							"nameLocation": "462:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1862,
									"libraryName": {
										"id": 1860,
										"name": "Strings",
										"nameLocations": [
											"512:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2315,
										"src": "512:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "506:26:9",
									"typeName": {
										"id": 1861,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "524:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1868,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "748:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1970,
									"src": "724:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1863,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "724:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1866,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "778:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1865,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "771:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1864,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "771:6:9",
												"typeDescriptions": {}
											}
										},
										"id": 1867,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "771:18:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1872,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "881:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1970,
									"src": "838:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1871,
										"keyName": "tokenId",
										"keyNameLocation": "854:7:9",
										"keyType": {
											"id": 1869,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "846:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "838:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1870,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "865:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										2350
									],
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "1071:101:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1883,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "1089:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1884,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "1104:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1089:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1888,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "1152:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1886,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1128:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1970_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1134:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1128:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1128:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1089:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1882,
												"id": 1891,
												"nodeType": "Return",
												"src": "1082:82:9"
											}
										]
									},
									"documentation": {
										"id": 1873,
										"nodeType": "StructuredDocumentation",
										"src": "900:57:9",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "972:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1879,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1877,
												"name": "ERC721",
												"nameLocations": [
													"1039:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1039:6:9"
											},
											{
												"id": 1878,
												"name": "IERC165",
												"nameLocations": [
													"1047:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2351,
												"src": "1047:7:9"
											}
										],
										"src": "1030:25:9"
									},
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "997:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "990:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1874,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "990:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:20:9"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "1065:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1880,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1065:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1064:6:9"
									},
									"scope": 1970,
									"src": "963:209:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "1331:521:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1903,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "1356:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1902,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1342:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1342:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "1342:22:9"
											},
											{
												"assignments": [
													1907
												],
												"declarations": [
													{
														"constant": false,
														"id": 1907,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1391:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1949,
														"src": "1377:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1906,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1377:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1911,
												"initialValue": {
													"baseExpression": {
														"id": 1908,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "1403:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1910,
													"indexExpression": {
														"id": 1909,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "1414:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1403:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:45:9"
											},
											{
												"assignments": [
													1913
												],
												"declarations": [
													{
														"constant": false,
														"id": 1913,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1447:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1949,
														"src": "1433:18:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1912,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1433:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1916,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1914,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1454:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1433:31:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1919,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "1546:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1540:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1917,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1540:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1540:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1552:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1540:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1562:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1540:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1927,
												"nodeType": "IfStatement",
												"src": "1536:72:9",
												"trueBody": {
													"id": 1926,
													"nodeType": "Block",
													"src": "1565:43:9",
													"statements": [
														{
															"expression": {
																"id": 1924,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "1587:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1901,
															"id": 1925,
															"nodeType": "Return",
															"src": "1580:16:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1930,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "1715:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1709:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1928,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1709:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1709:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1709:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1709:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1943,
												"nodeType": "IfStatement",
												"src": "1705:97:9",
												"trueBody": {
													"id": 1942,
													"nodeType": "Block",
													"src": "1738:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1938,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "1774:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1939,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1907,
																		"src": "1780:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1760:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1935,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1760:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1767:6:9",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1760:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1760:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1901,
															"id": 1941,
															"nodeType": "Return",
															"src": "1753:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1946,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "1836:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1944,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1821:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1970_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1827:8:9",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1821:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1821:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1948,
												"nodeType": "Return",
												"src": "1814:30:9"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "1180:57:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1252:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1898,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1298:8:9"
									},
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1269:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "1261:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:17:9"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "1316:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1316:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1315:15:9"
									},
									"scope": 1970,
									"src": "1243:609:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "2059:89:9",
										"statements": [
											{
												"expression": {
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1958,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "2070:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1960,
														"indexExpression": {
															"id": 1959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "2081:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2070:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1961,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "2092:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2070:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "2070:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1965,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "2132:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1964,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2117:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2117:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "EmitStatement",
												"src": "2112:28:9"
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "1860:112:9",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1987:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2008:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2000:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "2031:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2017:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1954,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2017:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:42:9"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2059:0:9"
									},
									"scope": 1970,
									"src": "1978:170:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1971,
							"src": "444:1707:9",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "131:2022:9"
				},
				"id": 9
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Enumerable": [
							2002
						]
					},
					"id": 2003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1972,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:10"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1974,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 1443,
							"src": "160:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1973,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "168:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1976,
										"name": "IERC721",
										"nameLocations": [
											"375:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "375:7:10"
									},
									"id": 1977,
									"nodeType": "InheritanceSpecifier",
									"src": "375:7:10"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1975,
								"nodeType": "StructuredDocumentation",
								"src": "203:139:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2002,
							"linearizedBaseContracts": [
								2002,
								1442,
								2351
							],
							"name": "IERC721Enumerable",
							"nameLocation": "354:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "390:84:10",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "489:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:2:10"
									},
									"returnParameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "526:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:9:10"
									},
									"scope": 2002,
									"src": "480:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "543:174:10",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "732:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "760:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "752:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "775:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "767:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:30:10"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "805:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:9:10"
									},
									"scope": 2002,
									"src": "723:91:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "822:167:10",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 2001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "1004:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1025:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "1017:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:15:10"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "1055:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1054:9:10"
									},
									"scope": 2002,
									"src": "995:69:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2003,
							"src": "344:723:10",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "132:937:10"
				},
				"id": 10
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							2030
						]
					},
					"id": 2031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:11"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 2006,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2031,
							"sourceUnit": 1443,
							"src": "158:39:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2005,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "166:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2008,
										"name": "IERC721",
										"nameLocations": [
											"368:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "368:7:11"
									},
									"id": 2009,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:11"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2007,
								"nodeType": "StructuredDocumentation",
								"src": "201:136:11",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2030,
							"linearizedBaseContracts": [
								2030,
								1442,
								2351
							],
							"name": "IERC721Metadata",
							"nameLocation": "349:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "383:60:11",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "458:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:11"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "488:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2012,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "488:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:15:11"
									},
									"scope": 2030,
									"src": "449:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "511:62:11",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "588:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:11"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "620:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2018,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "620:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:15:11"
									},
									"scope": 2030,
									"src": "579:56:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "643:92:11",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "750:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "767:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "759:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:17:11"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "799:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2026,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:15:11"
									},
									"scope": 2030,
									"src": "741:73:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2031,
							"src": "339:478:11",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "130:689:11"
				},
				"id": 11
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2060
						]
					},
					"id": 2061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:12"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2033,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:12",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2060,
							"linearizedBaseContracts": [
								2060
							],
							"name": "Context",
							"nameLocation": "657:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "734:36:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2038,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2037,
												"id": 2040,
												"nodeType": "Return",
												"src": "745:17:12"
											}
										]
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:12"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "725:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:12"
									},
									"scope": 2060,
									"src": "672:98:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "845:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2047,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:12",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2046,
												"id": 2049,
												"nodeType": "Return",
												"src": "856:15:12"
											}
										]
									},
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:12"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "829:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:12"
									},
									"scope": 2060,
									"src": "778:101:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "959:27:12",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "977:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2055,
												"id": 2057,
												"nodeType": "Return",
												"src": "970:8:12"
											}
										]
									},
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "896:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:12"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "950:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:12"
									},
									"scope": 2060,
									"src": "887:99:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2061,
							"src": "639:350:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:887:12"
				},
				"id": 12
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3405
						],
						"SignedMath": [
							3510
						],
						"Strings": [
							2315
						]
					},
					"id": 2316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2062,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:13"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2064,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2316,
							"sourceUnit": 3406,
							"src": "132:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2063,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3405,
										"src": "140:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2066,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2316,
							"sourceUnit": 3511,
							"src": "171:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2065,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3510,
										"src": "179:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2067,
								"nodeType": "StructuredDocumentation",
								"src": "224:36:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2315,
							"linearizedBaseContracts": [
								2315
							],
							"name": "Strings",
							"nameLocation": "270:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2070,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "310:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2315,
									"src": "285:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2068,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2069,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2073,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "371:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2315,
									"src": "348:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2071,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "348:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2072,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "388:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "399:83:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2080,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "494:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "531:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "523:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "546:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "538:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:31:13"
									},
									"src": "488:66:13"
								},
								{
									"body": {
										"id": 2127,
										"nodeType": "Block",
										"src": "731:647:13",
										"statements": [
											{
												"id": 2126,
												"nodeType": "UncheckedBlock",
												"src": "742:629:13",
												"statements": [
													{
														"assignments": [
															2089
														],
														"declarations": [
															{
																"constant": false,
																"id": 2089,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "775:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2126,
																"src": "767:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2088,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "767:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2096,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2092,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "795:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2090,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3405,
																		"src": "784:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3405_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "789:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3225,
																	"src": "784:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "784:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "804:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "784:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "767:38:13"
													},
													{
														"assignments": [
															2098
														],
														"declarations": [
															{
																"constant": false,
																"id": 2098,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "834:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2126,
																"src": "820:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2097,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "820:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2103,
														"initialValue": {
															"arguments": [
																{
																	"id": 2101,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "854:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "843:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2099,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "847:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "843:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "820:41:13"
													},
													{
														"assignments": [
															2105
														],
														"declarations": [
															{
																"constant": false,
																"id": 2105,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "884:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 2126,
																"src": "876:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2104,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "876:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2106,
														"nodeType": "VariableDeclarationStatement",
														"src": "876:11:13"
													},
													{
														"AST": {
															"nativeSrc": "959:69:13",
															"nodeType": "YulBlock",
															"src": "959:69:13",
															"statements": [
																{
																	"nativeSrc": "978:35:13",
																	"nodeType": "YulAssignment",
																	"src": "978:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "989:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "989:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1001:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1001:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1005:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1005:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "997:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "997:3:13"
																				},
																				"nativeSrc": "997:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "997:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:13"
																		},
																		"nativeSrc": "985:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "985:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "978:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2098,
																"isOffset": false,
																"isSlot": false,
																"src": "989:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "1005:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2105,
																"isOffset": false,
																"isSlot": false,
																"src": "978:3:13",
																"valueSize": 1
															}
														],
														"id": 2107,
														"nodeType": "InlineAssembly",
														"src": "950:78:13"
													},
													{
														"body": {
															"id": 2122,
															"nodeType": "Block",
															"src": "1055:277:13",
															"statements": [
																{
																	"expression": {
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1074:5:13",
																		"subExpression": {
																			"id": 2109,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "1074:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2111,
																	"nodeType": "ExpressionStatement",
																	"src": "1074:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1159:88:13",
																		"nodeType": "YulBlock",
																		"src": "1159:88:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1190:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1190:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1204:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1204:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1211:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1211:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1200:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1200:3:13"
																									},
																									"nativeSrc": "1200:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1200:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1216:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1216:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1195:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1195:4:13"
																							},
																							"nativeSrc": "1195:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1195:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1182:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1182:7:13"
																					},
																					"nativeSrc": "1182:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1182:46:13"
																				},
																				"nativeSrc": "1182:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1182:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 2070,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1216:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2105,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1190:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2083,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1204:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 2112,
																	"nodeType": "InlineAssembly",
																	"src": "1150:97:13"
																},
																{
																	"expression": {
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2113,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "1265:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1274:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1265:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2116,
																	"nodeType": "ExpressionStatement",
																	"src": "1265:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2117,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "1299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1308:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1299:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2121,
																	"nodeType": "IfStatement",
																	"src": "1295:21:13",
																	"trueBody": {
																		"id": 2120,
																		"nodeType": "Break",
																		"src": "1311:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1049:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2123,
														"nodeType": "WhileStatement",
														"src": "1042:290:13"
													},
													{
														"expression": {
															"id": 2124,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "1353:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2087,
														"id": 2125,
														"nodeType": "Return",
														"src": "1346:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "562:92:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "669:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "686:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "678:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:15:13"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "716:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "716:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:15:13"
									},
									"scope": 2315,
									"src": "660:718:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2153,
										"nodeType": "Block",
										"src": "1559:94:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2139,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "1591:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1599:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1591:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1609:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1591:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1603:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2148,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "1637:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2146,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3510,
																			"src": "1622:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3510_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1633:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3509,
																		"src": "1622:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1622:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2145,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "1613:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1577:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2136,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1577:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1584:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1577:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2135,
												"id": 2152,
												"nodeType": "Return",
												"src": "1570:75:13"
											}
										]
									},
									"documentation": {
										"id": 2129,
										"nodeType": "StructuredDocumentation",
										"src": "1386:91:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1492:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1514:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "1507:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2130,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:14:13"
									},
									"returnParameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "1544:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:15:13"
									},
									"scope": 2315,
									"src": "1483:170:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "1837:104:13",
										"statements": [
											{
												"id": 2172,
												"nodeType": "UncheckedBlock",
												"src": "1848:86:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2163,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "1892:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2166,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2157,
																				"src": "1911:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2164,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3405,
																				"src": "1899:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3405_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1904:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3347,
																			"src": "1899:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1899:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1920:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1899:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2162,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2174,
																	2257,
																	2277
																],
																"referencedDeclaration": 2257,
																"src": "1880:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1880:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2161,
														"id": 2171,
														"nodeType": "Return",
														"src": "1873:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2155,
										"nodeType": "StructuredDocumentation",
										"src": "1661:96:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1772:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1792:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "1784:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:15:13"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "1822:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1822:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:15:13"
									},
									"scope": 2315,
									"src": "1763:178:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "2159:448:13",
										"statements": [
											{
												"assignments": [
													2185
												],
												"declarations": [
													{
														"constant": false,
														"id": 2185,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2178:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2256,
														"src": "2170:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2170:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2187,
												"initialValue": {
													"id": 2186,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2177,
													"src": "2191:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2170:26:13"
											},
											{
												"assignments": [
													2189
												],
												"declarations": [
													{
														"constant": false,
														"id": 2189,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2220:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2256,
														"src": "2207:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2188,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2207:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2198,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2239:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2193,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "2243:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2239:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2239:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2229:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2190,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2233:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2229:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2207:47:13"
											},
											{
												"expression": {
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2199,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "2265:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2201,
														"indexExpression": {
															"hexValue": "30",
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2272:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2265:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2277:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2265:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2204,
												"nodeType": "ExpressionStatement",
												"src": "2265:15:13"
											},
											{
												"expression": {
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2205,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "2291:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2207,
														"indexExpression": {
															"hexValue": "31",
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2291:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2303:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2291:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "2291:15:13"
											},
											{
												"body": {
													"id": 2239,
													"nodeType": "Block",
													"src": "2362:98:13",
													"statements": [
														{
															"expression": {
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2225,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "2377:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2227,
																	"indexExpression": {
																		"id": 2226,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2212,
																		"src": "2384:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2377:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2228,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "2389:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2232,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2229,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2185,
																			"src": "2400:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2400:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2389:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2377:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2234,
															"nodeType": "ExpressionStatement",
															"src": "2377:40:13"
														},
														{
															"expression": {
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2235,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2185,
																	"src": "2432:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2447:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2432:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2238,
															"nodeType": "ExpressionStatement",
															"src": "2432:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2219,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2212,
														"src": "2350:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2354:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2350:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2240,
												"initializationExpression": {
													"assignments": [
														2212
													],
													"declarations": [
														{
															"constant": false,
															"id": 2212,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2330:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2240,
															"src": "2322:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2211,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2322:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2218,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2334:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2214,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2179,
																"src": "2338:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2334:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2347:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2334:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2322:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2357:3:13",
														"subExpression": {
															"id": 2222,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "2359:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2224,
													"nodeType": "ExpressionStatement",
													"src": "2357:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2317:143:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2241,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "2474:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2474:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2250,
												"nodeType": "IfStatement",
												"src": "2470:98:13",
												"trueBody": {
													"id": 2249,
													"nodeType": "Block",
													"src": "2491:77:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2245,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "2542:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2246,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2179,
																		"src": "2549:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2244,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2080,
																	"src": "2513:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2513:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2248,
															"nodeType": "RevertStatement",
															"src": "2506:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2253,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "2592:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2585:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2251,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2585:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2183,
												"id": 2255,
												"nodeType": "Return",
												"src": "2578:21:13"
											}
										]
									},
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "1949:114:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2078:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2098:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "2090:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2113:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "2105:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:31:13"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "2144:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:13"
									},
									"scope": 2315,
									"src": "2069:538:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "2845:77:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2270,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2260,
																			"src": "2891:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2883:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2268,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2883:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2883:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2875:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2266,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2875:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2273,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "2899:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2265,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2174,
															2257,
															2277
														],
														"referencedDeclaration": 2257,
														"src": "2863:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2863:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2264,
												"id": 2275,
												"nodeType": "Return",
												"src": "2856:58:13"
											}
										]
									},
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "2615:151:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2781:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2801:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "2793:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2792:14:13"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "2830:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2830:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:15:13"
									},
									"scope": 2315,
									"src": "2772:150:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "3082:106:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2289,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "3106:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3100:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2287,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3100:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3100:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3109:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3100:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2294,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2282,
																		"src": "3125:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3119:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2292,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3119:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3119:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3128:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3119:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3100:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2301,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "3154:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3148:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2299,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3148:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3148:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2298,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3138:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3138:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2307,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2282,
																			"src": "3177:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3171:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2305,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3171:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3171:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2304,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3161:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3161:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3138:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3100:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2286,
												"id": 2312,
												"nodeType": "Return",
												"src": "3093:87:13"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "2930:68:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3013:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3033:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "3019:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3019:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3050:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "3036:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3036:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:34:13"
									},
									"returnParameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "3076:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:13"
									},
									"scope": 2315,
									"src": "3004:184:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2316,
							"src": "262:2929:13",
							"usedErrors": [
								2080
							],
							"usedEvents": []
						}
					],
					"src": "104:3089:13"
				},
				"id": 13
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2339
						],
						"IERC165": [
							2351
						]
					},
					"id": 2340,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "117:24:14"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2340,
							"sourceUnit": 2352,
							"src": "145:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2318,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2351,
										"src": "153:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2321,
										"name": "IERC165",
										"nameLocations": [
											"706:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2351,
										"src": "706:7:14"
									},
									"id": 2322,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2320,
								"nodeType": "StructuredDocumentation",
								"src": "187:489:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2339,
							"linearizedBaseContracts": [
								2339,
								2351
							],
							"name": "ERC165",
							"nameLocation": "696:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2350
									],
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "867:66:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2330,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "885:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2332,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "905:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2351_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2351_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2331,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "900:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "900:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2351",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "914:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "900:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "885:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2329,
												"id": 2336,
												"nodeType": "Return",
												"src": "878:47:14"
											}
										]
									},
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "721:58:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "812:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2324,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:14"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "861:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:14"
									},
									"scope": 2339,
									"src": "785:148:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2340,
							"src": "678:258:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "117:821:14"
				},
				"id": 14
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2351
						]
					},
					"id": 2352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2341,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2342,
								"nodeType": "StructuredDocumentation",
								"src": "146:287:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2351,
							"linearizedBaseContracts": [
								2351
							],
							"name": "IERC165",
							"nameLocation": "445:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "460:347:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "822:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "847:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "840:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2344,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:20:15"
									},
									"returnParameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "883:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "883:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:6:15"
									},
									"scope": 2351,
									"src": "813:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2352,
							"src": "435:457:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:776:15"
				},
				"id": 15
			},
			"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3405
						]
					},
					"id": 3406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2354,
								"nodeType": "StructuredDocumentation",
								"src": "134:75:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3405,
							"linearizedBaseContracts": [
								3405
							],
							"name": "Math",
							"nameLocation": "219:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2355,
										"nodeType": "StructuredDocumentation",
										"src": "231:52:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2357,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "295:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:2:16"
									},
									"src": "289:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2362,
									"members": [
										{
											"id": 2358,
											"name": "Floor",
											"nameLocation": "351:5:16",
											"nodeType": "EnumValue",
											"src": "351:5:16"
										},
										{
											"id": 2359,
											"name": "Ceil",
											"nameLocation": "395:4:16",
											"nodeType": "EnumValue",
											"src": "395:4:16"
										},
										{
											"id": 2360,
											"name": "Trunc",
											"nameLocation": "438:5:16",
											"nodeType": "EnumValue",
											"src": "438:5:16"
										},
										{
											"id": 2361,
											"name": "Expand",
											"nameLocation": "469:6:16",
											"nodeType": "EnumValue",
											"src": "469:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "331:8:16",
									"nodeType": "EnumDefinition",
									"src": "326:174:16"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "685:146:16",
										"statements": [
											{
												"id": 2392,
												"nodeType": "UncheckedBlock",
												"src": "696:128:16",
												"statements": [
													{
														"assignments": [
															2375
														],
														"declarations": [
															{
																"constant": false,
																"id": 2375,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "729:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2392,
																"src": "721:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "721:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2379,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2376,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2365,
																"src": "733:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2377,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "737:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "733:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "721:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2375,
																"src": "757:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2381,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2365,
																"src": "761:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "757:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2387,
														"nodeType": "IfStatement",
														"src": "753:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "772:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "779:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "771:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2373,
															"id": 2386,
															"nodeType": "Return",
															"src": "764:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "804:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2389,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2375,
																	"src": "810:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2390,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "803:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2373,
														"id": 2391,
														"nodeType": "Return",
														"src": "796:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "508:95:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "618:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "633:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "625:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "644:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "636:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:22:16"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "670:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "676:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:15:16"
									},
									"scope": 3405,
									"src": "609:222:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2421,
										"nodeType": "Block",
										"src": "1019:118:16",
										"statements": [
											{
												"id": 2420,
												"nodeType": "UncheckedBlock",
												"src": "1030:100:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2406,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "1059:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2407,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2397,
																"src": "1063:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1059:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2413,
														"nodeType": "IfStatement",
														"src": "1055:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1074:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2411,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1073:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2405,
															"id": 2412,
															"nodeType": "Return",
															"src": "1066:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1106:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2415,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2397,
																		"src": "1112:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2416,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "1116:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1112:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2418,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1105:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2405,
														"id": 2419,
														"nodeType": "Return",
														"src": "1098:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "839:98:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "952:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "967:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "959:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "978:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "970:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:22:16"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "1004:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "1010:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:15:16"
									},
									"scope": 3405,
									"src": "943:194:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "1328:427:16",
										"statements": [
											{
												"id": 2462,
												"nodeType": "UncheckedBlock",
												"src": "1339:409:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2434,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2425,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1601:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2441,
														"nodeType": "IfStatement",
														"src": "1597:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1617:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1623:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2439,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1616:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2433,
															"id": 2440,
															"nodeType": "Return",
															"src": "1609:16:16"
														}
													},
													{
														"assignments": [
															2443
														],
														"declarations": [
															{
																"constant": false,
																"id": 2443,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1648:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2462,
																"src": "1640:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2442,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1640:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2447,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2444,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2425,
																"src": "1652:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2445,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2427,
																"src": "1656:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1652:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1640:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2448,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2443,
																	"src": "1676:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2449,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2425,
																	"src": "1680:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1676:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2451,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2427,
																"src": "1685:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1676:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2457,
														"nodeType": "IfStatement",
														"src": "1672:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1703:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2433,
															"id": 2456,
															"nodeType": "Return",
															"src": "1688:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1728:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2459,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2443,
																	"src": "1734:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2460,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1727:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2433,
														"id": 2461,
														"nodeType": "Return",
														"src": "1720:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2423,
										"nodeType": "StructuredDocumentation",
										"src": "1145:101:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1261:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1276:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "1268:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1287:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "1279:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:22:16"
									},
									"returnParameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "1313:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1313:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "1319:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:15:16"
									},
									"scope": 3405,
									"src": "1252:503:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2491,
										"nodeType": "Block",
										"src": "1947:119:16",
										"statements": [
											{
												"id": 2490,
												"nodeType": "UncheckedBlock",
												"src": "1958:101:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2476,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2469,
																"src": "1987:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1992:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1987:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2483,
														"nodeType": "IfStatement",
														"src": "1983:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2003:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2010:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2481,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2002:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2475,
															"id": 2482,
															"nodeType": "Return",
															"src": "1995:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2035:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2485,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2467,
																		"src": "2041:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2486,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2469,
																		"src": "2045:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2041:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2488,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2034:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2475,
														"id": 2489,
														"nodeType": "Return",
														"src": "2027:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2465,
										"nodeType": "StructuredDocumentation",
										"src": "1763:102:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1880:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1895:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1887:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1906:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1898:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:22:16"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1932:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1932:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1938:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:15:16"
									},
									"scope": 3405,
									"src": "1871:195:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2519,
										"nodeType": "Block",
										"src": "2268:119:16",
										"statements": [
											{
												"id": 2518,
												"nodeType": "UncheckedBlock",
												"src": "2279:101:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2504,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2497,
																"src": "2308:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2313:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2308:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2511,
														"nodeType": "IfStatement",
														"src": "2304:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2324:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2331:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2509,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2323:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2503,
															"id": 2510,
															"nodeType": "Return",
															"src": "2316:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2356:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2513,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2495,
																		"src": "2362:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2514,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2497,
																		"src": "2366:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2362:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2516,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2355:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2503,
														"id": 2517,
														"nodeType": "Return",
														"src": "2348:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2493,
										"nodeType": "StructuredDocumentation",
										"src": "2074:112:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2201:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2216:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "2208:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2227:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "2219:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:22:16"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "2253:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2253:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "2259:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:15:16"
									},
									"scope": 3405,
									"src": "2192:195:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "2529:39:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2530,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "2547:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2531,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2525,
															"src": "2551:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2547:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2534,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2525,
														"src": "2559:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2547:13:16",
													"trueExpression": {
														"id": 2533,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2523,
														"src": "2555:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2529,
												"id": 2536,
												"nodeType": "Return",
												"src": "2540:20:16"
											}
										]
									},
									"documentation": {
										"id": 2521,
										"nodeType": "StructuredDocumentation",
										"src": "2395:61:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2471:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2483:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2475:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2494:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2486:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:22:16"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2520:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2519:9:16"
									},
									"scope": 3405,
									"src": "2462:106:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2555,
										"nodeType": "Block",
										"src": "2711:39:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2548,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2541,
															"src": "2729:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2549,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "2733:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2729:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2552,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "2741:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2729:13:16",
													"trueExpression": {
														"id": 2551,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2541,
														"src": "2737:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2547,
												"id": 2554,
												"nodeType": "Return",
												"src": "2722:20:16"
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "2576:62:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2653:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2665:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "2657:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2676:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "2668:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:22:16"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "2702:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:9:16"
									},
									"scope": 3405,
									"src": "2644:106:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "2940:85:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2566,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2559,
																	"src": "2997:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2567,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2561,
																	"src": "3001:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2997:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2569,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2996:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2570,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2559,
																		"src": "3007:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2571,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2561,
																		"src": "3011:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3007:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2573,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3006:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3016:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3006:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2996:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2565,
												"id": 2577,
												"nodeType": "Return",
												"src": "2989:28:16"
											}
										]
									},
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "2758:105:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2878:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2894:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "2886:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2905:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "2897:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:22:16"
									},
									"returnParameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "2931:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:9:16"
									},
									"scope": 3405,
									"src": "2869:156:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "3325:268:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2589,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2584,
														"src": "3340:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3345:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2597,
												"nodeType": "IfStatement",
												"src": "3336:130:16",
												"trueBody": {
													"id": 2596,
													"nodeType": "Block",
													"src": "3348:118:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2592,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "3449:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2593,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2584,
																	"src": "3453:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3449:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2588,
															"id": 2595,
															"nodeType": "Return",
															"src": "3442:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2598,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2582,
															"src": "3557:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3562:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3557:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2602,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "3571:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3575:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3571:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2605,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3570:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2606,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2584,
																"src": "3580:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3570:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3570:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3557:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3566:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2588,
												"id": 2611,
												"nodeType": "Return",
												"src": "3550:35:16"
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "3033:215:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3263:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3279:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "3271:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3290:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "3282:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3270:22:16"
									},
									"returnParameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "3316:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:16"
									},
									"scope": 3405,
									"src": "3254:339:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2738,
										"nodeType": "Block",
										"src": "4023:4097:16",
										"statements": [
											{
												"id": 2737,
												"nodeType": "UncheckedBlock",
												"src": "4034:4079:16",
												"statements": [
													{
														"assignments": [
															2626
														],
														"declarations": [
															{
																"constant": false,
																"id": 2626,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4367:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2737,
																"src": "4359:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2625,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4359:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2630,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2627,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2616,
																"src": "4375:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2628,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "4379:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4375:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4359:21:16"
													},
													{
														"assignments": [
															2632
														],
														"declarations": [
															{
																"constant": false,
																"id": 2632,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4448:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2737,
																"src": "4440:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2631,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4440:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2633,
														"nodeType": "VariableDeclarationStatement",
														"src": "4440:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4521:125:16",
															"nodeType": "YulBlock",
															"src": "4521:125:16",
															"statements": [
																{
																	"nativeSrc": "4540:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4557:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4557:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4560:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4560:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4567:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4567:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4563:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:16"
																				},
																				"nativeSrc": "4563:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4550:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4550:6:16"
																		},
																		"nativeSrc": "4550:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4550:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4544:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4544:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4588:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4588:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4605:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4605:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4609:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4609:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4601:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4601:3:16"
																				},
																				"nativeSrc": "4601:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4601:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4620:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4620:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4624:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4624:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4617:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4617:2:16"
																				},
																				"nativeSrc": "4617:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4617:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4597:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:16"
																		},
																		"nativeSrc": "4597:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4588:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4588:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2626,
																"isOffset": false,
																"isSlot": false,
																"src": "4609:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2626,
																"isOffset": false,
																"isSlot": false,
																"src": "4624:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2632,
																"isOffset": false,
																"isSlot": false,
																"src": "4588:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2616,
																"isOffset": false,
																"isSlot": false,
																"src": "4557:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2618,
																"isOffset": false,
																"isSlot": false,
																"src": "4560:1:16",
																"valueSize": 1
															}
														],
														"id": 2634,
														"nodeType": "InlineAssembly",
														"src": "4512:134:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2635,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "4730:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4739:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4730:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2643,
														"nodeType": "IfStatement",
														"src": "4726:373:16",
														"trueBody": {
															"id": 2642,
															"nodeType": "Block",
															"src": "4742:357:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2638,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "5064:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2639,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2620,
																			"src": "5072:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5064:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2624,
																	"id": 2641,
																	"nodeType": "Return",
																	"src": "5057:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2644,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2620,
																"src": "5208:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2645,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "5223:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5208:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2651,
														"nodeType": "IfStatement",
														"src": "5204:90:16",
														"trueBody": {
															"id": 2650,
															"nodeType": "Block",
															"src": "5230:64:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2647,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2357,
																			"src": "5256:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5256:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2649,
																	"nodeType": "RevertStatement",
																	"src": "5249:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2653
														],
														"declarations": [
															{
																"constant": false,
																"id": 2653,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5564:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2737,
																"src": "5556:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2652,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5556:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2654,
														"nodeType": "VariableDeclarationStatement",
														"src": "5556:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5597:298:16",
															"nodeType": "YulBlock",
															"src": "5597:298:16",
															"statements": [
																{
																	"nativeSrc": "5668:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5668:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5688:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5688:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5691:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5691:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5694:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5694:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5681:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5681:6:16"
																		},
																		"nativeSrc": "5681:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5668:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5668:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5791:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5791:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5804:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5804:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5814:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5825:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5825:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5811:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5811:2:16"
																				},
																				"nativeSrc": "5811:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5811:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5800:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:16"
																		},
																		"nativeSrc": "5800:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5800:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5791:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5791:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5850:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5850:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5863:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5863:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5870:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5859:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:16"
																		},
																		"nativeSrc": "5859:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5859:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5850:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5850:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2620,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2626,
																"isOffset": false,
																"isSlot": false,
																"src": "5825:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2626,
																"isOffset": false,
																"isSlot": false,
																"src": "5850:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2626,
																"isOffset": false,
																"isSlot": false,
																"src": "5863:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2632,
																"isOffset": false,
																"isSlot": false,
																"src": "5791:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2632,
																"isOffset": false,
																"isSlot": false,
																"src": "5804:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2653,
																"isOffset": false,
																"isSlot": false,
																"src": "5668:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2653,
																"isOffset": false,
																"isSlot": false,
																"src": "5814:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2653,
																"isOffset": false,
																"isSlot": false,
																"src": "5870:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2616,
																"isOffset": false,
																"isSlot": false,
																"src": "5688:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2618,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:1:16",
																"valueSize": 1
															}
														],
														"id": 2655,
														"nodeType": "InlineAssembly",
														"src": "5588:307:16"
													},
													{
														"assignments": [
															2657
														],
														"declarations": [
															{
																"constant": false,
																"id": 2657,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6112:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2737,
																"src": "6104:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6104:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2664,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2658,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2620,
																"src": "6119:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6134:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2660,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2620,
																			"src": "6138:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6134:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2662,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6133:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6119:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6104:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6174:371:16",
															"nodeType": "YulBlock",
															"src": "6174:371:16",
															"statements": [
																{
																	"nativeSrc": "6241:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6241:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6260:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6260:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6273:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6273:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6256:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:16"
																		},
																		"nativeSrc": "6256:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6256:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6241:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6241:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6348:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6348:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6361:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6361:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6368:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6368:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6357:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:16"
																		},
																		"nativeSrc": "6357:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6357:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6348:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6348:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6491:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6491:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6511:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6511:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6514:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6514:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6507:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6507:3:16"
																						},
																						"nativeSrc": "6507:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6507:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6521:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6521:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6503:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6503:3:16"
																				},
																				"nativeSrc": "6503:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6528:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6528:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6499:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:16"
																		},
																		"nativeSrc": "6499:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6491:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6491:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2620,
																"isOffset": false,
																"isSlot": false,
																"src": "6241:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2620,
																"isOffset": false,
																"isSlot": false,
																"src": "6260:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2626,
																"isOffset": false,
																"isSlot": false,
																"src": "6348:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2626,
																"isOffset": false,
																"isSlot": false,
																"src": "6361:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2657,
																"isOffset": false,
																"isSlot": false,
																"src": "6273:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2657,
																"isOffset": false,
																"isSlot": false,
																"src": "6368:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2657,
																"isOffset": false,
																"isSlot": false,
																"src": "6491:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2657,
																"isOffset": false,
																"isSlot": false,
																"src": "6514:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2657,
																"isOffset": false,
																"isSlot": false,
																"src": "6521:4:16",
																"valueSize": 1
															}
														],
														"id": 2665,
														"nodeType": "InlineAssembly",
														"src": "6165:380:16"
													},
													{
														"expression": {
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2666,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2626,
																"src": "6614:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2667,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "6623:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2668,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2657,
																	"src": "6631:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6623:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6614:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2671,
														"nodeType": "ExpressionStatement",
														"src": "6614:21:16"
													},
													{
														"assignments": [
															2673
														],
														"declarations": [
															{
																"constant": false,
																"id": 2673,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6966:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2737,
																"src": "6958:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6958:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2680,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6977:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2675,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2620,
																			"src": "6981:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6977:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2677,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6976:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6996:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6976:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6958:39:16"
													},
													{
														"expression": {
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2681,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "7218:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7229:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2683,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "7233:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2684,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2673,
																		"src": "7247:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7233:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7229:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7218:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2688,
														"nodeType": "ExpressionStatement",
														"src": "7218:36:16"
													},
													{
														"expression": {
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2689,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "7288:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7299:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2691,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "7303:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2692,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2673,
																		"src": "7317:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7303:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7299:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7288:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2696,
														"nodeType": "ExpressionStatement",
														"src": "7288:36:16"
													},
													{
														"expression": {
															"id": 2703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2697,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "7359:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7370:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2699,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "7374:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2700,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2673,
																		"src": "7388:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7374:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7370:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7359:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2704,
														"nodeType": "ExpressionStatement",
														"src": "7359:36:16"
													},
													{
														"expression": {
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2705,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "7430:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7441:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2707,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "7445:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2708,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2673,
																		"src": "7459:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7445:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7441:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7430:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2712,
														"nodeType": "ExpressionStatement",
														"src": "7430:36:16"
													},
													{
														"expression": {
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2713,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "7501:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7512:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2715,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "7516:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2716,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2673,
																		"src": "7530:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7516:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7512:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7501:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2720,
														"nodeType": "ExpressionStatement",
														"src": "7501:36:16"
													},
													{
														"expression": {
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2721,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "7573:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7584:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2723,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "7588:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2724,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2673,
																		"src": "7602:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7588:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7584:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7573:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2728,
														"nodeType": "ExpressionStatement",
														"src": "7573:36:16"
													},
													{
														"expression": {
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2729,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "8049:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2730,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "8058:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2731,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2673,
																	"src": "8066:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8058:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8049:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2734,
														"nodeType": "ExpressionStatement",
														"src": "8049:24:16"
													},
													{
														"expression": {
															"id": 2735,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2623,
															"src": "8095:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2624,
														"id": 2736,
														"nodeType": "Return",
														"src": "8088:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "3601:318:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3934:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3949:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "3941:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3960:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "3952:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3971:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "3963:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:43:16"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4015:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "4007:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:16:16"
									},
									"scope": 3405,
									"src": "3925:4195:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "8367:198:16",
										"statements": [
											{
												"assignments": [
													2755
												],
												"declarations": [
													{
														"constant": false,
														"id": 2755,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2781,
														"src": "8378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2761,
												"initialValue": {
													"arguments": [
														{
															"id": 2757,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "8402:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2758,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "8405:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2759,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "8408:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2756,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2739,
															2782
														],
														"referencedDeclaration": 2739,
														"src": "8395:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8378:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2763,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "8452:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2362",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2362",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2762,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3404,
															"src": "8435:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2362_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8435:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2766,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2742,
																	"src": "8472:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2767,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "8475:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2768,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2746,
																	"src": "8478:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2765,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8465:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8465:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8493:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8465:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8435:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2778,
												"nodeType": "IfStatement",
												"src": "8431:103:16",
												"trueBody": {
													"id": 2777,
													"nodeType": "Block",
													"src": "8496:38:16",
													"statements": [
														{
															"expression": {
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2773,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2755,
																	"src": "8511:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8521:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8511:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2776,
															"nodeType": "ExpressionStatement",
															"src": "8511:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2779,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2755,
													"src": "8551:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2753,
												"id": 2780,
												"nodeType": "Return",
												"src": "8544:13:16"
											}
										]
									},
									"documentation": {
										"id": 2740,
										"nodeType": "StructuredDocumentation",
										"src": "8128:123:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8266:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8281:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "8273:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8273:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8292:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "8284:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8284:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8303:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "8295:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8325:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "8316:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2362",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2748,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2747,
														"name": "Rounding",
														"nameLocations": [
															"8316:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2362,
														"src": "8316:8:16"
													},
													"referencedDeclaration": 2362,
													"src": "8316:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2362",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8272:62:16"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "8358:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8357:9:16"
									},
									"scope": 3405,
									"src": "8257:308:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2893,
										"nodeType": "Block",
										"src": "8864:1616:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2790,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2785,
														"src": "8879:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8884:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8879:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2796,
												"nodeType": "IfStatement",
												"src": "8875:47:16",
												"trueBody": {
													"id": 2795,
													"nodeType": "Block",
													"src": "8887:35:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8909:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2789,
															"id": 2794,
															"nodeType": "Return",
															"src": "8902:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2798
												],
												"declarations": [
													{
														"constant": false,
														"id": 2798,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9621:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2893,
														"src": "9613:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9613:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2807,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9630:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2801,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "9641:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2800,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3061,
																			3096
																		],
																		"referencedDeclaration": 3061,
																		"src": "9636:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9636:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9647:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9636:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2805,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9635:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9630:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9613:36:16"
											},
											{
												"id": 2892,
												"nodeType": "UncheckedBlock",
												"src": "10056:417:16",
												"statements": [
													{
														"expression": {
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2808,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2798,
																"src": "10081:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2809,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2798,
																				"src": "10091:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2810,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2785,
																					"src": "10100:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2811,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2798,
																					"src": "10104:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10100:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10091:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2814,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10090:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10115:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10090:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10081:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2818,
														"nodeType": "ExpressionStatement",
														"src": "10081:35:16"
													},
													{
														"expression": {
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2819,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2798,
																"src": "10131:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2820,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2798,
																				"src": "10141:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2821,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2785,
																					"src": "10150:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2822,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2798,
																					"src": "10154:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10150:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10141:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2825,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10140:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10165:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10140:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10131:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2829,
														"nodeType": "ExpressionStatement",
														"src": "10131:35:16"
													},
													{
														"expression": {
															"id": 2839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2830,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2798,
																"src": "10181:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2831,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2798,
																				"src": "10191:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2832,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2785,
																					"src": "10200:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2833,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2798,
																					"src": "10204:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10200:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10191:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2836,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10190:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10215:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10190:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10181:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2840,
														"nodeType": "ExpressionStatement",
														"src": "10181:35:16"
													},
													{
														"expression": {
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2841,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2798,
																"src": "10231:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2842,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2798,
																				"src": "10241:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2843,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2785,
																					"src": "10250:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2844,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2798,
																					"src": "10254:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10250:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10241:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2847,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10240:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10265:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10240:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2851,
														"nodeType": "ExpressionStatement",
														"src": "10231:35:16"
													},
													{
														"expression": {
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2852,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2798,
																"src": "10281:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2853,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2798,
																				"src": "10291:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2854,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2785,
																					"src": "10300:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2855,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2798,
																					"src": "10304:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10300:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10291:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2858,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10290:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10290:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10281:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2862,
														"nodeType": "ExpressionStatement",
														"src": "10281:35:16"
													},
													{
														"expression": {
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2863,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2798,
																"src": "10331:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2864,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2798,
																				"src": "10341:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2865,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2785,
																					"src": "10350:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2866,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2798,
																					"src": "10354:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10350:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10341:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2869,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10340:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10340:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10331:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2873,
														"nodeType": "ExpressionStatement",
														"src": "10331:35:16"
													},
													{
														"expression": {
															"id": 2883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2874,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2798,
																"src": "10381:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2875,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2798,
																				"src": "10391:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2876,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2785,
																					"src": "10400:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2877,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2798,
																					"src": "10404:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10400:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10391:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2880,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10390:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10415:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10390:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10381:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2884,
														"nodeType": "ExpressionStatement",
														"src": "10381:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2886,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "10442:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2887,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2785,
																		"src": "10450:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2888,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2798,
																		"src": "10454:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10450:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2885,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2556,
																"src": "10438:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10438:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2789,
														"id": 2891,
														"nodeType": "Return",
														"src": "10431:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2783,
										"nodeType": "StructuredDocumentation",
										"src": "8573:228:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8816:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8829:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "8821:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8821:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8820:11:16"
									},
									"returnParameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "8855:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:9:16"
									},
									"scope": 3405,
									"src": "8807:1673:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2928,
										"nodeType": "Block",
										"src": "10661:169:16",
										"statements": [
											{
												"id": 2927,
												"nodeType": "UncheckedBlock",
												"src": "10672:151:16",
												"statements": [
													{
														"assignments": [
															2906
														],
														"declarations": [
															{
																"constant": false,
																"id": 2906,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10705:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2927,
																"src": "10697:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2905,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10697:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2910,
														"initialValue": {
															"arguments": [
																{
																	"id": 2908,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2897,
																	"src": "10719:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2907,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2894,
																	2929
																],
																"referencedDeclaration": 2894,
																"src": "10714:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10714:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10697:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2911,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2906,
																"src": "10743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2913,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2900,
																						"src": "10770:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2362",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2362",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2912,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3404,
																					"src": "10753:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2362_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10753:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2915,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2906,
																						"src": "10783:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2916,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2906,
																						"src": "10792:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10783:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2918,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2897,
																					"src": "10801:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10783:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10753:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10809:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10753:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10805:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2924,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10752:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10743:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2904,
														"id": 2926,
														"nodeType": "Return",
														"src": "10736:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2895,
										"nodeType": "StructuredDocumentation",
										"src": "10488:91:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10594:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10607:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "10599:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10599:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10619:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "10610:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2362",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2899,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2898,
														"name": "Rounding",
														"nameLocations": [
															"10610:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2362,
														"src": "10610:8:16"
													},
													"referencedDeclaration": 2362,
													"src": "10610:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2362",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10598:30:16"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "10652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:9:16"
									},
									"scope": 3405,
									"src": "10585:245:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3060,
										"nodeType": "Block",
										"src": "11027:958:16",
										"statements": [
											{
												"assignments": [
													2938
												],
												"declarations": [
													{
														"constant": false,
														"id": 2938,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11046:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3060,
														"src": "11038:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11038:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2940,
												"initialValue": {
													"hexValue": "30",
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11055:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11038:18:16"
											},
											{
												"id": 3057,
												"nodeType": "UncheckedBlock",
												"src": "11067:887:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "11096:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11105:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11096:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11111:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11096:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2955,
														"nodeType": "IfStatement",
														"src": "11092:102:16",
														"trueBody": {
															"id": 2954,
															"nodeType": "Block",
															"src": "11114:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2946,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2932,
																			"src": "11133:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11143:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11133:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2949,
																	"nodeType": "ExpressionStatement",
																	"src": "11133:13:16"
																},
																{
																	"expression": {
																		"id": 2952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2950,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2938,
																			"src": "11165:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11175:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11165:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2953,
																	"nodeType": "ExpressionStatement",
																	"src": "11165:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2956,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "11212:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11221:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11212:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11226:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11212:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2970,
														"nodeType": "IfStatement",
														"src": "11208:99:16",
														"trueBody": {
															"id": 2969,
															"nodeType": "Block",
															"src": "11229:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2961,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2932,
																			"src": "11248:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11258:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11248:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2964,
																	"nodeType": "ExpressionStatement",
																	"src": "11248:12:16"
																},
																{
																	"expression": {
																		"id": 2967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2965,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2938,
																			"src": "11279:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11289:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11279:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2968,
																	"nodeType": "ExpressionStatement",
																	"src": "11279:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2971,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "11325:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11334:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11325:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11339:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11325:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2985,
														"nodeType": "IfStatement",
														"src": "11321:99:16",
														"trueBody": {
															"id": 2984,
															"nodeType": "Block",
															"src": "11342:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2976,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2932,
																			"src": "11361:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11361:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2979,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:12:16"
																},
																{
																	"expression": {
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2980,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2938,
																			"src": "11392:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11402:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11392:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2983,
																	"nodeType": "ExpressionStatement",
																	"src": "11392:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2986,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "11438:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11447:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11438:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11452:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11438:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3000,
														"nodeType": "IfStatement",
														"src": "11434:99:16",
														"trueBody": {
															"id": 2999,
															"nodeType": "Block",
															"src": "11455:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2991,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2932,
																			"src": "11474:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11484:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11474:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2994,
																	"nodeType": "ExpressionStatement",
																	"src": "11474:12:16"
																},
																{
																	"expression": {
																		"id": 2997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2995,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2938,
																			"src": "11505:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11515:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11505:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2998,
																	"nodeType": "ExpressionStatement",
																	"src": "11505:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3001,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "11551:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11560:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11551:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11564:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11551:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3015,
														"nodeType": "IfStatement",
														"src": "11547:96:16",
														"trueBody": {
															"id": 3014,
															"nodeType": "Block",
															"src": "11567:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3006,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2932,
																			"src": "11586:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11596:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11586:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3009,
																	"nodeType": "ExpressionStatement",
																	"src": "11586:11:16"
																},
																{
																	"expression": {
																		"id": 3012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3010,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2938,
																			"src": "11616:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11626:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11616:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3013,
																	"nodeType": "ExpressionStatement",
																	"src": "11616:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3016,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "11661:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11670:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11661:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11674:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11661:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3030,
														"nodeType": "IfStatement",
														"src": "11657:96:16",
														"trueBody": {
															"id": 3029,
															"nodeType": "Block",
															"src": "11677:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3021,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2932,
																			"src": "11696:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11706:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11696:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3024,
																	"nodeType": "ExpressionStatement",
																	"src": "11696:11:16"
																},
																{
																	"expression": {
																		"id": 3027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3025,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2938,
																			"src": "11726:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11736:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11726:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3028,
																	"nodeType": "ExpressionStatement",
																	"src": "11726:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3031,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "11771:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11780:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11771:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11784:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11771:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3045,
														"nodeType": "IfStatement",
														"src": "11767:96:16",
														"trueBody": {
															"id": 3044,
															"nodeType": "Block",
															"src": "11787:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3036,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2932,
																			"src": "11806:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11816:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11806:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3039,
																	"nodeType": "ExpressionStatement",
																	"src": "11806:11:16"
																},
																{
																	"expression": {
																		"id": 3042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3040,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2938,
																			"src": "11836:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11836:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3043,
																	"nodeType": "ExpressionStatement",
																	"src": "11836:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3046,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "11881:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11890:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11881:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11894:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11881:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3056,
														"nodeType": "IfStatement",
														"src": "11877:66:16",
														"trueBody": {
															"id": 3055,
															"nodeType": "Block",
															"src": "11897:46:16",
															"statements": [
																{
																	"expression": {
																		"id": 3053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3051,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2938,
																			"src": "11916:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11926:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11916:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3054,
																	"nodeType": "ExpressionStatement",
																	"src": "11916:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3058,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2938,
													"src": "11971:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2936,
												"id": 3059,
												"nodeType": "Return",
												"src": "11964:13:16"
											}
										]
									},
									"documentation": {
										"id": 2930,
										"nodeType": "StructuredDocumentation",
										"src": "10838:122:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10975:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10988:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "10980:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10980:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10979:15:16"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "11018:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11018:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11017:9:16"
									},
									"scope": 3405,
									"src": "10966:1019:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3095,
										"nodeType": "Block",
										"src": "12224:173:16",
										"statements": [
											{
												"id": 3094,
												"nodeType": "UncheckedBlock",
												"src": "12235:155:16",
												"statements": [
													{
														"assignments": [
															3073
														],
														"declarations": [
															{
																"constant": false,
																"id": 3073,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12268:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3094,
																"src": "12260:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3072,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12260:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3077,
														"initialValue": {
															"arguments": [
																{
																	"id": 3075,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3064,
																	"src": "12282:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3074,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3061,
																	3096
																],
																"referencedDeclaration": 3061,
																"src": "12277:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12277:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12260:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3078,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3073,
																"src": "12310:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3080,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3067,
																						"src": "12337:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2362",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2362",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3079,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3404,
																					"src": "12320:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2362_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12320:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3084,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3082,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12350:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3083,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3073,
																						"src": "12355:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12350:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3085,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3064,
																					"src": "12364:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12350:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12320:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12376:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12320:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12372:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3091,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12319:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12310:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3071,
														"id": 3093,
														"nodeType": "Return",
														"src": "12303:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3062,
										"nodeType": "StructuredDocumentation",
										"src": "11993:145:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12153:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12166:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "12158:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12158:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12182:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "12173:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2362",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3065,
														"name": "Rounding",
														"nameLocations": [
															"12173:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2362,
														"src": "12173:8:16"
													},
													"referencedDeclaration": 2362,
													"src": "12173:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2362",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12157:34:16"
									},
									"returnParameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "12215:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12215:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12214:9:16"
									},
									"scope": 3405,
									"src": "12144:253:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3224,
										"nodeType": "Block",
										"src": "12596:886:16",
										"statements": [
											{
												"assignments": [
													3105
												],
												"declarations": [
													{
														"constant": false,
														"id": 3105,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12615:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3224,
														"src": "12607:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12607:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3107,
												"initialValue": {
													"hexValue": "30",
													"id": 3106,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12624:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12607:18:16"
											},
											{
												"id": 3221,
												"nodeType": "UncheckedBlock",
												"src": "12636:815:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3099,
																"src": "12665:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12674:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12680:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12674:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12665:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3124,
														"nodeType": "IfStatement",
														"src": "12661:106:16",
														"trueBody": {
															"id": 3123,
															"nodeType": "Block",
															"src": "12684:83:16",
															"statements": [
																{
																	"expression": {
																		"id": 3117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3113,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3099,
																			"src": "12703:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12712:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12718:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12712:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12703:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3118,
																	"nodeType": "ExpressionStatement",
																	"src": "12703:17:16"
																},
																{
																	"expression": {
																		"id": 3121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3119,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "12739:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12749:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12739:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3122,
																	"nodeType": "ExpressionStatement",
																	"src": "12739:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3125,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3099,
																"src": "12785:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12794:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12800:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12794:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12785:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3141,
														"nodeType": "IfStatement",
														"src": "12781:106:16",
														"trueBody": {
															"id": 3140,
															"nodeType": "Block",
															"src": "12804:83:16",
															"statements": [
																{
																	"expression": {
																		"id": 3134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3130,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3099,
																			"src": "12823:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12832:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12838:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12832:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12823:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3135,
																	"nodeType": "ExpressionStatement",
																	"src": "12823:17:16"
																},
																{
																	"expression": {
																		"id": 3138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3136,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "12859:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12869:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12859:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3139,
																	"nodeType": "ExpressionStatement",
																	"src": "12859:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3099,
																"src": "12905:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12914:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12920:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12914:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12905:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3158,
														"nodeType": "IfStatement",
														"src": "12901:106:16",
														"trueBody": {
															"id": 3157,
															"nodeType": "Block",
															"src": "12924:83:16",
															"statements": [
																{
																	"expression": {
																		"id": 3151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3147,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3099,
																			"src": "12943:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12952:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12952:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12943:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3152,
																	"nodeType": "ExpressionStatement",
																	"src": "12943:17:16"
																},
																{
																	"expression": {
																		"id": 3155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3153,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "12979:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12989:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12979:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3156,
																	"nodeType": "ExpressionStatement",
																	"src": "12979:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3159,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3099,
																"src": "13025:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13034:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13040:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13034:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13025:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3175,
														"nodeType": "IfStatement",
														"src": "13021:103:16",
														"trueBody": {
															"id": 3174,
															"nodeType": "Block",
															"src": "13043:81:16",
															"statements": [
																{
																	"expression": {
																		"id": 3168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3164,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3099,
																			"src": "13062:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13071:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13077:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13071:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13062:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3169,
																	"nodeType": "ExpressionStatement",
																	"src": "13062:16:16"
																},
																{
																	"expression": {
																		"id": 3172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3170,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "13097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3173,
																	"nodeType": "ExpressionStatement",
																	"src": "13097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3176,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3099,
																"src": "13142:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13151:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13157:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13151:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13142:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3192,
														"nodeType": "IfStatement",
														"src": "13138:103:16",
														"trueBody": {
															"id": 3191,
															"nodeType": "Block",
															"src": "13160:81:16",
															"statements": [
																{
																	"expression": {
																		"id": 3185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3181,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3099,
																			"src": "13179:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13188:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13194:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13188:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13179:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3186,
																	"nodeType": "ExpressionStatement",
																	"src": "13179:16:16"
																},
																{
																	"expression": {
																		"id": 3189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3187,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "13214:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13224:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13214:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3190,
																	"nodeType": "ExpressionStatement",
																	"src": "13214:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3193,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3099,
																"src": "13259:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13268:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13268:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13259:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3209,
														"nodeType": "IfStatement",
														"src": "13255:103:16",
														"trueBody": {
															"id": 3208,
															"nodeType": "Block",
															"src": "13277:81:16",
															"statements": [
																{
																	"expression": {
																		"id": 3202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3198,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3099,
																			"src": "13296:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13305:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13311:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13305:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13296:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3203,
																	"nodeType": "ExpressionStatement",
																	"src": "13296:16:16"
																},
																{
																	"expression": {
																		"id": 3206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3204,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "13331:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13341:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13331:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3207,
																	"nodeType": "ExpressionStatement",
																	"src": "13331:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3210,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3099,
																"src": "13376:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13385:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13391:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13385:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13376:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3220,
														"nodeType": "IfStatement",
														"src": "13372:68:16",
														"trueBody": {
															"id": 3219,
															"nodeType": "Block",
															"src": "13394:46:16",
															"statements": [
																{
																	"expression": {
																		"id": 3217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3215,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "13413:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13423:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13413:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3218,
																	"nodeType": "ExpressionStatement",
																	"src": "13413:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3222,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3105,
													"src": "13468:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3103,
												"id": 3223,
												"nodeType": "Return",
												"src": "13461:13:16"
											}
										]
									},
									"documentation": {
										"id": 3097,
										"nodeType": "StructuredDocumentation",
										"src": "12405:123:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12543:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12557:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3225,
												"src": "12549:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12549:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12548:15:16"
									},
									"returnParameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3225,
												"src": "12587:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12587:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12586:9:16"
									},
									"scope": 3405,
									"src": "12534:948:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3259,
										"nodeType": "Block",
										"src": "13723:175:16",
										"statements": [
											{
												"id": 3258,
												"nodeType": "UncheckedBlock",
												"src": "13734:157:16",
												"statements": [
													{
														"assignments": [
															3237
														],
														"declarations": [
															{
																"constant": false,
																"id": 3237,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13767:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3258,
																"src": "13759:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3236,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13759:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3241,
														"initialValue": {
															"arguments": [
																{
																	"id": 3239,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3228,
																	"src": "13782:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3238,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3225,
																	3260
																],
																"referencedDeclaration": 3225,
																"src": "13776:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13776:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13759:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3242,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3237,
																"src": "13810:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3244,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3231,
																						"src": "13837:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2362",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2362",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3243,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3404,
																					"src": "13820:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2362_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13820:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13850:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3247,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3237,
																						"src": "13856:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13850:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3249,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3228,
																					"src": "13865:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13850:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13820:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13877:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13820:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13873:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13819:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13810:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3235,
														"id": 3257,
														"nodeType": "Return",
														"src": "13803:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3226,
										"nodeType": "StructuredDocumentation",
										"src": "13490:146:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13651:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13665:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "13657:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13657:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3231,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13681:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "13672:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2362",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3230,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3229,
														"name": "Rounding",
														"nameLocations": [
															"13672:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2362,
														"src": "13672:8:16"
													},
													"referencedDeclaration": 2362,
													"src": "13672:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2362",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13656:34:16"
									},
									"returnParameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "13714:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13714:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13713:9:16"
									},
									"scope": 3405,
									"src": "13642:256:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3346,
										"nodeType": "Block",
										"src": "14226:624:16",
										"statements": [
											{
												"assignments": [
													3269
												],
												"declarations": [
													{
														"constant": false,
														"id": 3269,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14245:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3346,
														"src": "14237:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14237:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3271,
												"initialValue": {
													"hexValue": "30",
													"id": 3270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14254:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14237:18:16"
											},
											{
												"id": 3343,
												"nodeType": "UncheckedBlock",
												"src": "14266:553:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3263,
																	"src": "14295:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14304:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14295:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14310:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14295:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3286,
														"nodeType": "IfStatement",
														"src": "14291:101:16",
														"trueBody": {
															"id": 3285,
															"nodeType": "Block",
															"src": "14313:79:16",
															"statements": [
																{
																	"expression": {
																		"id": 3279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3277,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3263,
																			"src": "14332:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14342:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14332:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3280,
																	"nodeType": "ExpressionStatement",
																	"src": "14332:13:16"
																},
																{
																	"expression": {
																		"id": 3283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3281,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3269,
																			"src": "14364:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14374:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14364:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3284,
																	"nodeType": "ExpressionStatement",
																	"src": "14364:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3263,
																	"src": "14410:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14419:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14410:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14424:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14410:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3301,
														"nodeType": "IfStatement",
														"src": "14406:98:16",
														"trueBody": {
															"id": 3300,
															"nodeType": "Block",
															"src": "14427:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 3294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3292,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3263,
																			"src": "14446:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14456:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14446:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3295,
																	"nodeType": "ExpressionStatement",
																	"src": "14446:12:16"
																},
																{
																	"expression": {
																		"id": 3298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3296,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3269,
																			"src": "14477:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14487:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14477:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3299,
																	"nodeType": "ExpressionStatement",
																	"src": "14477:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3302,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3263,
																	"src": "14522:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14531:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14522:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14536:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14522:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3316,
														"nodeType": "IfStatement",
														"src": "14518:98:16",
														"trueBody": {
															"id": 3315,
															"nodeType": "Block",
															"src": "14539:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 3309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3307,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3263,
																			"src": "14558:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14568:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14558:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3310,
																	"nodeType": "ExpressionStatement",
																	"src": "14558:12:16"
																},
																{
																	"expression": {
																		"id": 3313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3311,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3269,
																			"src": "14589:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14599:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14589:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3314,
																	"nodeType": "ExpressionStatement",
																	"src": "14589:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3317,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3263,
																	"src": "14634:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14643:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14634:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14648:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14634:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3331,
														"nodeType": "IfStatement",
														"src": "14630:98:16",
														"trueBody": {
															"id": 3330,
															"nodeType": "Block",
															"src": "14651:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 3324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3322,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3263,
																			"src": "14670:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14680:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14670:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3325,
																	"nodeType": "ExpressionStatement",
																	"src": "14670:12:16"
																},
																{
																	"expression": {
																		"id": 3328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3326,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3269,
																			"src": "14701:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14711:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14701:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3329,
																	"nodeType": "ExpressionStatement",
																	"src": "14701:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3263,
																	"src": "14746:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14755:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14746:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14759:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14746:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3342,
														"nodeType": "IfStatement",
														"src": "14742:66:16",
														"trueBody": {
															"id": 3341,
															"nodeType": "Block",
															"src": "14762:46:16",
															"statements": [
																{
																	"expression": {
																		"id": 3339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3337,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3269,
																			"src": "14781:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14791:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14781:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3340,
																	"nodeType": "ExpressionStatement",
																	"src": "14781:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3344,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3269,
													"src": "14836:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3267,
												"id": 3345,
												"nodeType": "Return",
												"src": "14829:13:16"
											}
										]
									},
									"documentation": {
										"id": 3261,
										"nodeType": "StructuredDocumentation",
										"src": "13906:251:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14172:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14187:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3347,
												"src": "14179:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:16"
									},
									"returnParameters": {
										"id": 3267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3347,
												"src": "14217:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14217:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14216:9:16"
									},
									"scope": 3405,
									"src": "14163:687:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3384,
										"nodeType": "Block",
										"src": "15093:182:16",
										"statements": [
											{
												"id": 3383,
												"nodeType": "UncheckedBlock",
												"src": "15104:164:16",
												"statements": [
													{
														"assignments": [
															3359
														],
														"declarations": [
															{
																"constant": false,
																"id": 3359,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15137:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3383,
																"src": "15129:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3358,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15129:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3363,
														"initialValue": {
															"arguments": [
																{
																	"id": 3361,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3350,
																	"src": "15153:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3360,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3347,
																	3385
																],
																"referencedDeclaration": 3347,
																"src": "15146:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15146:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15129:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3364,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3359,
																"src": "15181:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3366,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3353,
																						"src": "15208:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2362",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2362",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3365,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3404,
																					"src": "15191:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2362_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15191:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3368,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15221:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3371,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3369,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3359,
																									"src": "15227:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3370,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15237:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15227:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3372,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15226:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15221:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3374,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3350,
																					"src": "15242:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15221:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15191:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15254:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15191:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15250:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3380,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15190:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15181:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3357,
														"id": 3382,
														"nodeType": "Return",
														"src": "15174:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3348,
										"nodeType": "StructuredDocumentation",
										"src": "14858:147:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15020:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3350,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15035:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "15027:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15027:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3353,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15051:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "15042:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2362",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3351,
														"name": "Rounding",
														"nameLocations": [
															"15042:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2362,
														"src": "15042:8:16"
													},
													"referencedDeclaration": 2362,
													"src": "15042:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2362",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15026:34:16"
									},
									"returnParameters": {
										"id": 3357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "15084:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15084:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15083:9:16"
									},
									"scope": 3405,
									"src": "15011:264:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3403,
										"nodeType": "Block",
										"src": "15478:50:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3396,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3389,
																	"src": "15502:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2362",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2362",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15496:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3394,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15496:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15496:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15514:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15496:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15519:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15496:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3393,
												"id": 3402,
												"nodeType": "Return",
												"src": "15489:31:16"
											}
										]
									},
									"documentation": {
										"id": 3386,
										"nodeType": "StructuredDocumentation",
										"src": "15283:115:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15413:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3389,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15439:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "15430:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2362",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3387,
														"name": "Rounding",
														"nameLocations": [
															"15430:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2362,
														"src": "15430:8:16"
													},
													"referencedDeclaration": 2362,
													"src": "15430:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2362",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15429:19:16"
									},
									"returnParameters": {
										"id": 3393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "15472:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15472:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15471:6:16"
									},
									"scope": 3405,
									"src": "15404:124:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3406,
							"src": "211:15320:16",
							"usedErrors": [
								2357
							],
							"usedEvents": []
						}
					],
					"src": "106:15427:16"
				},
				"id": 16
			},
			"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3510
						]
					},
					"id": 3511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3407,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3408,
								"nodeType": "StructuredDocumentation",
								"src": "140:82:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3510,
							"linearizedBaseContracts": [
								3510
							],
							"name": "SignedMath",
							"nameLocation": "232:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3425,
										"nodeType": "Block",
										"src": "388:39:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3418,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3411,
															"src": "406:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3419,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3413,
															"src": "410:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "406:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3422,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3413,
														"src": "418:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "406:13:17",
													"trueExpression": {
														"id": 3421,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3411,
														"src": "414:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3417,
												"id": 3424,
												"nodeType": "Return",
												"src": "399:20:17"
											}
										]
									},
									"documentation": {
										"id": 3409,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "333:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "344:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "337:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3410,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "354:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "347:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3412,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:20:17"
									},
									"returnParameters": {
										"id": 3417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "380:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3415,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:17"
									},
									"scope": 3510,
									"src": "324:103:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3443,
										"nodeType": "Block",
										"src": "574:39:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3436,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3429,
															"src": "592:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3437,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3431,
															"src": "596:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "592:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3431,
														"src": "604:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "592:13:17",
													"trueExpression": {
														"id": 3439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3429,
														"src": "600:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3435,
												"id": 3442,
												"nodeType": "Return",
												"src": "585:20:17"
											}
										]
									},
									"documentation": {
										"id": 3427,
										"nodeType": "StructuredDocumentation",
										"src": "435:69:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "519:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "530:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3444,
												"src": "523:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3428,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "523:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "540:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3444,
												"src": "533:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3430,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:20:17"
									},
									"returnParameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3444,
												"src": "566:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3433,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:8:17"
									},
									"scope": 3510,
									"src": "510:103:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3487,
										"nodeType": "Block",
										"src": "824:166:17",
										"statements": [
											{
												"assignments": [
													3455
												],
												"declarations": [
													{
														"constant": false,
														"id": 3455,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "895:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3487,
														"src": "888:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3454,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "888:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3468,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3456,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3447,
																	"src": "900:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3457,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3449,
																	"src": "904:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "900:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3459,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "899:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3460,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3447,
																				"src": "911:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3461,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3449,
																				"src": "915:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "911:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3463,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "910:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "921:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "910:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3466,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "909:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "899:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3469,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3455,
														"src": "941:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3474,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3455,
																						"src": "961:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3473,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "953:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3472,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "953:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "953:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "967:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "953:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "946:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3470,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "946:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "946:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3479,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3447,
																				"src": "975:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3480,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3449,
																				"src": "979:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "975:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3482,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "974:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "946:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3484,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "945:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "941:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3453,
												"id": 3486,
												"nodeType": "Return",
												"src": "934:48:17"
											}
										]
									},
									"documentation": {
										"id": 3445,
										"nodeType": "StructuredDocumentation",
										"src": "621:129:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "765:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "780:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3488,
												"src": "773:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3446,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "790:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3488,
												"src": "783:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3448,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:20:17"
									},
									"returnParameters": {
										"id": 3453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3488,
												"src": "816:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3451,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:8:17"
									},
									"scope": 3510,
									"src": "756:234:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3508,
										"nodeType": "Block",
										"src": "1139:163:17",
										"statements": [
											{
												"id": 3507,
												"nodeType": "UncheckedBlock",
												"src": "1150:145:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3498,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3491,
																			"src": "1267:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1272:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1267:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1280:2:17",
																		"subExpression": {
																			"id": 3502,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3491,
																			"src": "1281:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1267:15:17",
																	"trueExpression": {
																		"id": 3501,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3491,
																		"src": "1276:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1259:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3496,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1259:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1259:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3495,
														"id": 3506,
														"nodeType": "Return",
														"src": "1252:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3489,
										"nodeType": "StructuredDocumentation",
										"src": "998:80:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1093:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3491,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1104:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3509,
												"src": "1097:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3490,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:10:17"
									},
									"returnParameters": {
										"id": 3495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3509,
												"src": "1130:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:9:17"
									},
									"scope": 3510,
									"src": "1084:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3511,
							"src": "224:1081:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:1195:17"
				},
				"id": 17
			},
			"src/MyNFT.sol": {
				"ast": {
					"absolutePath": "src/MyNFT.sol",
					"exportedSymbols": {
						"Context": [
							2060
						],
						"ERC165": [
							2339
						],
						"ERC721": [
							1325
						],
						"ERC721Enumerable": [
							1844
						],
						"ERC721URIStorage": [
							1970
						],
						"IERC165": [
							2351
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						],
						"IERC721Enumerable": [
							2002
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							2030
						],
						"IERC721Receiver": [
							1460
						],
						"MyNFT": [
							3637
						],
						"Ownable": [
							147
						],
						"Strings": [
							2315
						]
					},
					"id": 3638,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:18"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
							"file": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
							"id": 3513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3638,
							"sourceUnit": 1326,
							"src": "61:70:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 3514,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3638,
							"sourceUnit": 1845,
							"src": "133:91:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3638,
							"sourceUnit": 1971,
							"src": "226:91:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
							"file": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
							"id": 3516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3638,
							"sourceUnit": 148,
							"src": "319:65:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3517,
										"name": "ERC721",
										"nameLocations": [
											"406:6:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "406:6:18"
									},
									"id": 3518,
									"nodeType": "InheritanceSpecifier",
									"src": "406:6:18"
								},
								{
									"baseName": {
										"id": 3519,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"414:16:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1844,
										"src": "414:16:18"
									},
									"id": 3520,
									"nodeType": "InheritanceSpecifier",
									"src": "414:16:18"
								},
								{
									"baseName": {
										"id": 3521,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"432:16:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1970,
										"src": "432:16:18"
									},
									"id": 3522,
									"nodeType": "InheritanceSpecifier",
									"src": "432:16:18"
								},
								{
									"baseName": {
										"id": 3523,
										"name": "Ownable",
										"nameLocations": [
											"450:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "450:7:18"
									},
									"id": 3524,
									"nodeType": "InheritanceSpecifier",
									"src": "450:7:18"
								}
							],
							"canonicalName": "MyNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3637,
							"linearizedBaseContracts": [
								3637,
								147,
								1970,
								1844,
								2002,
								1325,
								269,
								2030,
								175,
								1442,
								2339,
								2351,
								2060
							],
							"name": "MyNFT",
							"nameLocation": "397:5:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3526,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "481:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 3637,
									"src": "465:28:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "465:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3537,
										"nodeType": "Block",
										"src": "559:2:18",
										"statements": []
									},
									"id": 3538,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d794e4654",
													"id": 3529,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "523:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_468b3d6a0127f01800703f6eaab73eb44c5dc1ea91cbcbbd87cb1a42f1460bb9",
														"typeString": "literal_string \"MyNFT\""
													},
													"value": "MyNFT"
												},
												{
													"hexValue": "4e4654",
													"id": 3530,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "532:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9c4138cd0a1311e4748f70d0fe3dc55f0f5f75e0f20db731225cbc3b8914016a",
														"typeString": "literal_string \"NFT\""
													},
													"value": "NFT"
												}
											],
											"id": 3531,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3528,
												"name": "ERC721",
												"nameLocations": [
													"516:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "516:6:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "516:22:18"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3533,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "547:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "551:6:18",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "547:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3535,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3532,
												"name": "Ownable",
												"nameLocations": [
													"539:7:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "539:7:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "539:19:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:18"
									},
									"returnParameters": {
										"id": 3536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:0:18"
									},
									"scope": 3637,
									"src": "502:59:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3562,
										"nodeType": "Block",
										"src": "635:121:18",
										"statements": [
											{
												"assignments": [
													3548
												],
												"declarations": [
													{
														"constant": false,
														"id": 3548,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "654:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3562,
														"src": "646:15:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3547,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "646:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3551,
												"initialValue": {
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "664:14:18",
													"subExpression": {
														"id": 3549,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3526,
														"src": "664:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "646:32:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3553,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3540,
															"src": "699:2:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3554,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3548,
															"src": "703:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3552,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 947,
														"src": "689:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "689:22:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3556,
												"nodeType": "ExpressionStatement",
												"src": "689:22:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3558,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3548,
															"src": "735:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3559,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3542,
															"src": "744:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3557,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "722:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "722:26:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3561,
												"nodeType": "ExpressionStatement",
												"src": "722:26:18"
											}
										]
									},
									"functionSelector": "d204c45e",
									"id": 3563,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3544,
												"name": "onlyOwner",
												"nameLocations": [
													"625:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "625:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "625:9:18"
										}
									],
									"name": "safeMint",
									"nameLocation": "578:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "595:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3563,
												"src": "587:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3542,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "613:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3563,
												"src": "599:17:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3541,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "599:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:31:18"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:0:18"
									},
									"scope": 3637,
									"src": "569:187:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										882,
										1659
									],
									"body": {
										"id": 3584,
										"nodeType": "Block",
										"src": "990:58:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3579,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3565,
															"src": "1022:2:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3580,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3567,
															"src": "1026:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3581,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3569,
															"src": "1035:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3577,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1008:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyNFT_$3637_$",
																"typeString": "type(contract super MyNFT)"
															}
														},
														"id": 3578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1014:7:18",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1659,
														"src": "1008:13:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 3582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1008:32:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3576,
												"id": 3583,
												"nodeType": "Return",
												"src": "1001:39:18"
											}
										]
									},
									"id": 3585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "843:7:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3573,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3571,
												"name": "ERC721",
												"nameLocations": [
													"946:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "946:6:18"
											},
											{
												"id": 3572,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"954:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1844,
												"src": "954:16:18"
											}
										],
										"src": "937:34:18"
									},
									"parameters": {
										"id": 3570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3565,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "869:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "861:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3567,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "890:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "882:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3569,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "916:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "908:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:77:18"
									},
									"returnParameters": {
										"id": 3576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "981:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:9:18"
									},
									"scope": 3637,
									"src": "834:214:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										792,
										1843
									],
									"body": {
										"id": 3602,
										"nodeType": "Block",
										"src": "1183:57:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3598,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3587,
															"src": "1217:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3599,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3589,
															"src": "1226:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 3595,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1194:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyNFT_$3637_$",
																"typeString": "type(contract super MyNFT)"
															}
														},
														"id": 3597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1200:16:18",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1843,
														"src": "1194:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 3600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1194:38:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3601,
												"nodeType": "ExpressionStatement",
												"src": "1194:38:18"
											}
										]
									},
									"id": 3603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "1065:16:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3593,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3591,
												"name": "ERC721",
												"nameLocations": [
													"1157:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1157:6:18"
											},
											{
												"id": 3592,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"1165:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1844,
												"src": "1165:16:18"
											}
										],
										"src": "1148:34:18"
									},
									"parameters": {
										"id": 3590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3587,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1100:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3603,
												"src": "1092:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1126:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3603,
												"src": "1118:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3588,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:57:18"
									},
									"returnParameters": {
										"id": 3594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1183:0:18"
									},
									"scope": 3637,
									"src": "1056:184:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										512,
										1950
									],
									"body": {
										"id": 3618,
										"nodeType": "Block",
										"src": "1370:49:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3615,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3605,
															"src": "1403:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3613,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1388:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyNFT_$3637_$",
																"typeString": "type(contract super MyNFT)"
															}
														},
														"id": 3614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1394:8:18",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1950,
														"src": "1388:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:23:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3612,
												"id": 3617,
												"nodeType": "Return",
												"src": "1381:30:18"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1257:8:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3609,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3607,
												"name": "ERC721",
												"nameLocations": [
													"1320:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1320:6:18"
											},
											{
												"id": 3608,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1328:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "1328:16:18"
											}
										],
										"src": "1311:34:18"
									},
									"parameters": {
										"id": 3606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3605,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1284:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3619,
												"src": "1276:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:33:18"
									},
									"returnParameters": {
										"id": 3612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3619,
												"src": "1355:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1355:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:15:18"
									},
									"scope": 3637,
									"src": "1248:171:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										417,
										1524,
										1893
									],
									"body": {
										"id": 3635,
										"nodeType": "Block",
										"src": "1611:62:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3632,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3621,
															"src": "1653:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3630,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1629:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyNFT_$3637_$",
																"typeString": "type(contract super MyNFT)"
															}
														},
														"id": 3631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1635:17:18",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1893,
														"src": "1629:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1629:36:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3629,
												"id": 3634,
												"nodeType": "Return",
												"src": "1622:43:18"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1436:17:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3626,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3623,
												"name": "ERC721",
												"nameLocations": [
													"1538:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1538:6:18"
											},
											{
												"id": 3624,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"1546:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1844,
												"src": "1546:16:18"
											},
											{
												"id": 3625,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1564:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "1564:16:18"
											}
										],
										"src": "1529:52:18"
									},
									"parameters": {
										"id": 3622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3621,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1471:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3636,
												"src": "1464:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3620,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1464:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1453:36:18"
									},
									"returnParameters": {
										"id": 3629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3636,
												"src": "1600:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1600:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:6:18"
									},
									"scope": 3637,
									"src": "1427:246:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3638,
							"src": "388:1296:18",
							"usedErrors": [
								13,
								18,
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268,
								1497,
								1500
							],
							"usedEvents": [
								24,
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "33:1653:18"
				},
				"id": 18
			}
		}
	}
}