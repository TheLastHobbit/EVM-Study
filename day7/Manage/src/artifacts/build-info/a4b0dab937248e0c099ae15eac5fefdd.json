{
	"id": "a4b0dab937248e0c099ae15eac5fefdd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/"
			]
		},
		"sources": {
			"src/MyERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\";\r\n// import {NFTMarket} from \"./Market.sol\";\r\nimport {ItokenRecieved} from\"./ItokenRecieved.sol\";\r\ncontract MyERC20 is ERC20 {\r\n    constructor() ERC20(\"MyToken\", \"MTK\") {\r\n       _mint(msg.sender, 1 * 10 ** 8 * 10 **decimals());\r\n    }\r\n\r\n    function _isContract(address _address) internal view returns (bool) {\r\n    uint32 size;\r\n    assembly {\r\n        size := extcodesize(_address)\r\n    }\r\n    return (size > 0);\r\n    }\r\n\r\n     function transferFrom(address from, address to, uint256 value) public override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferWithCallback(address to,uint256 amount,uint256 id) external{\r\n        _transfer(msg.sender,to,amount);\r\n        ItokenRecieved(to).tokenRecieve(msg.sender,amount,id);\r\n       \r\n    }\r\n}"
			},
			"src/ItokenRecieved.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\r\npragma solidity ^0.8.20;\r\ninterface ItokenRecieved {\r\n     function tokenRecieve(address from,uint256 value,uint256 _id) external ; \r\n} "
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     * ```\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"../IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af\",\"dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/ItokenRecieved.sol": {
				"ItokenRecieved": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "tokenRecieve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokenRecieve(address,uint256,uint256)": "171f1760"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"tokenRecieve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ItokenRecieved.sol\":\"ItokenRecieved\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/ItokenRecieved.sol\":{\"keccak256\":\"0x289b53d1b3b391cb3714cc27fab5e24ea793b9f336ccc2e453905bd5c5cb0da0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04e47f0b56d1287bb0be917afb0f365058c6a433934be377a69cf98858d546dc\",\"dweb:/ipfs/QmQQJYtFsW4UbyrnKdnmfSnLnGVDFPFUYxEwivZnY49YPd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/MyERC20.sol": {
				"MyERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "transferWithCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/MyERC20.sol\":226:1022  contract MyERC20 is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/MyERC20.sol\":259:363  constructor() ERC20(\"MyToken\", \"MTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1945:2061  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d544b)\n  dup2\n  mstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2020:2025  name_ */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2012:2017  _name */\n  0x03\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2012:2025  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2036:2043  _symbol */\n  0x04\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2036:2053  _symbol = symbol_ */\n  tag_7\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2046:2053  symbol_ */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2036:2043  _symbol */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2036:2053  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1945:2061  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"src/MyERC20.sol\":307:355  _mint(msg.sender, 1 * 10 ** 8 * 10 **decimals()) */\n  tag_9\n    /* \"src/MyERC20.sol\":313:323  msg.sender */\n  caller\n    /* \"src/MyERC20.sol\":344:354  decimals() */\n  tag_10\n    /* \"src/MyERC20.sol\":344:352  decimals */\n  shl(0x20, tag_11)\n    /* \"src/MyERC20.sol\":344:354  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"src/MyERC20.sol\":339:354  10 **decimals() */\n  tag_12\n  swap1\n    /* \"src/MyERC20.sol\":339:341  10 */\n  0x0a\n    /* \"src/MyERC20.sol\":339:354  10 **decimals() */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"src/MyERC20.sol\":325:354  1 * 10 ** 8 * 10 **decimals() */\n  tag_14\n  swap1\n    /* \"src/MyERC20.sol\":325:336  1 * 10 ** 8 */\n  0x05f5e100\n    /* \"src/MyERC20.sol\":325:354  1 * 10 ** 8 * 10 **decimals() */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"src/MyERC20.sol\":307:312  _mint */\n  tag_16\n    /* \"src/MyERC20.sol\":307:355  _mint(msg.sender, 1 * 10 ** 8 * 10 **decimals()) */\n  jump\t// in\ntag_9:\n    /* \"src/MyERC20.sol\":226:1022  contract MyERC20 is ERC20 {... */\n  jump(tag_45)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3084:3168  function decimals() public view virtual returns (uint8) {... */\ntag_11:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3158:3160  18 */\n  0x12\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3084:3168  function decimals() public view virtual returns (uint8) {... */\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7946:8159  function _mint(address account, uint256 value) internal {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8017:8038  account == address(0) */\n  dup3\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8013:8106  if (account == address(0)) {... */\n  tag_20\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8062:8094  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8091:8092  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8062:8094  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4529:4580   */\n  mstore\n    /* \"#utility.yul\":4502:4520   */\n  0x24\n  add\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8062:8094  ERC20InvalidReceiver(address(0)) */\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8013:8106  if (account == address(0)) {... */\ntag_20:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8116:8151  _update(address(0), account, value) */\n  tag_23\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8132:8133  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8136:8143  account */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8145:8150  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8116:8123  _update */\n  tag_24\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8116:8151  _update(address(0), account, value) */\n  jump\t// in\ntag_23:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7946:8159  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6458:7593  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6548:6566  from == address(0) */\n  dup4\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6544:7096  if (from == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6702:6707  value */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6686:6698  _totalSupply */\n  0x02\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6686:6707  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6544:7096  if (from == address(0)) {... */\n  tag_29\n  swap1\n  pop\n  jump\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6762:6777  _balances[from] */\n  dup4\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6740:6759  uint256 fromBalance */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6762:6777  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6796:6815  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6792:6909  if (fromBalance < value) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6843:6893  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4941:4973   */\n  dup6\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6843:6893  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4923:4974   */\n  mstore\n    /* \"#utility.yul\":4990:5008   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4983:5017   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5033:5051   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5026:5060   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4896:4914   */\n  0x64\n  add\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6843:6893  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_21\n    /* \"#utility.yul\":4721:5066   */\n  jump\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6792:6909  if (fromBalance < value) {... */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7032:7047  _balances[from] */\n  dup5\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7032:7041  _balances */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7032:7047  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7050:7069  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7032:7069  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6544:7096  if (from == address(0)) {... */\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7112:7128  to == address(0) */\n  dup3\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7108:7543  if (to == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7278:7290  _totalSupply */\n  0x02\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7278:7299  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7108:7543  if (to == address(0)) {... */\n  jump(tag_34)\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7494:7507  _balances[to] */\n  dup3\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7494:7503  _balances */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7494:7507  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7494:7516  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7108:7543  if (to == address(0)) {... */\ntag_34:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7575:7577  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7560:7585  Transfer(from, to, value) */\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7569:7573  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7560:7585  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7579:7584  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7560:7585  Transfer(from, to, value) */\n  mload(0x40)\n  tag_35\n  swap2\n    /* \"#utility.yul\":5217:5242   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5205:5207   */\n  0x20\n    /* \"#utility.yul\":5190:5208   */\n  add\n  swap1\n    /* \"#utility.yul\":5071:5248   */\n  jump\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7560:7585  Transfer(from, to, value) */\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6458:7593  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_37:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_38:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_48:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_49:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_40:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_53:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_54:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_52:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_60\n  tag_37\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1555:1652   */\n  tag_61\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_62\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_38\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_40\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_65:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_63)\n    /* \"#utility.yul\":1776:2439   */\ntag_64:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_68:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_71:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_63:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2701:2828   */\ntag_42:\n    /* \"#utility.yul\":2762:2772   */\n  0x4e487b71\n    /* \"#utility.yul\":2757:2760   */\n  0xe0\n    /* \"#utility.yul\":2753:2773   */\n  shl\n    /* \"#utility.yul\":2750:2751   */\n  0x00\n    /* \"#utility.yul\":2743:2774   */\n  mstore\n    /* \"#utility.yul\":2793:2797   */\n  0x11\n    /* \"#utility.yul\":2790:2791   */\n  0x04\n    /* \"#utility.yul\":2783:2798   */\n  mstore\n    /* \"#utility.yul\":2817:2821   */\n  0x24\n    /* \"#utility.yul\":2814:2815   */\n  0x00\n    /* \"#utility.yul\":2807:2822   */\n  revert\n    /* \"#utility.yul\":2833:3249   */\ntag_43:\n    /* \"#utility.yul\":2922:2923   */\n  0x01\n    /* \"#utility.yul\":2959:2964   */\n  dup2\n    /* \"#utility.yul\":2922:2923   */\n  dup2\n    /* \"#utility.yul\":2973:3243   */\ntag_74:\n    /* \"#utility.yul\":2994:3001   */\n  dup1\n    /* \"#utility.yul\":2984:2992   */\n  dup6\n    /* \"#utility.yul\":2981:3002   */\n  gt\n    /* \"#utility.yul\":2973:3243   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3053:3057   */\n  dup2\n    /* \"#utility.yul\":3049:3050   */\n  0x00\n    /* \"#utility.yul\":3045:3051   */\n  not\n    /* \"#utility.yul\":3041:3058   */\n  div\n    /* \"#utility.yul\":3035:3039   */\n  dup3\n    /* \"#utility.yul\":3032:3059   */\n  gt\n    /* \"#utility.yul\":3029:3082   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3062:3080   */\n  tag_78\n  tag_42\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3112:3119   */\n  dup1\n    /* \"#utility.yul\":3102:3110   */\n  dup6\n    /* \"#utility.yul\":3098:3120   */\n  and\n    /* \"#utility.yul\":3095:3150   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3132:3148   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3095:3150   */\ntag_79:\n    /* \"#utility.yul\":3211:3233   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3171:3186   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":2973:3243   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":2977:2980   */\n  pop\n    /* \"#utility.yul\":2833:3249   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3254:4060   */\ntag_44:\n    /* \"#utility.yul\":3303:3308   */\n  0x00\n    /* \"#utility.yul\":3333:3341   */\n  dup3\n    /* \"#utility.yul\":3323:3403   */\n  tag_81\n  jumpi\n  pop\n    /* \"#utility.yul\":3374:3375   */\n  0x01\n    /* \"#utility.yul\":3388:3393   */\n  jump(tag_80)\n    /* \"#utility.yul\":3323:3403   */\ntag_81:\n    /* \"#utility.yul\":3422:3426   */\n  dup2\n    /* \"#utility.yul\":3412:3488   */\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":3459:3460   */\n  0x00\n    /* \"#utility.yul\":3473:3478   */\n  jump(tag_80)\n    /* \"#utility.yul\":3412:3488   */\ntag_82:\n    /* \"#utility.yul\":3504:3508   */\n  dup2\n    /* \"#utility.yul\":3522:3523   */\n  0x01\n    /* \"#utility.yul\":3517:3576   */\n  dup2\n  eq\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3590:3591   */\n  0x02\n    /* \"#utility.yul\":3585:3715   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3497:3715   */\n  jump(tag_83)\n    /* \"#utility.yul\":3517:3576   */\ntag_84:\n    /* \"#utility.yul\":3547:3548   */\n  0x01\n    /* \"#utility.yul\":3538:3548   */\n  swap2\n  pop\n    /* \"#utility.yul\":3561:3566   */\n  pop\n  jump(tag_80)\n    /* \"#utility.yul\":3585:3715   */\ntag_85:\n    /* \"#utility.yul\":3622:3625   */\n  0xff\n    /* \"#utility.yul\":3612:3620   */\n  dup5\n    /* \"#utility.yul\":3609:3626   */\n  gt\n    /* \"#utility.yul\":3606:3649   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3629:3647   */\n  tag_87\n  tag_42\n  jump\t// in\ntag_87:\n  pop\n  pop\n    /* \"#utility.yul\":3685:3686   */\n  0x01\n    /* \"#utility.yul\":3671:3687   */\n  dup3\n  shl\n    /* \"#utility.yul\":3700:3705   */\n  jump(tag_80)\n    /* \"#utility.yul\":3497:3715   */\ntag_83:\n  pop\n    /* \"#utility.yul\":3799:3801   */\n  0x20\n    /* \"#utility.yul\":3789:3797   */\n  dup4\n    /* \"#utility.yul\":3786:3802   */\n  lt\n    /* \"#utility.yul\":3780:3783   */\n  0x0133\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3771:3784   */\n  lt\n    /* \"#utility.yul\":3767:3803   */\n  and\n    /* \"#utility.yul\":3761:3763   */\n  0x4e\n    /* \"#utility.yul\":3751:3759   */\n  dup5\n    /* \"#utility.yul\":3748:3764   */\n  lt\n    /* \"#utility.yul\":3743:3745   */\n  0x0b\n    /* \"#utility.yul\":3737:3741   */\n  dup5\n    /* \"#utility.yul\":3734:3746   */\n  lt\n    /* \"#utility.yul\":3730:3765   */\n  and\n    /* \"#utility.yul\":3727:3804   */\n  or\n    /* \"#utility.yul\":3724:3883   */\n  iszero\n  tag_88\n  jumpi\n  pop\n    /* \"#utility.yul\":3836:3855   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3868:3873   */\n  jump(tag_80)\n    /* \"#utility.yul\":3724:3883   */\ntag_88:\n    /* \"#utility.yul\":3915:3949   */\n  tag_89\n    /* \"#utility.yul\":3940:3948   */\n  dup4\n    /* \"#utility.yul\":3934:3938   */\n  dup4\n    /* \"#utility.yul\":3915:3949   */\n  tag_43\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3985:3991   */\n  dup1\n    /* \"#utility.yul\":3981:3982   */\n  0x00\n    /* \"#utility.yul\":3977:3983   */\n  not\n    /* \"#utility.yul\":3973:3992   */\n  div\n    /* \"#utility.yul\":3964:3971   */\n  dup3\n    /* \"#utility.yul\":3961:3993   */\n  gt\n    /* \"#utility.yul\":3958:4016   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3996:4014   */\n  tag_91\n  tag_42\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4034:4054   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3254:4060   */\ntag_80:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4065:4205   */\ntag_13:\n    /* \"#utility.yul\":4123:4128   */\n  0x00\n    /* \"#utility.yul\":4152:4199   */\n  tag_93\n    /* \"#utility.yul\":4193:4197   */\n  0xff\n    /* \"#utility.yul\":4183:4191   */\n  dup5\n    /* \"#utility.yul\":4179:4198   */\n  and\n    /* \"#utility.yul\":4173:4177   */\n  dup4\n    /* \"#utility.yul\":4152:4199   */\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4143:4199   */\n  swap4\n    /* \"#utility.yul\":4065:4205   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4210:4378   */\ntag_15:\n    /* \"#utility.yul\":4283:4292   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4314:4323   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4331:4346   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4325:4347   */\n  dup5\n  eq\n    /* \"#utility.yul\":4311:4348   */\n  or\n    /* \"#utility.yul\":4301:4372   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4352:4370   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":4591:4716   */\ntag_28:\n    /* \"#utility.yul\":4656:4665   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4677:4687   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4674:4710   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4690:4708   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":5071:5248   */\ntag_45:\n    /* \"src/MyERC20.sol\":226:1022  contract MyERC20 is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/MyERC20.sol\":226:1022  contract MyERC20 is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0d0b17ea\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2131:2222  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4424:4614  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4424:4614  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"src/MyERC20.sol\":820:1019  function transferWithCallback(address to,uint256 amount,uint256 id) external{... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3233:3332  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3312:3324  _totalSupply */\n      sload(0x02)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3233:3332  function totalSupply() public view virtual returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1669:1694   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1657:1659   */\n      0x20\n        /* \"#utility.yul\":1642:1660   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3233:3332  function totalSupply() public view virtual returns (uint256) {... */\n      tag_16\n        /* \"#utility.yul\":1523:1700   */\n      jump\n        /* \"src/MyERC20.sol\":560:810  function transferFrom(address from, address to, uint256 value) public override returns (bool) {... */\n    tag_7:\n      tag_18\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3084:3168  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3158:3160  18 */\n      0x12\n        /* \"#utility.yul\":2180:2216   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2168:2170   */\n      0x20\n        /* \"#utility.yul\":2153:2171   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3084:3168  function decimals() public view virtual returns (uint8) {... */\n      tag_16\n        /* \"#utility.yul\":2038:2222   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3395:3513  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_28\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3487:3505  _balances[account] */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3460:3467  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3487:3505  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3395:3513  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2341:2436  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_14\n      tag_47\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3718:3900  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_18\n      tag_50\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3963:4105  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_28\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4088  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4043:4050  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4088  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4081  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4088  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4097  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3963:4105  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2131:2222  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2176:2189  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2209:2214  _name */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2202:2214  return _name */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_61\n      swap1\n      tag_60\n      jump\t// in\n    tag_61:\n      dup1\n      iszero\n      tag_62\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_63\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_62)\n    tag_63:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_64:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_64\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2131:2222  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4424:4614  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4497:4501  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4553:4584  _approve(owner, spender, value) */\n      tag_68\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4569:4576  spender */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4578:4583  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4553:4561  _approve */\n      tag_69\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4553:4584  _approve(owner, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4602:4606  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4595:4606  return true */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4424:4614  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_65:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/MyERC20.sol\":820:1019  function transferWithCallback(address to,uint256 amount,uint256 id) external{... */\n    tag_27:\n        /* \"src/MyERC20.sol\":907:938  _transfer(msg.sender,to,amount) */\n      tag_71\n        /* \"src/MyERC20.sol\":917:927  msg.sender */\n      caller\n        /* \"src/MyERC20.sol\":928:930  to */\n      dup5\n        /* \"src/MyERC20.sol\":931:937  amount */\n      dup5\n        /* \"src/MyERC20.sol\":907:916  _transfer */\n      tag_72\n        /* \"src/MyERC20.sol\":907:938  _transfer(msg.sender,to,amount) */\n      jump\t// in\n    tag_71:\n        /* \"src/MyERC20.sol\":949:1002  ItokenRecieved(to).tokenRecieve(msg.sender,amount,id) */\n      mload(0x40)\n      shl(0xe5, 0xb8f8bb)\n      dup2\n      mstore\n        /* \"src/MyERC20.sol\":981:991  msg.sender */\n      caller\n        /* \"src/MyERC20.sol\":949:1002  ItokenRecieved(to).tokenRecieve(msg.sender,amount,id) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3270:3321   */\n      mstore\n        /* \"#utility.yul\":3337:3355   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3330:3364   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3380:3398   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3373:3407   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MyERC20.sol\":949:980  ItokenRecieved(to).tokenRecieve */\n      dup5\n      and\n      swap1\n      0x171f1760\n      swap1\n        /* \"#utility.yul\":3243:3261   */\n      0x64\n      add\n        /* \"src/MyERC20.sol\":949:1002  ItokenRecieved(to).tokenRecieve(msg.sender,amount,id) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/MyERC20.sol\":820:1019  function transferWithCallback(address to,uint256 amount,uint256 id) external{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MyERC20.sol\":560:810  function transferFrom(address from, address to, uint256 value) public override returns (bool) {... */\n    tag_35:\n        /* \"src/MyERC20.sol\":648:652  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"src/MyERC20.sol\":706:743  _spendAllowance(from, spender, value) */\n      tag_81\n        /* \"src/MyERC20.sol\":722:726  from */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      dup3\n        /* \"src/MyERC20.sol\":737:742  value */\n      dup6\n        /* \"src/MyERC20.sol\":706:721  _spendAllowance */\n      tag_82\n        /* \"src/MyERC20.sol\":706:743  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_81:\n        /* \"src/MyERC20.sol\":754:780  _transfer(from, to, value) */\n      tag_83\n        /* \"src/MyERC20.sol\":764:768  from */\n      dup6\n        /* \"src/MyERC20.sol\":770:772  to */\n      dup6\n        /* \"src/MyERC20.sol\":774:779  value */\n      dup6\n        /* \"src/MyERC20.sol\":754:763  _transfer */\n      tag_72\n        /* \"src/MyERC20.sol\":754:780  _transfer(from, to, value) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"src/MyERC20.sol\":798:802  true */\n      0x01\n      swap5\n        /* \"src/MyERC20.sol\":560:810  function transferFrom(address from, address to, uint256 value) public override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2341:2436  function symbol() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2388:2401  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2421:2428  _symbol */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2414:2428  return _symbol */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3718:3900  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3787:3791  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3843:3870  _transfer(owner, to, value) */\n      tag_68\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3860:3862  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3864:3869  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3843:3852  _transfer */\n      tag_72\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3843:3870  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9251:9381  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_69:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9336:9373  _approve(owner, spender, value, true) */\n      tag_98\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9345:9350  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9352:9359  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9361:9366  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9368:9372  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9336:9344  _approve */\n      tag_99\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9336:9373  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_98:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9251:9381  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5826:6134  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5910:5928  from == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5906:5994  if (from == address(0)) {... */\n      tag_101\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5952:5982  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5979:5980  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5952:5982  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3564:3615   */\n      mstore\n        /* \"#utility.yul\":3537:3555   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5952:5982  ERC20InvalidSender(address(0)) */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5906:5994  if (from == address(0)) {... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6008:6024  to == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6004:6092  if (to == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6048:6080  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6077:6078  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6048:6080  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3564:3615   */\n      mstore\n        /* \"#utility.yul\":3537:3555   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6048:6080  ERC20InvalidReceiver(address(0)) */\n      tag_102\n        /* \"#utility.yul\":3418:3621   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6004:6092  if (to == address(0)) {... */\n    tag_104:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6102:6126  _update(from, to, value) */\n      tag_98\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6110:6114  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6116:6118  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6120:6125  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6102:6109  _update */\n      tag_107\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6102:6126  _update(from, to, value) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10967:11454  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4088  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11067:11091  uint256 currentAllowance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4088  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4081  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4088  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4070:4097  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11134:11171  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11130:11447  if (currentAllowance != type(uint256).max) {... */\n      tag_113\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11211:11216  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11192:11208  currentAllowance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11192:11216  currentAllowance < value */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11188:11320  if (currentAllowance < value) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11244:11304  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3288:3320   */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11244:11304  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3270:3321   */\n      mstore\n        /* \"#utility.yul\":3337:3355   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3330:3364   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3380:3398   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3373:3407   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3243:3261   */\n      0x64\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11244:11304  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_102\n        /* \"#utility.yul\":3068:3413   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11188:11320  if (currentAllowance < value) {... */\n    tag_111:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11363:11420  _approve(owner, spender, currentAllowance - value, false) */\n      tag_113\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11372:11377  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11379:11386  spender */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11407:11412  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11388:11404  currentAllowance */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11388:11412  currentAllowance - value */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11414:11419  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11363:11371  _approve */\n      tag_99\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11363:11420  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_113:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11056:11454  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10967:11454  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10232:10675  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10345:10364  owner == address(0) */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10341:10432  if (owner == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10388:10420  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10417:10418  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10388:10420  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3564:3615   */\n      mstore\n        /* \"#utility.yul\":3537:3555   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10388:10420  ERC20InvalidApprover(address(0)) */\n      tag_102\n        /* \"#utility.yul\":3418:3621   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10341:10432  if (owner == address(0)) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10446:10467  spender == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10442:10534  if (spender == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10491:10522  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10519:10520  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10491:10522  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3564:3615   */\n      mstore\n        /* \"#utility.yul\":3537:3555   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10491:10522  ERC20InvalidSpender(address(0)) */\n      tag_102\n        /* \"#utility.yul\":3418:3621   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10442:10534  if (spender == address(0)) {... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10544:10562  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10544:10555  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10544:10562  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10544:10571  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10544:10579  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10590:10668  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_113\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10641:10648  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10625:10656  Approval(owner, spender, value) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10634:10639  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10625:10656  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10650:10655  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10625:10656  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_120\n      swap2\n        /* \"#utility.yul\":1669:1694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1657:1659   */\n      0x20\n        /* \"#utility.yul\":1642:1660   */\n      add\n      swap1\n        /* \"#utility.yul\":1523:1700   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10625:10656  Approval(owner, spender, value) */\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10232:10675  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6458:7593  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6548:6566  from == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6544:7096  if (from == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6702:6707  value */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6686:6698  _totalSupply */\n      0x02\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6686:6707  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6544:7096  if (from == address(0)) {... */\n      tag_125\n      swap1\n      pop\n      jump\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6762:6777  _balances[from] */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6740:6759  uint256 fromBalance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6762:6777  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6796:6815  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6792:6909  if (fromBalance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6843:6893  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3288:3320   */\n      dup6\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6843:6893  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3270:3321   */\n      mstore\n        /* \"#utility.yul\":3337:3355   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3330:3364   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3380:3398   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3373:3407   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3243:3261   */\n      0x64\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6843:6893  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_102\n        /* \"#utility.yul\":3068:3413   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6792:6909  if (fromBalance < value) {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7032:7047  _balances[from] */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7032:7041  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7032:7047  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7050:7069  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7032:7069  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6544:7096  if (from == address(0)) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7112:7128  to == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7108:7543  if (to == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7278:7290  _totalSupply */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7278:7299  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7108:7543  if (to == address(0)) {... */\n      jump(tag_129)\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7494:7507  _balances[to] */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7494:7503  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7494:7507  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7494:7516  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7108:7543  if (to == address(0)) {... */\n    tag_129:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7575:7577  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7560:7585  Transfer(from, to, value) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7569:7573  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7560:7585  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7579:7584  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7560:7585  Transfer(from, to, value) */\n      mload(0x40)\n      tag_130\n      swap2\n        /* \"#utility.yul\":1669:1694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1657:1659   */\n      0x20\n        /* \"#utility.yul\":1642:1660   */\n      add\n      swap1\n        /* \"#utility.yul\":1523:1700   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7560:7585  Transfer(from, to, value) */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6458:7593  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_17:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_134:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_134)\n    tag_136:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_131:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_138:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_20:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_140:\n        /* \"#utility.yul\":913:942   */\n      tag_141\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_131\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1196:1518   */\n    tag_26:\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1281:1287   */\n      dup1\n        /* \"#utility.yul\":1289:1295   */\n      0x00\n        /* \"#utility.yul\":1342:1344   */\n      0x60\n        /* \"#utility.yul\":1330:1339   */\n      dup5\n        /* \"#utility.yul\":1321:1328   */\n      dup7\n        /* \"#utility.yul\":1317:1340   */\n      sub\n        /* \"#utility.yul\":1313:1345   */\n      slt\n        /* \"#utility.yul\":1310:1362   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":1358:1359   */\n      0x00\n        /* \"#utility.yul\":1355:1356   */\n      dup1\n        /* \"#utility.yul\":1348:1360   */\n      revert\n        /* \"#utility.yul\":1310:1362   */\n    tag_144:\n        /* \"#utility.yul\":1381:1410   */\n      tag_145\n        /* \"#utility.yul\":1400:1409   */\n      dup5\n        /* \"#utility.yul\":1381:1410   */\n      tag_131\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1371:1410   */\n      swap6\n        /* \"#utility.yul\":1457:1459   */\n      0x20\n        /* \"#utility.yul\":1442:1460   */\n      dup6\n      add\n        /* \"#utility.yul\":1429:1461   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1508:1510   */\n      0x40\n        /* \"#utility.yul\":1493:1511   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":1480:1512   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1196:1518   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1705:2033   */\n    tag_34:\n        /* \"#utility.yul\":1782:1788   */\n      0x00\n        /* \"#utility.yul\":1790:1796   */\n      dup1\n        /* \"#utility.yul\":1798:1804   */\n      0x00\n        /* \"#utility.yul\":1851:1853   */\n      0x60\n        /* \"#utility.yul\":1839:1848   */\n      dup5\n        /* \"#utility.yul\":1830:1837   */\n      dup7\n        /* \"#utility.yul\":1826:1849   */\n      sub\n        /* \"#utility.yul\":1822:1854   */\n      slt\n        /* \"#utility.yul\":1819:1871   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      dup1\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":1819:1871   */\n    tag_148:\n        /* \"#utility.yul\":1890:1919   */\n      tag_149\n        /* \"#utility.yul\":1909:1918   */\n      dup5\n        /* \"#utility.yul\":1890:1919   */\n      tag_131\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1880:1919   */\n      swap3\n      pop\n        /* \"#utility.yul\":1938:1976   */\n      tag_150\n        /* \"#utility.yul\":1972:1974   */\n      0x20\n        /* \"#utility.yul\":1961:1970   */\n      dup6\n        /* \"#utility.yul\":1957:1975   */\n      add\n        /* \"#utility.yul\":1938:1976   */\n      tag_131\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1928:1976   */\n      swap2\n      pop\n        /* \"#utility.yul\":2023:2025   */\n      0x40\n        /* \"#utility.yul\":2012:2021   */\n      dup5\n        /* \"#utility.yul\":2008:2026   */\n      add\n        /* \"#utility.yul\":1995:2027   */\n      calldataload\n        /* \"#utility.yul\":1985:2027   */\n      swap1\n      pop\n        /* \"#utility.yul\":1705:2033   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2227:2413   */\n    tag_43:\n        /* \"#utility.yul\":2286:2292   */\n      0x00\n        /* \"#utility.yul\":2339:2341   */\n      0x20\n        /* \"#utility.yul\":2327:2336   */\n      dup3\n        /* \"#utility.yul\":2318:2325   */\n      dup5\n        /* \"#utility.yul\":2314:2337   */\n      sub\n        /* \"#utility.yul\":2310:2342   */\n      slt\n        /* \"#utility.yul\":2307:2359   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":2355:2356   */\n      0x00\n        /* \"#utility.yul\":2352:2353   */\n      dup1\n        /* \"#utility.yul\":2345:2357   */\n      revert\n        /* \"#utility.yul\":2307:2359   */\n    tag_153:\n        /* \"#utility.yul\":2378:2407   */\n      tag_154\n        /* \"#utility.yul\":2397:2406   */\n      dup3\n        /* \"#utility.yul\":2378:2407   */\n      tag_131\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2368:2407   */\n      swap4\n        /* \"#utility.yul\":2227:2413   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2418:2678   */\n    tag_55:\n        /* \"#utility.yul\":2486:2492   */\n      0x00\n        /* \"#utility.yul\":2494:2500   */\n      dup1\n        /* \"#utility.yul\":2547:2549   */\n      0x40\n        /* \"#utility.yul\":2535:2544   */\n      dup4\n        /* \"#utility.yul\":2526:2533   */\n      dup6\n        /* \"#utility.yul\":2522:2545   */\n      sub\n        /* \"#utility.yul\":2518:2550   */\n      slt\n        /* \"#utility.yul\":2515:2567   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":2563:2564   */\n      0x00\n        /* \"#utility.yul\":2560:2561   */\n      dup1\n        /* \"#utility.yul\":2553:2565   */\n      revert\n        /* \"#utility.yul\":2515:2567   */\n    tag_156:\n        /* \"#utility.yul\":2586:2615   */\n      tag_157\n        /* \"#utility.yul\":2605:2614   */\n      dup4\n        /* \"#utility.yul\":2586:2615   */\n      tag_131\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2576:2615   */\n      swap2\n      pop\n        /* \"#utility.yul\":2634:2672   */\n      tag_158\n        /* \"#utility.yul\":2668:2670   */\n      0x20\n        /* \"#utility.yul\":2657:2666   */\n      dup5\n        /* \"#utility.yul\":2653:2671   */\n      add\n        /* \"#utility.yul\":2634:2672   */\n      tag_131\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2624:2672   */\n      swap1\n      pop\n        /* \"#utility.yul\":2418:2678   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2683:3063   */\n    tag_60:\n        /* \"#utility.yul\":2762:2763   */\n      0x01\n        /* \"#utility.yul\":2758:2770   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2805:2817   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2826:2887   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2880:2884   */\n      0x7f\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2868:2885   */\n      and\n        /* \"#utility.yul\":2858:2885   */\n      swap2\n      pop\n        /* \"#utility.yul\":2826:2887   */\n    tag_160:\n        /* \"#utility.yul\":2933:2935   */\n      0x20\n        /* \"#utility.yul\":2925:2931   */\n      dup3\n        /* \"#utility.yul\":2922:2936   */\n      lt\n        /* \"#utility.yul\":2902:2920   */\n      dup2\n        /* \"#utility.yul\":2899:2937   */\n      sub\n        /* \"#utility.yul\":2896:3057   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2979:2989   */\n      0x4e487b71\n        /* \"#utility.yul\":2974:2977   */\n      0xe0\n        /* \"#utility.yul\":2970:2990   */\n      shl\n        /* \"#utility.yul\":2967:2968   */\n      0x00\n        /* \"#utility.yul\":2960:2991   */\n      mstore\n        /* \"#utility.yul\":3014:3018   */\n      0x22\n        /* \"#utility.yul\":3011:3012   */\n      0x04\n        /* \"#utility.yul\":3004:3019   */\n      mstore\n        /* \"#utility.yul\":3042:3046   */\n      0x24\n        /* \"#utility.yul\":3039:3040   */\n      0x00\n        /* \"#utility.yul\":3032:3047   */\n      revert\n        /* \"#utility.yul\":2896:3057   */\n    tag_161:\n      pop\n        /* \"#utility.yul\":2683:3063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3848   */\n    tag_124:\n        /* \"#utility.yul\":3691:3700   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3712:3722   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3709:3842   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":3764:3774   */\n      0x4e487b71\n        /* \"#utility.yul\":3759:3762   */\n      0xe0\n        /* \"#utility.yul\":3755:3775   */\n      shl\n        /* \"#utility.yul\":3752:3753   */\n      0x00\n        /* \"#utility.yul\":3745:3776   */\n      mstore\n        /* \"#utility.yul\":3799:3803   */\n      0x11\n        /* \"#utility.yul\":3796:3797   */\n      0x04\n        /* \"#utility.yul\":3789:3804   */\n      mstore\n        /* \"#utility.yul\":3827:3831   */\n      0x24\n        /* \"#utility.yul\":3824:3825   */\n      0x00\n        /* \"#utility.yul\":3817:3832   */\n      revert\n\n    auxdata: 0xa26469706673582212202f6972063924a90b2fe216df232110bbd773a833aa371d7ab576f026113c3d8064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_827": {
									"entryPoint": null,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 179,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 243,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 174,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5250:7",
										"nodeType": "YulBlock",
										"src": "0:5250:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:7",
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:7",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:7",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:7",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nativeSrc": "66:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nativeSrc": "56:31:7",
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nativeSrc": "56:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:7",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:7",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nativeSrc": "96:15:7",
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nativeSrc": "96:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:7",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:7",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nativeSrc": "120:15:7",
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nativeSrc": "120:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nativeSrc": "201:325:7",
													"nodeType": "YulBlock",
													"src": "201:325:7",
													"statements": [
														{
															"nativeSrc": "211:22:7",
															"nodeType": "YulAssignment",
															"src": "211:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:7",
																		"nodeType": "YulLiteral",
																		"src": "225:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:7"
																},
																"nativeSrc": "221:12:7",
																"nodeType": "YulFunctionCall",
																"src": "221:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:7"
																}
															]
														},
														{
															"nativeSrc": "242:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:7"
																},
																"nativeSrc": "268:12:7",
																"nodeType": "YulFunctionCall",
																"src": "268:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:7",
																	"nodeType": "YulTypedName",
																	"src": "246:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:7",
																"nodeType": "YulBlock",
																"src": "319:31:7",
																"statements": [
																	{
																		"nativeSrc": "321:27:7",
																		"nodeType": "YulAssignment",
																		"src": "321:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:7",
																					"nodeType": "YulLiteral",
																					"src": "343:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:7"
																			},
																			"nativeSrc": "331:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:7"
																},
																"nativeSrc": "292:26:7",
																"nodeType": "YulFunctionCall",
																"src": "292:26:7"
															},
															"nativeSrc": "289:61:7",
															"nodeType": "YulIf",
															"src": "289:61:7"
														},
														{
															"body": {
																"nativeSrc": "409:111:7",
																"nodeType": "YulBlock",
																"src": "409:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:7",
																					"nodeType": "YulLiteral",
																					"src": "430:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:7",
																							"nodeType": "YulLiteral",
																							"src": "437:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:7",
																							"nodeType": "YulLiteral",
																							"src": "442:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:7"
																					},
																					"nativeSrc": "433:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:7"
																			},
																			"nativeSrc": "423:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:7"
																		},
																		"nativeSrc": "423:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:7",
																					"nodeType": "YulLiteral",
																					"src": "474:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:7",
																					"nodeType": "YulLiteral",
																					"src": "477:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:7"
																			},
																			"nativeSrc": "467:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:7"
																		},
																		"nativeSrc": "467:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:7",
																					"nodeType": "YulLiteral",
																					"src": "502:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:7",
																					"nodeType": "YulLiteral",
																					"src": "505:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:7"
																			},
																			"nativeSrc": "495:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:7"
																		},
																		"nativeSrc": "495:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:7",
																				"nodeType": "YulLiteral",
																				"src": "396:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:7"
																		},
																		"nativeSrc": "385:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:7"
																},
																"nativeSrc": "362:38:7",
																"nodeType": "YulFunctionCall",
																"src": "362:38:7"
															},
															"nativeSrc": "359:161:7",
															"nodeType": "YulIf",
															"src": "359:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:7",
														"nodeType": "YulTypedName",
														"src": "181:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:7",
														"nodeType": "YulTypedName",
														"src": "190:6:7",
														"type": ""
													}
												],
												"src": "146:380:7"
											},
											{
												"body": {
													"nativeSrc": "587:65:7",
													"nodeType": "YulBlock",
													"src": "587:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:7",
																		"nodeType": "YulLiteral",
																		"src": "604:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																},
																"nativeSrc": "597:14:7",
																"nodeType": "YulFunctionCall",
																"src": "597:14:7"
															},
															"nativeSrc": "597:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:7"
														},
														{
															"nativeSrc": "620:26:7",
															"nodeType": "YulAssignment",
															"src": "620:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:7",
																		"nodeType": "YulLiteral",
																		"src": "638:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:7",
																		"nodeType": "YulLiteral",
																		"src": "641:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:7"
																},
																"nativeSrc": "628:18:7",
																"nodeType": "YulFunctionCall",
																"src": "628:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:7",
														"nodeType": "YulTypedName",
														"src": "570:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:7",
														"nodeType": "YulTypedName",
														"src": "578:4:7",
														"type": ""
													}
												],
												"src": "531:121:7"
											},
											{
												"body": {
													"nativeSrc": "738:437:7",
													"nodeType": "YulBlock",
													"src": "738:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:7",
																"nodeType": "YulBlock",
																"src": "771:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:7",
																					"nodeType": "YulLiteral",
																					"src": "792:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:7"
																			},
																			"nativeSrc": "785:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:7"
																		},
																		"nativeSrc": "785:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:7"
																	},
																	{
																		"nativeSrc": "814:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:7",
																					"nodeType": "YulLiteral",
																					"src": "836:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:7",
																					"nodeType": "YulLiteral",
																					"src": "839:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:7"
																			},
																			"nativeSrc": "826:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:7",
																				"nodeType": "YulTypedName",
																				"src": "818:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:7",
																							"nodeType": "YulLiteral",
																							"src": "890:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:7",
																									"nodeType": "YulLiteral",
																									"src": "909:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:7"
																							},
																							"nativeSrc": "893:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:7"
																					},
																					"nativeSrc": "886:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:7"
																			},
																			"nativeSrc": "876:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:7",
																				"nodeType": "YulTypedName",
																				"src": "861:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:7",
																			"nodeType": "YulBlock",
																			"src": "951:23:7",
																			"statements": [
																				{
																					"nativeSrc": "953:19:7",
																					"nodeType": "YulAssignment",
																					"src": "953:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:7",
																					"nodeType": "YulLiteral",
																					"src": "945:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:7"
																			},
																			"nativeSrc": "930:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:7"
																		},
																		"nativeSrc": "927:47:7",
																		"nodeType": "YulIf",
																		"src": "927:47:7"
																	},
																	{
																		"nativeSrc": "987:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:7"
																							},
																							"nativeSrc": "1014:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:7"
																					},
																					"nativeSrc": "1007:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:7"
																			},
																			"nativeSrc": "997:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:7",
																				"nodeType": "YulTypedName",
																				"src": "991:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:7",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:7",
																			"nodeType": "YulBlock",
																			"src": "1139:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:7"
																						},
																						"nativeSrc": "1141:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:7"
																					},
																					"nativeSrc": "1141:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:7"
																			},
																			"nativeSrc": "1086:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:7"
																		},
																		"nativeSrc": "1078:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:7",
																			"nodeType": "YulBlock",
																			"src": "1100:26:7",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:7",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:7"
																						},
																						"nativeSrc": "1111:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:7",
																			"nodeType": "YulBlock",
																			"src": "1082:3:7",
																			"statements": []
																		},
																		"src": "1078:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "759:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:7"
																},
																"nativeSrc": "751:11:7",
																"nodeType": "YulFunctionCall",
																"src": "751:11:7"
															},
															"nativeSrc": "748:421:7",
															"nodeType": "YulIf",
															"src": "748:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:7",
														"nodeType": "YulTypedName",
														"src": "710:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:7",
														"nodeType": "YulTypedName",
														"src": "717:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:7",
														"nodeType": "YulTypedName",
														"src": "722:10:7",
														"type": ""
													}
												],
												"src": "657:518:7"
											},
											{
												"body": {
													"nativeSrc": "1265:81:7",
													"nodeType": "YulBlock",
													"src": "1265:81:7",
													"statements": [
														{
															"nativeSrc": "1275:65:7",
															"nodeType": "YulAssignment",
															"src": "1275:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:7"
																								},
																								"nativeSrc": "1304:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:7"
																								},
																								"nativeSrc": "1317:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:7"
																						},
																						"nativeSrc": "1300:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:7"
																				},
																				"nativeSrc": "1296:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:7"
																		},
																		"nativeSrc": "1286:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:7"
																		},
																		"nativeSrc": "1328:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:7"
																},
																"nativeSrc": "1283:57:7",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:7",
														"nodeType": "YulTypedName",
														"src": "1242:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:7",
														"nodeType": "YulTypedName",
														"src": "1248:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:7",
														"nodeType": "YulTypedName",
														"src": "1256:4:7",
														"type": ""
													}
												],
												"src": "1180:166:7"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:7",
													"nodeType": "YulBlock",
													"src": "1447:1249:7",
													"statements": [
														{
															"nativeSrc": "1457:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:7"
																},
																"nativeSrc": "1471:10:7",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:7",
																"nodeType": "YulBlock",
																"src": "1524:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:7"
																			},
																			"nativeSrc": "1526:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:7"
																		},
																		"nativeSrc": "1526:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:7"
																				},
																				"nativeSrc": "1508:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:7"
																		},
																		"nativeSrc": "1504:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:7"
																},
																"nativeSrc": "1493:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:7"
															},
															"nativeSrc": "1490:56:7",
															"nodeType": "YulIf",
															"src": "1490:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:7"
																				},
																				"nativeSrc": "1631:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:7"
																		},
																		"nativeSrc": "1605:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:7"
																},
																"nativeSrc": "1555:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:7"
															},
															"nativeSrc": "1555:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:7"
														},
														{
															"nativeSrc": "1661:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:7",
																"nodeType": "YulLiteral",
																"src": "1678:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:7",
																"nodeType": "YulLiteral",
																"src": "1707:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:7",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:7",
															"nodeType": "YulAssignment",
															"src": "1720:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:7",
																"nodeType": "YulLiteral",
																"src": "1733:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:7",
																		"nodeType": "YulBlock",
																		"src": "1783:656:7",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:7"
																							},
																							"nativeSrc": "1824:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:7"
																					},
																					"nativeSrc": "1812:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:7",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:7"
																					},
																					"nativeSrc": "1859:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:7",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:7",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:7",
																					"nodeType": "YulBlock",
																					"src": "1994:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:7"
																												},
																												"nativeSrc": "2033:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:7"
																										},
																										"nativeSrc": "2027:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:7"
																								},
																								"nativeSrc": "2012:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:7"
																							},
																							"nativeSrc": "2012:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:7"
																						},
																						{
																							"nativeSrc": "2071:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:7"
																								},
																								"nativeSrc": "2081:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:7",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:7"
																								},
																								"nativeSrc": "2125:27:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:7"
																					},
																					"nativeSrc": "1938:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:7"
																				},
																				"nativeSrc": "1930:236:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:7",
																					"nodeType": "YulBlock",
																					"src": "1953:28:7",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:7",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:7"
																								},
																								"nativeSrc": "1960:19:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:7",
																					"nodeType": "YulBlock",
																					"src": "1934:3:7",
																					"statements": []
																				},
																				"src": "1930:236:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:7",
																					"nodeType": "YulBlock",
																					"src": "2214:166:7",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:7"
																										},
																										"nativeSrc": "2255:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:7"
																								},
																								"nativeSrc": "2249:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:7",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:7"
																																		},
																																		"nativeSrc": "2334:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:7"
																																},
																																"nativeSrc": "2330:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:7"
																																},
																																"nativeSrc": "2356:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:7"
																														},
																														"nativeSrc": "2326:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:7"
																												},
																												"nativeSrc": "2322:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:7"
																										},
																										"nativeSrc": "2307:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:7"
																								},
																								"nativeSrc": "2292:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:7"
																							},
																							"nativeSrc": "2292:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:7"
																					},
																					"nativeSrc": "2182:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:7"
																				},
																				"nativeSrc": "2179:201:7",
																				"nodeType": "YulIf",
																				"src": "2179:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:7"
																									},
																									"nativeSrc": "2410:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:7"
																							},
																							"nativeSrc": "2406:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:7"
																					},
																					"nativeSrc": "2393:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:7"
																				},
																				"nativeSrc": "2393:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:7"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:7",
																	"nodeType": "YulCase",
																	"src": "1776:663:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:7",
																		"nodeType": "YulBlock",
																		"src": "2456:234:7",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:7",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:7",
																					"nodeType": "YulBlock",
																					"src": "2519:67:7",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:7",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:7"
																										},
																										"nativeSrc": "2552:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:7"
																								},
																								"nativeSrc": "2546:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:7"
																				},
																				"nativeSrc": "2497:89:7",
																				"nodeType": "YulIf",
																				"src": "2497:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:7"
																							},
																							"nativeSrc": "2612:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:7"
																					},
																					"nativeSrc": "2599:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:7"
																				},
																				"nativeSrc": "2599:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:7"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:7",
																	"nodeType": "YulCase",
																	"src": "2448:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:7"
																},
																"nativeSrc": "1753:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:7"
															},
															"nativeSrc": "1746:944:7",
															"nodeType": "YulSwitch",
															"src": "1746:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:7",
														"nodeType": "YulTypedName",
														"src": "1432:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:7",
														"nodeType": "YulTypedName",
														"src": "1438:3:7",
														"type": ""
													}
												],
												"src": "1351:1345:7"
											},
											{
												"body": {
													"nativeSrc": "2733:95:7",
													"nodeType": "YulBlock",
													"src": "2733:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2750:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2750:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2757:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2757:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2762:10:7",
																				"nodeType": "YulLiteral",
																				"src": "2762:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2753:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:7"
																		},
																		"nativeSrc": "2753:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2753:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2743:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:7"
																},
																"nativeSrc": "2743:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2743:31:7"
															},
															"nativeSrc": "2743:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2743:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2790:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2793:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2793:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2783:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:7"
																},
																"nativeSrc": "2783:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2783:15:7"
															},
															"nativeSrc": "2783:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2783:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2814:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2814:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2817:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2817:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2807:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:7"
																},
																"nativeSrc": "2807:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2807:15:7"
															},
															"nativeSrc": "2807:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2807:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2701:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2701:127:7"
											},
											{
												"body": {
													"nativeSrc": "2897:352:7",
													"nodeType": "YulBlock",
													"src": "2897:352:7",
													"statements": [
														{
															"nativeSrc": "2907:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2907:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2922:1:7",
																"nodeType": "YulLiteral",
																"src": "2922:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "2911:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2911:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2932:10:7",
															"nodeType": "YulAssignment",
															"src": "2932:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2941:1:7",
																"nodeType": "YulLiteral",
																"src": "2941:1:7",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2932:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2932:5:7"
																}
															]
														},
														{
															"nativeSrc": "2951:13:7",
															"nodeType": "YulAssignment",
															"src": "2951:13:7",
															"value": {
																"name": "_base",
																"nativeSrc": "2959:5:7",
																"nodeType": "YulIdentifier",
																"src": "2959:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2951:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2951:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3015:228:7",
																"nodeType": "YulBlock",
																"src": "3015:228:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3060:22:7",
																			"nodeType": "YulBlock",
																			"src": "3060:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3062:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "3062:16:7"
																						},
																						"nativeSrc": "3062:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3062:18:7"
																					},
																					"nativeSrc": "3062:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "3062:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3035:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "3035:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3049:1:7",
																									"nodeType": "YulLiteral",
																									"src": "3049:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3045:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3045:3:7"
																							},
																							"nativeSrc": "3045:6:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3045:6:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3053:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3053:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3041:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3041:3:7"
																					},
																					"nativeSrc": "3041:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3041:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3032:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3032:2:7"
																			},
																			"nativeSrc": "3032:27:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3032:27:7"
																		},
																		"nativeSrc": "3029:53:7",
																		"nodeType": "YulIf",
																		"src": "3029:53:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "3121:29:7",
																			"nodeType": "YulBlock",
																			"src": "3121:29:7",
																			"statements": [
																				{
																					"nativeSrc": "3123:25:7",
																					"nodeType": "YulAssignment",
																					"src": "3123:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3136:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "3136:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3143:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "3143:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3132:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3132:3:7"
																						},
																						"nativeSrc": "3132:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3132:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3123:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "3123:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3102:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "3102:8:7"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3112:7:7",
																					"nodeType": "YulIdentifier",
																					"src": "3112:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3098:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3098:3:7"
																			},
																			"nativeSrc": "3098:22:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3098:22:7"
																		},
																		"nativeSrc": "3095:55:7",
																		"nodeType": "YulIf",
																		"src": "3095:55:7"
																	},
																	{
																		"nativeSrc": "3163:23:7",
																		"nodeType": "YulAssignment",
																		"src": "3163:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3175:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "3175:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3181:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "3181:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3171:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3171:3:7"
																			},
																			"nativeSrc": "3171:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3171:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3163:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3163:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3199:34:7",
																		"nodeType": "YulAssignment",
																		"src": "3199:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3215:7:7",
																					"nodeType": "YulIdentifier",
																					"src": "3215:7:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3224:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "3224:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3211:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:7"
																			},
																			"nativeSrc": "3211:22:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3211:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3199:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3199:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2984:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2984:8:7"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "2994:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2994:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2981:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2981:2:7"
																},
																"nativeSrc": "2981:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2981:21:7"
															},
															"nativeSrc": "2973:270:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3003:3:7",
																"nodeType": "YulBlock",
																"src": "3003:3:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2977:3:7",
																"nodeType": "YulBlock",
																"src": "2977:3:7",
																"statements": []
															},
															"src": "2973:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2833:416:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "2861:5:7",
														"nodeType": "YulTypedName",
														"src": "2861:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2868:8:7",
														"nodeType": "YulTypedName",
														"src": "2868:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2881:5:7",
														"nodeType": "YulTypedName",
														"src": "2881:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2888:4:7",
														"nodeType": "YulTypedName",
														"src": "2888:4:7",
														"type": ""
													}
												],
												"src": "2833:416:7"
											},
											{
												"body": {
													"nativeSrc": "3313:747:7",
													"nodeType": "YulBlock",
													"src": "3313:747:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3351:52:7",
																"nodeType": "YulBlock",
																"src": "3351:52:7",
																"statements": [
																	{
																		"nativeSrc": "3365:10:7",
																		"nodeType": "YulAssignment",
																		"src": "3365:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3374:1:7",
																			"nodeType": "YulLiteral",
																			"src": "3374:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3365:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3365:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3388:5:7",
																		"nodeType": "YulLeave",
																		"src": "3388:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3333:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3333:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3326:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:7"
																},
																"nativeSrc": "3326:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3326:16:7"
															},
															"nativeSrc": "3323:80:7",
															"nodeType": "YulIf",
															"src": "3323:80:7"
														},
														{
															"body": {
																"nativeSrc": "3436:52:7",
																"nodeType": "YulBlock",
																"src": "3436:52:7",
																"statements": [
																	{
																		"nativeSrc": "3450:10:7",
																		"nodeType": "YulAssignment",
																		"src": "3450:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3459:1:7",
																			"nodeType": "YulLiteral",
																			"src": "3459:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3450:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3450:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3473:5:7",
																		"nodeType": "YulLeave",
																		"src": "3473:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3422:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3422:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3415:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:7"
																},
																"nativeSrc": "3415:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3415:12:7"
															},
															"nativeSrc": "3412:76:7",
															"nodeType": "YulIf",
															"src": "3412:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3524:52:7",
																		"nodeType": "YulBlock",
																		"src": "3524:52:7",
																		"statements": [
																			{
																				"nativeSrc": "3538:10:7",
																				"nodeType": "YulAssignment",
																				"src": "3538:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3547:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3547:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3538:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3538:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3561:5:7",
																				"nodeType": "YulLeave",
																				"src": "3561:5:7"
																			}
																		]
																	},
																	"nativeSrc": "3517:59:7",
																	"nodeType": "YulCase",
																	"src": "3517:59:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3522:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3592:123:7",
																		"nodeType": "YulBlock",
																		"src": "3592:123:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3627:22:7",
																					"nodeType": "YulBlock",
																					"src": "3627:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3629:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "3629:16:7"
																								},
																								"nativeSrc": "3629:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3629:18:7"
																							},
																							"nativeSrc": "3629:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3629:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3612:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3612:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3622:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3622:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3609:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "3609:2:7"
																					},
																					"nativeSrc": "3609:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3609:17:7"
																				},
																				"nativeSrc": "3606:43:7",
																				"nodeType": "YulIf",
																				"src": "3606:43:7"
																			},
																			{
																				"nativeSrc": "3662:25:7",
																				"nodeType": "YulAssignment",
																				"src": "3662:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3675:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3675:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3685:1:7",
																							"nodeType": "YulLiteral",
																							"src": "3685:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3671:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3671:3:7"
																					},
																					"nativeSrc": "3671:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3671:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3662:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3662:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3700:5:7",
																				"nodeType": "YulLeave",
																				"src": "3700:5:7"
																			}
																		]
																	},
																	"nativeSrc": "3585:130:7",
																	"nodeType": "YulCase",
																	"src": "3585:130:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3590:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3590:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3504:4:7",
																"nodeType": "YulIdentifier",
																"src": "3504:4:7"
															},
															"nativeSrc": "3497:218:7",
															"nodeType": "YulSwitch",
															"src": "3497:218:7"
														},
														{
															"body": {
																"nativeSrc": "3813:70:7",
																"nodeType": "YulBlock",
																"src": "3813:70:7",
																"statements": [
																	{
																		"nativeSrc": "3827:28:7",
																		"nodeType": "YulAssignment",
																		"src": "3827:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3840:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "3840:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3846:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "3846:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3836:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3836:3:7"
																			},
																			"nativeSrc": "3836:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3836:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3827:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3827:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3868:5:7",
																		"nodeType": "YulLeave",
																		"src": "3868:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3737:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3737:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3743:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3743:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3734:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3734:2:7"
																				},
																				"nativeSrc": "3734:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3734:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3751:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3751:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3761:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3761:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3748:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3748:2:7"
																				},
																				"nativeSrc": "3748:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3748:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3730:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3730:3:7"
																		},
																		"nativeSrc": "3730:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3730:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3774:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3774:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3780:3:7",
																						"nodeType": "YulLiteral",
																						"src": "3780:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3771:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3771:2:7"
																				},
																				"nativeSrc": "3771:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3771:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3789:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3789:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3799:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3799:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3786:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3786:2:7"
																				},
																				"nativeSrc": "3786:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3786:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3767:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:7"
																		},
																		"nativeSrc": "3767:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3727:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3727:2:7"
																},
																"nativeSrc": "3727:77:7",
																"nodeType": "YulFunctionCall",
																"src": "3727:77:7"
															},
															"nativeSrc": "3724:159:7",
															"nodeType": "YulIf",
															"src": "3724:159:7"
														},
														{
															"nativeSrc": "3892:57:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3892:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3934:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3934:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3940:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3940:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3915:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3915:18:7"
																},
																"nativeSrc": "3915:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3915:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3896:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3896:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "3905:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3905:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3994:22:7",
																"nodeType": "YulBlock",
																"src": "3994:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3996:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3996:16:7"
																			},
																			"nativeSrc": "3996:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3996:18:7"
																		},
																		"nativeSrc": "3996:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3996:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3964:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3964:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3981:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3981:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3977:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3977:3:7"
																				},
																				"nativeSrc": "3977:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3977:6:7"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "3985:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3985:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3973:3:7"
																		},
																		"nativeSrc": "3973:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3973:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3961:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3961:2:7"
																},
																"nativeSrc": "3961:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3961:32:7"
															},
															"nativeSrc": "3958:58:7",
															"nodeType": "YulIf",
															"src": "3958:58:7"
														},
														{
															"nativeSrc": "4025:29:7",
															"nodeType": "YulAssignment",
															"src": "4025:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4038:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4038:7:7"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4047:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4047:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4034:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4034:3:7"
																},
																"nativeSrc": "4034:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4034:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4025:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3254:806:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3284:4:7",
														"nodeType": "YulTypedName",
														"src": "3284:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3303:5:7",
														"nodeType": "YulTypedName",
														"src": "3303:5:7",
														"type": ""
													}
												],
												"src": "3254:806:7"
											},
											{
												"body": {
													"nativeSrc": "4133:72:7",
													"nodeType": "YulBlock",
													"src": "4133:72:7",
													"statements": [
														{
															"nativeSrc": "4143:56:7",
															"nodeType": "YulAssignment",
															"src": "4143:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4173:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4173:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4183:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "4183:8:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4193:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4193:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4179:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:7"
																		},
																		"nativeSrc": "4179:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4179:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4152:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "4152:20:7"
																},
																"nativeSrc": "4152:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4152:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4143:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4143:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4065:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4104:4:7",
														"nodeType": "YulTypedName",
														"src": "4104:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4110:8:7",
														"nodeType": "YulTypedName",
														"src": "4110:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4123:5:7",
														"nodeType": "YulTypedName",
														"src": "4123:5:7",
														"type": ""
													}
												],
												"src": "4065:140:7"
											},
											{
												"body": {
													"nativeSrc": "4262:116:7",
													"nodeType": "YulBlock",
													"src": "4262:116:7",
													"statements": [
														{
															"nativeSrc": "4272:20:7",
															"nodeType": "YulAssignment",
															"src": "4272:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4287:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4287:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4290:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4290:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4283:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:7"
																},
																"nativeSrc": "4283:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4283:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4272:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4272:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4350:22:7",
																"nodeType": "YulBlock",
																"src": "4350:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4352:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4352:16:7"
																			},
																			"nativeSrc": "4352:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4352:18:7"
																		},
																		"nativeSrc": "4352:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4352:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4321:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "4321:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4314:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4314:6:7"
																				},
																				"nativeSrc": "4314:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4314:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4328:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "4328:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4335:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "4335:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4344:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "4344:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4331:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4331:3:7"
																						},
																						"nativeSrc": "4331:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4331:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4325:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4325:2:7"
																				},
																				"nativeSrc": "4325:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4325:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4311:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4311:2:7"
																		},
																		"nativeSrc": "4311:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4304:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:7"
																},
																"nativeSrc": "4304:45:7",
																"nodeType": "YulFunctionCall",
																"src": "4304:45:7"
															},
															"nativeSrc": "4301:71:7",
															"nodeType": "YulIf",
															"src": "4301:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4210:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4241:1:7",
														"nodeType": "YulTypedName",
														"src": "4241:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4244:1:7",
														"nodeType": "YulTypedName",
														"src": "4244:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4250:7:7",
														"nodeType": "YulTypedName",
														"src": "4250:7:7",
														"type": ""
													}
												],
												"src": "4210:168:7"
											},
											{
												"body": {
													"nativeSrc": "4484:102:7",
													"nodeType": "YulBlock",
													"src": "4484:102:7",
													"statements": [
														{
															"nativeSrc": "4494:26:7",
															"nodeType": "YulAssignment",
															"src": "4494:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4506:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4506:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4517:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4502:3:7"
																},
																"nativeSrc": "4502:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4502:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4494:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4494:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4536:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4551:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4567:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4567:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4572:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4572:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4563:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4563:3:7"
																						},
																						"nativeSrc": "4563:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4563:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4576:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4576:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4559:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4559:3:7"
																				},
																				"nativeSrc": "4559:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4559:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4547:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:7"
																		},
																		"nativeSrc": "4547:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4547:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:7"
																},
																"nativeSrc": "4529:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4529:51:7"
															},
															"nativeSrc": "4529:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4529:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4383:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4453:9:7",
														"nodeType": "YulTypedName",
														"src": "4453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4464:6:7",
														"nodeType": "YulTypedName",
														"src": "4464:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4475:4:7",
														"nodeType": "YulTypedName",
														"src": "4475:4:7",
														"type": ""
													}
												],
												"src": "4383:203:7"
											},
											{
												"body": {
													"nativeSrc": "4639:77:7",
													"nodeType": "YulBlock",
													"src": "4639:77:7",
													"statements": [
														{
															"nativeSrc": "4649:16:7",
															"nodeType": "YulAssignment",
															"src": "4649:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4660:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4660:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4663:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4663:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4656:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4656:3:7"
																},
																"nativeSrc": "4656:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4656:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4649:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4649:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4688:22:7",
																"nodeType": "YulBlock",
																"src": "4688:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4690:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4690:16:7"
																			},
																			"nativeSrc": "4690:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4690:18:7"
																		},
																		"nativeSrc": "4690:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4690:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4680:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4680:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4683:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4683:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4677:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4677:2:7"
																},
																"nativeSrc": "4677:10:7",
																"nodeType": "YulFunctionCall",
																"src": "4677:10:7"
															},
															"nativeSrc": "4674:36:7",
															"nodeType": "YulIf",
															"src": "4674:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4591:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4622:1:7",
														"nodeType": "YulTypedName",
														"src": "4622:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4625:1:7",
														"nodeType": "YulTypedName",
														"src": "4625:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4631:3:7",
														"nodeType": "YulTypedName",
														"src": "4631:3:7",
														"type": ""
													}
												],
												"src": "4591:125:7"
											},
											{
												"body": {
													"nativeSrc": "4878:188:7",
													"nodeType": "YulBlock",
													"src": "4878:188:7",
													"statements": [
														{
															"nativeSrc": "4888:26:7",
															"nodeType": "YulAssignment",
															"src": "4888:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4900:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4900:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4911:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4911:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4896:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:7"
																},
																"nativeSrc": "4896:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4896:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4888:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4888:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4930:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4930:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4945:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4945:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4961:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4961:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4966:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4966:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4957:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4957:3:7"
																						},
																						"nativeSrc": "4957:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4957:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4970:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4970:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4953:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4953:3:7"
																				},
																				"nativeSrc": "4953:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4953:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4941:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4941:3:7"
																		},
																		"nativeSrc": "4941:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4941:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4923:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:7"
																},
																"nativeSrc": "4923:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4923:51:7"
															},
															"nativeSrc": "4923:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4923:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4994:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4994:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5005:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5005:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4990:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:7"
																		},
																		"nativeSrc": "4990:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4990:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5010:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5010:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4983:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4983:6:7"
																},
																"nativeSrc": "4983:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4983:34:7"
															},
															"nativeSrc": "4983:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4983:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5037:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5037:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5048:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5048:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5033:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5033:3:7"
																		},
																		"nativeSrc": "5033:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5053:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5053:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5026:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:7"
																},
																"nativeSrc": "5026:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5026:34:7"
															},
															"nativeSrc": "5026:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5026:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4721:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4831:9:7",
														"nodeType": "YulTypedName",
														"src": "4831:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4842:6:7",
														"nodeType": "YulTypedName",
														"src": "4842:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4850:6:7",
														"nodeType": "YulTypedName",
														"src": "4850:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4858:6:7",
														"nodeType": "YulTypedName",
														"src": "4858:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4869:4:7",
														"nodeType": "YulTypedName",
														"src": "4869:4:7",
														"type": ""
													}
												],
												"src": "4721:345:7"
											},
											{
												"body": {
													"nativeSrc": "5172:76:7",
													"nodeType": "YulBlock",
													"src": "5172:76:7",
													"statements": [
														{
															"nativeSrc": "5182:26:7",
															"nodeType": "YulAssignment",
															"src": "5182:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5194:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5205:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5190:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:7"
																},
																"nativeSrc": "5190:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5190:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5182:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5182:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5224:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5224:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5235:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5235:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5217:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:7"
																},
																"nativeSrc": "5217:25:7",
																"nodeType": "YulFunctionCall",
																"src": "5217:25:7"
															},
															"nativeSrc": "5217:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "5217:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5071:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5141:9:7",
														"nodeType": "YulTypedName",
														"src": "5141:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5152:6:7",
														"nodeType": "YulTypedName",
														"src": "5152:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5163:4:7",
														"nodeType": "YulTypedName",
														"src": "5163:4:7",
														"type": ""
													}
												],
												"src": "5071:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b81525081600390816200005e9190620002c0565b5060046200006d8282620002c0565b505050620000a83362000085620000ae60201b60201c565b6200009290600a6200049b565b620000a2906305f5e100620004b2565b620000b3565b620004e2565b601290565b6001600160a01b038216620000e25760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b620000ef5f8383620000f3565b5050565b6001600160a01b03831662000121578060025f828254620001159190620004cc565b90915550620001939050565b6001600160a01b0383165f9081526020819052604090205481811015620001755760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000d9565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620001b157600280548290039055620001cf565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021591815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200024b57607f821691505b6020821081036200026a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002bb57805f5260205f20601f840160051c81016020851015620002975750805b601f840160051c820191505b81811015620002b8575f8155600101620002a3565b50505b505050565b81516001600160401b03811115620002dc57620002dc62000222565b620002f481620002ed845462000236565b8462000270565b602080601f8311600181146200032a575f8415620003125750858301515b5f19600386901b1c1916600185901b17855562000384565b5f85815260208120601f198616915b828110156200035a5788860151825594840194600190910190840162000339565b50858210156200037857878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115620003e057815f1904821115620003c457620003c46200038c565b80851615620003d257918102915b93841c9390800290620003a5565b509250929050565b5f82620003f85750600162000495565b816200040657505f62000495565b81600181146200041f57600281146200042a576200044a565b600191505062000495565b60ff8411156200043e576200043e6200038c565b50506001821b62000495565b5060208310610133831016604e8410600b84101617156200046f575081810a62000495565b6200047b8383620003a0565b805f19048211156200049157620004916200038c565b0290505b92915050565b5f620004ab60ff841683620003e8565b9392505050565b80820281158282048414176200049557620004956200038c565b808201808211156200049557620004956200038c565b6107ba80620004f05f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063313ce56711610063578063313ce5671461011a57806370a082311461012957806395d89b4114610151578063a9059cbb14610159578063dd62ed3e1461016c575f80fd5b806306fdde031461009f578063095ea7b3146100bd5780630d0b17ea146100e057806318160ddd146100f557806323b872dd14610107575b5f80fd5b6100a76101a4565b6040516100b491906105e4565b60405180910390f35b6100d06100cb36600461064b565b610234565b60405190151581526020016100b4565b6100f36100ee366004610673565b61024d565b005b6002545b6040519081526020016100b4565b6100d06101153660046106a3565b6102be565b604051601281526020016100b4565b6100f96101373660046106dc565b6001600160a01b03165f9081526020819052604090205490565b6100a76102e1565b6100d061016736600461064b565b6102f0565b6100f961017a3660046106fc565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b39061072d565b80601f01602080910402602001604051908101604052809291908181526020018280546101df9061072d565b801561022a5780601f106102015761010080835404028352916020019161022a565b820191905f5260205f20905b81548152906001019060200180831161020d57829003601f168201915b5050505050905090565b5f336102418185856102fd565b60019150505b92915050565b61025833848461030f565b60405162b8f8bb60e51b815233600482015260248101839052604481018290526001600160a01b0384169063171f1760906064015f604051808303815f87803b1580156102a3575f80fd5b505af11580156102b5573d5f803e3d5ffd5b50505050505050565b5f336102cb858285610371565b6102d685858561030f565b506001949350505050565b6060600480546101b39061072d565b5f3361024181858561030f565b61030a83838360016103ec565b505050565b6001600160a01b03831661033d57604051634b637e8f60e11b81525f60048201526024015b60405180910390fd5b6001600160a01b0382166103665760405163ec442f0560e01b81525f6004820152602401610334565b61030a8383836104be565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103e657818110156103d857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610334565b6103e684848484035f6103ec565b50505050565b6001600160a01b0384166104155760405163e602df0560e01b81525f6004820152602401610334565b6001600160a01b03831661043e57604051634a1406b160e11b81525f6004820152602401610334565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103e657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104b091815260200190565b60405180910390a350505050565b6001600160a01b0383166104e8578060025f8282546104dd9190610765565b909155506105589050565b6001600160a01b0383165f908152602081905260409020548181101561053a5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610334565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661057457600280548290039055610592565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105d791815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b81811015610610578581018301518582016040015282016105f4565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610646575f80fd5b919050565b5f806040838503121561065c575f80fd5b61066583610630565b946020939093013593505050565b5f805f60608486031215610685575f80fd5b61068e84610630565b95602085013595506040909401359392505050565b5f805f606084860312156106b5575f80fd5b6106be84610630565b92506106cc60208501610630565b9150604084013590509250925092565b5f602082840312156106ec575f80fd5b6106f582610630565b9392505050565b5f806040838503121561070d575f80fd5b61071683610630565b915061072460208401610630565b90509250929050565b600181811c9082168061074157607f821691505b60208210810361075f57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561024757634e487b7160e01b5f52601160045260245ffdfea26469706673582212202f6972063924a90b2fe216df232110bbd773a833aa371d7ab576f026113c3d8064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5E SWAP2 SWAP1 PUSH3 0x2C0 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x6D DUP3 DUP3 PUSH3 0x2C0 JUMP JUMPDEST POP POP POP PUSH3 0xA8 CALLER PUSH3 0x85 PUSH3 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x92 SWAP1 PUSH1 0xA PUSH3 0x49B JUMP JUMPDEST PUSH3 0xA2 SWAP1 PUSH4 0x5F5E100 PUSH3 0x4B2 JUMP JUMPDEST PUSH3 0xB3 JUMP JUMPDEST PUSH3 0x4E2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xEF PUSH0 DUP4 DUP4 PUSH3 0xF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x121 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x115 SWAP2 SWAP1 PUSH3 0x4CC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x193 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x175 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1B1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x1CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x215 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x24B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x26A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2BB JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x297 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2B8 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2A3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2DC JUMPI PUSH3 0x2DC PUSH3 0x222 JUMP JUMPDEST PUSH3 0x2F4 DUP2 PUSH3 0x2ED DUP5 SLOAD PUSH3 0x236 JUMP JUMPDEST DUP5 PUSH3 0x270 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x32A JUMPI PUSH0 DUP5 ISZERO PUSH3 0x312 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x384 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x35A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x339 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x378 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3E0 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x3C4 JUMPI PUSH3 0x3C4 PUSH3 0x38C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3D2 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3A5 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x3F8 JUMPI POP PUSH1 0x1 PUSH3 0x495 JUMP JUMPDEST DUP2 PUSH3 0x406 JUMPI POP PUSH0 PUSH3 0x495 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x41F JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x42A JUMPI PUSH3 0x44A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x495 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x43E JUMPI PUSH3 0x43E PUSH3 0x38C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x495 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x46F JUMPI POP DUP2 DUP2 EXP PUSH3 0x495 JUMP JUMPDEST PUSH3 0x47B DUP4 DUP4 PUSH3 0x3A0 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x491 JUMPI PUSH3 0x491 PUSH3 0x38C JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4AB PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x495 JUMPI PUSH3 0x495 PUSH3 0x38C JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x495 JUMPI PUSH3 0x495 PUSH3 0x38C JUMP JUMPDEST PUSH2 0x7BA DUP1 PUSH3 0x4F0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xD0B17EA EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x107 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x64B JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x673 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x64B JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B3 SWAP1 PUSH2 0x72D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DF SWAP1 PUSH2 0x72D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x201 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x241 DUP2 DUP6 DUP6 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x258 CALLER DUP5 DUP5 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xB8F8BB PUSH1 0xE5 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x171F1760 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2CB DUP6 DUP3 DUP6 PUSH2 0x371 JUMP JUMPDEST PUSH2 0x2D6 DUP6 DUP6 DUP6 PUSH2 0x30F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B3 SWAP1 PUSH2 0x72D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x241 DUP2 DUP6 DUP6 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x30A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x334 JUMP JUMPDEST PUSH2 0x30A DUP4 DUP4 DUP4 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3E6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x334 JUMP JUMPDEST PUSH2 0x3E6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3EC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4E8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x558 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x574 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5D7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x610 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5F4 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x646 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x65C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x665 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x685 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68E DUP5 PUSH2 0x630 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6BE DUP5 PUSH2 0x630 JUMP JUMPDEST SWAP3 POP PUSH2 0x6CC PUSH1 0x20 DUP6 ADD PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F5 DUP3 PUSH2 0x630 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH2 0x724 PUSH1 0x20 DUP5 ADD PUSH2 0x630 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x741 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x247 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F PUSH10 0x72063924A90B2FE216DF 0x23 0x21 LT 0xBB 0xD7 PUSH20 0xA833AA371D7AB576F026113C3D8064736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "226:796:6:-:0;;;259:104;;;;;;;;;;1945:116:1;;;;;;;;;;;;;-1:-1:-1;;;1945:116:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1945:116:1;;;2020:5;2012;:13;;;;;;:::i;:::-;-1:-1:-1;2036:7:1;:17;2046:7;2036;:17;:::i;:::-;;1945:116;;307:48:6::1;313:10;344;:8;;;:10;;:::i;:::-;339:15;::::0;:2:::1;:15;:::i;:::-;325:29;::::0;:11:::1;:29;:::i;:::-;307:5;:48::i;:::-;226:796:::0;;3084:84:1;3158:2;;3084:84::o;7946:213::-;-1:-1:-1;;;;;8017:21:1;;8013:93;;8062:32;;-1:-1:-1;;;8062:32:1;;8091:1;8062:32;;;4529:51:7;4502:18;;8062:32:1;;;;;;;;8013:93;8116:35;8132:1;8136:7;8145:5;8116:7;:35::i;:::-;7946:213;;:::o;6458:1135::-;-1:-1:-1;;;;;6548:18:1;;6544:552;;6702:5;6686:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6544:552:1;;-1:-1:-1;6544:552:1;;-1:-1:-1;;;;;6762:15:1;;6740:19;6762:15;;;;;;;;;;;6796:19;;;6792:117;;;6843:50;;-1:-1:-1;;;6843:50:1;;-1:-1:-1;;;;;4941:32:7;;6843:50:1;;;4923:51:7;4990:18;;;4983:34;;;5033:18;;;5026:34;;;4896:18;;6843:50:1;4721:345:7;6792:117:1;-1:-1:-1;;;;;7032:15:1;;:9;:15;;;;;;;;;;7050:19;;;;7032:37;;6544:552;-1:-1:-1;;;;;7112:16:1;;7108:435;;7278:12;:21;;;;;;;7108:435;;;-1:-1:-1;;;;;7494:13:1;;:9;:13;;;;;;;;;;:22;;;;;;7108:435;7575:2;-1:-1:-1;;;;;7560:25:1;7569:4;-1:-1:-1;;;;;7560:25:1;;7579:5;7560:25;;;;5217::7;;5205:2;5190:18;;5071:177;7560:25:1;;;;;;;;6458:1135;;;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:7;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:7;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:7;;;2546:26;2497:89;-1:-1:-1;;1308:1:7;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:7;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:7;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;2701:127::-;2762:10;2757:3;2753:20;2750:1;2743:31;2793:4;2790:1;2783:15;2817:4;2814:1;2807:15;2833:416;2922:1;2959:5;2922:1;2973:270;2994:7;2984:8;2981:21;2973:270;;;3053:4;3049:1;3045:6;3041:17;3035:4;3032:27;3029:53;;;3062:18;;:::i;:::-;3112:7;3102:8;3098:22;3095:55;;;3132:16;;;;3095:55;3211:22;;;;3171:15;;;;2973:270;;;2977:3;2833:416;;;;;:::o;3254:806::-;3303:5;3333:8;3323:80;;-1:-1:-1;3374:1:7;3388:5;;3323:80;3422:4;3412:76;;-1:-1:-1;3459:1:7;3473:5;;3412:76;3504:4;3522:1;3517:59;;;;3590:1;3585:130;;;;3497:218;;3517:59;3547:1;3538:10;;3561:5;;;3585:130;3622:3;3612:8;3609:17;3606:43;;;3629:18;;:::i;:::-;-1:-1:-1;;3685:1:7;3671:16;;3700:5;;3497:218;;3799:2;3789:8;3786:16;3780:3;3774:4;3771:13;3767:36;3761:2;3751:8;3748:16;3743:2;3737:4;3734:12;3730:35;3727:77;3724:159;;;-1:-1:-1;3836:19:7;;;3868:5;;3724:159;3915:34;3940:8;3934:4;3915:34;:::i;:::-;3985:6;3981:1;3977:6;3973:19;3964:7;3961:32;3958:58;;;3996:18;;:::i;:::-;4034:20;;-1:-1:-1;3254:806:7;;;;;:::o;4065:140::-;4123:5;4152:47;4193:4;4183:8;4179:19;4173:4;4152:47;:::i;:::-;4143:56;4065:140;-1:-1:-1;;;4065:140:7:o;4210:168::-;4283:9;;;4314;;4331:15;;;4325:22;;4311:37;4301:71;;4352:18;;:::i;4591:125::-;4656:9;;;4677:10;;;4674:36;;;4690:18;;:::i;5071:177::-;226:796:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 765,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1004,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 881,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 783,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 1214,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 564,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 420,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 737,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_876": {
									"entryPoint": 702,
									"id": 876,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferWithCallback_903": {
									"entryPoint": 589,
									"id": 903,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_261": {
									"entryPoint": 752,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3850:7",
										"nodeType": "YulBlock",
										"src": "0:3850:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:7",
													"nodeType": "YulBlock",
													"src": "135:427:7",
													"statements": [
														{
															"nativeSrc": "145:12:7",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:7",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:7",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:7",
																		"nodeType": "YulLiteral",
																		"src": "184:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nativeSrc": "166:21:7",
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nativeSrc": "166:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nativeSrc": "196:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nativeSrc": "210:13:7",
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:7",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:7",
																				"nodeType": "YulLiteral",
																				"src": "254:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nativeSrc": "239:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nativeSrc": "232:34:7",
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nativeSrc": "232:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nativeSrc": "275:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:7",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:7",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:7",
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nativeSrc": "369:17:7",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:7",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nativeSrc": "365:26:7",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:7",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nativeSrc": "403:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:7",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nativeSrc": "399:23:7",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nativeSrc": "393:30:7",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nativeSrc": "358:66:7",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nativeSrc": "358:66:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nativeSrc": "302:13:7",
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nativeSrc": "294:140:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:7",
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nativeSrc": "318:15:7",
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nativeSrc": "323:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:7",
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:7"
																				},
																				"nativeSrc": "454:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:7",
																				"nodeType": "YulLiteral",
																				"src": "478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:7"
																		},
																		"nativeSrc": "450:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:7",
																		"nodeType": "YulLiteral",
																		"src": "483:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																},
																"nativeSrc": "443:42:7",
																"nodeType": "YulFunctionCall",
																"src": "443:42:7"
															},
															"nativeSrc": "443:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:7"
														},
														{
															"nativeSrc": "494:62:7",
															"nodeType": "YulAssignment",
															"src": "494:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:7",
																								"nodeType": "YulLiteral",
																								"src": "537:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:7"
																						},
																						"nativeSrc": "525:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:7",
																								"nodeType": "YulLiteral",
																								"src": "546:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						"nativeSrc": "542:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nativeSrc": "521:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nativeSrc": "506:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:7",
																		"nodeType": "YulLiteral",
																		"src": "553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nativeSrc": "502:54:7",
																"nodeType": "YulFunctionCall",
																"src": "502:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:7",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:7",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:7",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:548:7"
											},
											{
												"body": {
													"nativeSrc": "616:124:7",
													"nodeType": "YulBlock",
													"src": "616:124:7",
													"statements": [
														{
															"nativeSrc": "626:29:7",
															"nodeType": "YulAssignment",
															"src": "626:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:7"
																},
																"nativeSrc": "635:20:7",
																"nodeType": "YulFunctionCall",
																"src": "635:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:7",
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:7",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:7",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nativeSrc": "720:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nativeSrc": "720:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:7",
																										"nodeType": "YulLiteral",
																										"src": "703:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:7",
																										"nodeType": "YulLiteral",
																										"src": "708:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:7"
																								},
																								"nativeSrc": "699:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:7",
																								"nodeType": "YulLiteral",
																								"src": "712:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:7"
																						},
																						"nativeSrc": "695:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:7"
																				},
																				"nativeSrc": "684:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:7"
																		},
																		"nativeSrc": "674:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:7"
																},
																"nativeSrc": "667:50:7",
																"nodeType": "YulFunctionCall",
																"src": "667:50:7"
															},
															"nativeSrc": "664:70:7",
															"nodeType": "YulIf",
															"src": "664:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:7",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:7",
														"nodeType": "YulTypedName",
														"src": "606:5:7",
														"type": ""
													}
												],
												"src": "567:173:7"
											},
											{
												"body": {
													"nativeSrc": "832:167:7",
													"nodeType": "YulBlock",
													"src": "832:167:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:7",
																"nodeType": "YulBlock",
																"src": "878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:7",
																					"nodeType": "YulLiteral",
																					"src": "887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:7",
																					"nodeType": "YulLiteral",
																					"src": "890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:7"
																			},
																			"nativeSrc": "880:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:7"
																		},
																		"nativeSrc": "880:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:7"
																		},
																		"nativeSrc": "849:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:7",
																		"nodeType": "YulLiteral",
																		"src": "874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:7"
																},
																"nativeSrc": "845:32:7",
																"nodeType": "YulFunctionCall",
																"src": "845:32:7"
															},
															"nativeSrc": "842:52:7",
															"nodeType": "YulIf",
															"src": "842:52:7"
														},
														{
															"nativeSrc": "903:39:7",
															"nodeType": "YulAssignment",
															"src": "903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:7"
																},
																"nativeSrc": "913:29:7",
																"nodeType": "YulFunctionCall",
																"src": "913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																}
															]
														},
														{
															"nativeSrc": "951:42:7",
															"nodeType": "YulAssignment",
															"src": "951:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:7",
																				"nodeType": "YulLiteral",
																				"src": "989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nativeSrc": "974:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:7"
																},
																"nativeSrc": "961:32:7",
																"nodeType": "YulFunctionCall",
																"src": "961:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:7",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:7",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:7",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:7",
														"nodeType": "YulTypedName",
														"src": "821:6:7",
														"type": ""
													}
												],
												"src": "745:254:7"
											},
											{
												"body": {
													"nativeSrc": "1099:92:7",
													"nodeType": "YulBlock",
													"src": "1099:92:7",
													"statements": [
														{
															"nativeSrc": "1109:26:7",
															"nodeType": "YulAssignment",
															"src": "1109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nativeSrc": "1117:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:7"
																				},
																				"nativeSrc": "1169:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:7"
																		},
																		"nativeSrc": "1162:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nativeSrc": "1144:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:7"
															},
															"nativeSrc": "1144:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:7",
														"nodeType": "YulTypedName",
														"src": "1068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:7",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:7",
														"nodeType": "YulTypedName",
														"src": "1090:4:7",
														"type": ""
													}
												],
												"src": "1004:187:7"
											},
											{
												"body": {
													"nativeSrc": "1300:218:7",
													"nodeType": "YulBlock",
													"src": "1300:218:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1346:16:7",
																"nodeType": "YulBlock",
																"src": "1346:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1355:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1355:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1358:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1358:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1348:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:7"
																			},
																			"nativeSrc": "1348:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1348:12:7"
																		},
																		"nativeSrc": "1348:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1348:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1321:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1321:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1330:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1330:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1317:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1317:3:7"
																		},
																		"nativeSrc": "1317:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1317:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1342:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1313:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:7"
																},
																"nativeSrc": "1313:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1313:32:7"
															},
															"nativeSrc": "1310:52:7",
															"nodeType": "YulIf",
															"src": "1310:52:7"
														},
														{
															"nativeSrc": "1371:39:7",
															"nodeType": "YulAssignment",
															"src": "1371:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1400:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1400:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1381:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1381:18:7"
																},
																"nativeSrc": "1381:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1381:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1371:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1371:6:7"
																}
															]
														},
														{
															"nativeSrc": "1419:42:7",
															"nodeType": "YulAssignment",
															"src": "1419:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1446:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1446:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1457:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1457:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1442:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1442:3:7"
																		},
																		"nativeSrc": "1442:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1442:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1429:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:12:7"
																},
																"nativeSrc": "1429:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:7"
																}
															]
														},
														{
															"nativeSrc": "1470:42:7",
															"nodeType": "YulAssignment",
															"src": "1470:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1497:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1497:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1508:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1508:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1493:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1493:3:7"
																		},
																		"nativeSrc": "1493:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1493:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1480:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1480:12:7"
																},
																"nativeSrc": "1480:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1480:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1470:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "1196:322:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1250:9:7",
														"nodeType": "YulTypedName",
														"src": "1250:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1261:7:7",
														"nodeType": "YulTypedName",
														"src": "1261:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1273:6:7",
														"nodeType": "YulTypedName",
														"src": "1273:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1281:6:7",
														"nodeType": "YulTypedName",
														"src": "1281:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1289:6:7",
														"nodeType": "YulTypedName",
														"src": "1289:6:7",
														"type": ""
													}
												],
												"src": "1196:322:7"
											},
											{
												"body": {
													"nativeSrc": "1624:76:7",
													"nodeType": "YulBlock",
													"src": "1624:76:7",
													"statements": [
														{
															"nativeSrc": "1634:26:7",
															"nodeType": "YulAssignment",
															"src": "1634:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1646:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1646:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1657:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1642:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:7"
																},
																"nativeSrc": "1642:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1642:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1634:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1634:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1676:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1676:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1687:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1687:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1669:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:7"
																},
																"nativeSrc": "1669:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1669:25:7"
															},
															"nativeSrc": "1669:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1669:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1523:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1593:9:7",
														"nodeType": "YulTypedName",
														"src": "1593:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1604:6:7",
														"nodeType": "YulTypedName",
														"src": "1604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1615:4:7",
														"nodeType": "YulTypedName",
														"src": "1615:4:7",
														"type": ""
													}
												],
												"src": "1523:177:7"
											},
											{
												"body": {
													"nativeSrc": "1809:224:7",
													"nodeType": "YulBlock",
													"src": "1809:224:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1855:16:7",
																"nodeType": "YulBlock",
																"src": "1855:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1867:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1867:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1857:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:7"
																			},
																			"nativeSrc": "1857:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1857:12:7"
																		},
																		"nativeSrc": "1857:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1857:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1830:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1830:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:7"
																		},
																		"nativeSrc": "1826:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1826:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1851:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1851:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1822:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1822:3:7"
																},
																"nativeSrc": "1822:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1822:32:7"
															},
															"nativeSrc": "1819:52:7",
															"nodeType": "YulIf",
															"src": "1819:52:7"
														},
														{
															"nativeSrc": "1880:39:7",
															"nodeType": "YulAssignment",
															"src": "1880:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1909:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1890:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1890:18:7"
																},
																"nativeSrc": "1890:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1890:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1880:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1880:6:7"
																}
															]
														},
														{
															"nativeSrc": "1928:48:7",
															"nodeType": "YulAssignment",
															"src": "1928:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1961:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1961:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1972:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1972:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1957:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:7"
																		},
																		"nativeSrc": "1957:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1938:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1938:18:7"
																},
																"nativeSrc": "1938:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1938:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1928:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1928:6:7"
																}
															]
														},
														{
															"nativeSrc": "1985:42:7",
															"nodeType": "YulAssignment",
															"src": "1985:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2012:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2012:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2023:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2023:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2008:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2008:3:7"
																		},
																		"nativeSrc": "2008:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2008:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1995:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1995:12:7"
																},
																"nativeSrc": "1995:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1995:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1985:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1985:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1705:328:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1759:9:7",
														"nodeType": "YulTypedName",
														"src": "1759:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1770:7:7",
														"nodeType": "YulTypedName",
														"src": "1770:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1782:6:7",
														"nodeType": "YulTypedName",
														"src": "1782:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1790:6:7",
														"nodeType": "YulTypedName",
														"src": "1790:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1798:6:7",
														"nodeType": "YulTypedName",
														"src": "1798:6:7",
														"type": ""
													}
												],
												"src": "1705:328:7"
											},
											{
												"body": {
													"nativeSrc": "2135:87:7",
													"nodeType": "YulBlock",
													"src": "2135:87:7",
													"statements": [
														{
															"nativeSrc": "2145:26:7",
															"nodeType": "YulAssignment",
															"src": "2145:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2157:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2157:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2168:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2153:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:7"
																},
																"nativeSrc": "2153:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2153:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2145:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2145:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2187:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2187:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2202:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2202:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2210:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2198:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2198:3:7"
																		},
																		"nativeSrc": "2198:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2198:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2180:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:7"
																},
																"nativeSrc": "2180:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2180:36:7"
															},
															"nativeSrc": "2180:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2180:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2038:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2104:9:7",
														"nodeType": "YulTypedName",
														"src": "2104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2115:6:7",
														"nodeType": "YulTypedName",
														"src": "2115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2126:4:7",
														"nodeType": "YulTypedName",
														"src": "2126:4:7",
														"type": ""
													}
												],
												"src": "2038:184:7"
											},
											{
												"body": {
													"nativeSrc": "2297:116:7",
													"nodeType": "YulBlock",
													"src": "2297:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2343:16:7",
																"nodeType": "YulBlock",
																"src": "2343:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2352:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2352:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2355:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2355:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2345:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2345:6:7"
																			},
																			"nativeSrc": "2345:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2345:12:7"
																		},
																		"nativeSrc": "2345:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2345:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2318:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2318:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2327:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2327:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2314:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2314:3:7"
																		},
																		"nativeSrc": "2314:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2314:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2339:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2339:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2310:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:7"
																},
																"nativeSrc": "2310:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2310:32:7"
															},
															"nativeSrc": "2307:52:7",
															"nodeType": "YulIf",
															"src": "2307:52:7"
														},
														{
															"nativeSrc": "2368:39:7",
															"nodeType": "YulAssignment",
															"src": "2368:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2397:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2397:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2378:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2378:18:7"
																},
																"nativeSrc": "2378:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2378:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2368:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2368:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2227:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2263:9:7",
														"nodeType": "YulTypedName",
														"src": "2263:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2274:7:7",
														"nodeType": "YulTypedName",
														"src": "2274:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2286:6:7",
														"nodeType": "YulTypedName",
														"src": "2286:6:7",
														"type": ""
													}
												],
												"src": "2227:186:7"
											},
											{
												"body": {
													"nativeSrc": "2505:173:7",
													"nodeType": "YulBlock",
													"src": "2505:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2551:16:7",
																"nodeType": "YulBlock",
																"src": "2551:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2560:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2560:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2563:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2563:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2553:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2553:6:7"
																			},
																			"nativeSrc": "2553:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2553:12:7"
																		},
																		"nativeSrc": "2553:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2553:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2526:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2526:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2535:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2535:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2522:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2522:3:7"
																		},
																		"nativeSrc": "2522:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2522:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2547:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2547:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2518:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2518:3:7"
																},
																"nativeSrc": "2518:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2518:32:7"
															},
															"nativeSrc": "2515:52:7",
															"nodeType": "YulIf",
															"src": "2515:52:7"
														},
														{
															"nativeSrc": "2576:39:7",
															"nodeType": "YulAssignment",
															"src": "2576:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2605:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2605:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2586:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2586:18:7"
																},
																"nativeSrc": "2586:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2586:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2576:6:7"
																}
															]
														},
														{
															"nativeSrc": "2624:48:7",
															"nodeType": "YulAssignment",
															"src": "2624:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2657:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2657:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2668:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2668:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2653:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2653:3:7"
																		},
																		"nativeSrc": "2653:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2653:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2634:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2634:18:7"
																},
																"nativeSrc": "2634:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2634:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2418:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2463:9:7",
														"nodeType": "YulTypedName",
														"src": "2463:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2474:7:7",
														"nodeType": "YulTypedName",
														"src": "2474:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2486:6:7",
														"nodeType": "YulTypedName",
														"src": "2486:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2494:6:7",
														"nodeType": "YulTypedName",
														"src": "2494:6:7",
														"type": ""
													}
												],
												"src": "2418:260:7"
											},
											{
												"body": {
													"nativeSrc": "2738:325:7",
													"nodeType": "YulBlock",
													"src": "2738:325:7",
													"statements": [
														{
															"nativeSrc": "2748:22:7",
															"nodeType": "YulAssignment",
															"src": "2748:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2762:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2762:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2765:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2765:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2758:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2758:3:7"
																},
																"nativeSrc": "2758:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2758:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2748:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2748:6:7"
																}
															]
														},
														{
															"nativeSrc": "2779:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2779:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2809:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2809:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2815:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2815:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2805:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2805:3:7"
																},
																"nativeSrc": "2805:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2805:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2783:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2783:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2856:31:7",
																"nodeType": "YulBlock",
																"src": "2856:31:7",
																"statements": [
																	{
																		"nativeSrc": "2858:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2858:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2872:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2872:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2880:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2880:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2868:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2868:3:7"
																			},
																			"nativeSrc": "2868:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2868:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2858:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2858:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2836:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2836:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2829:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:7"
																},
																"nativeSrc": "2829:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2829:26:7"
															},
															"nativeSrc": "2826:61:7",
															"nodeType": "YulIf",
															"src": "2826:61:7"
														},
														{
															"body": {
																"nativeSrc": "2946:111:7",
																"nodeType": "YulBlock",
																"src": "2946:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2967:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2967:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2974:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2974:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2979:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2979:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2970:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2970:3:7"
																					},
																					"nativeSrc": "2970:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2970:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2960:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2960:6:7"
																			},
																			"nativeSrc": "2960:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2960:31:7"
																		},
																		"nativeSrc": "2960:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2960:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3011:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3011:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3014:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3014:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3004:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3004:6:7"
																			},
																			"nativeSrc": "3004:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3004:15:7"
																		},
																		"nativeSrc": "3004:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3004:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3039:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3039:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3042:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3042:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3032:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3032:6:7"
																			},
																			"nativeSrc": "3032:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3032:15:7"
																		},
																		"nativeSrc": "3032:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3032:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2902:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2925:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2925:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2933:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2933:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2922:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2922:2:7"
																		},
																		"nativeSrc": "2922:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2899:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2899:2:7"
																},
																"nativeSrc": "2899:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2899:38:7"
															},
															"nativeSrc": "2896:161:7",
															"nodeType": "YulIf",
															"src": "2896:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2683:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2718:4:7",
														"nodeType": "YulTypedName",
														"src": "2718:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2727:6:7",
														"nodeType": "YulTypedName",
														"src": "2727:6:7",
														"type": ""
													}
												],
												"src": "2683:380:7"
											},
											{
												"body": {
													"nativeSrc": "3225:188:7",
													"nodeType": "YulBlock",
													"src": "3225:188:7",
													"statements": [
														{
															"nativeSrc": "3235:26:7",
															"nodeType": "YulAssignment",
															"src": "3235:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3247:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3247:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3258:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3258:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3243:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:7"
																},
																"nativeSrc": "3243:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3243:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3235:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3235:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3277:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3277:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3292:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3292:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3308:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3308:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3313:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3313:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3304:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3304:3:7"
																						},
																						"nativeSrc": "3304:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3304:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3317:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3317:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3300:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3300:3:7"
																				},
																				"nativeSrc": "3300:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3300:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:7"
																		},
																		"nativeSrc": "3288:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3288:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3270:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3270:6:7"
																},
																"nativeSrc": "3270:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3270:51:7"
															},
															"nativeSrc": "3270:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3270:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3341:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3341:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3352:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3352:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3337:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3337:3:7"
																		},
																		"nativeSrc": "3337:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3337:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3357:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3357:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3330:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:7"
																},
																"nativeSrc": "3330:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:34:7"
															},
															"nativeSrc": "3330:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3330:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3384:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3384:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3395:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3395:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3380:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3380:3:7"
																		},
																		"nativeSrc": "3380:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3400:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3400:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3373:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3373:6:7"
																},
																"nativeSrc": "3373:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3373:34:7"
															},
															"nativeSrc": "3373:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3373:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3068:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3178:9:7",
														"nodeType": "YulTypedName",
														"src": "3178:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3189:6:7",
														"nodeType": "YulTypedName",
														"src": "3189:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3197:6:7",
														"nodeType": "YulTypedName",
														"src": "3197:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3205:6:7",
														"nodeType": "YulTypedName",
														"src": "3205:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3216:4:7",
														"nodeType": "YulTypedName",
														"src": "3216:4:7",
														"type": ""
													}
												],
												"src": "3068:345:7"
											},
											{
												"body": {
													"nativeSrc": "3519:102:7",
													"nodeType": "YulBlock",
													"src": "3519:102:7",
													"statements": [
														{
															"nativeSrc": "3529:26:7",
															"nodeType": "YulAssignment",
															"src": "3529:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3541:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3541:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3552:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3552:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3537:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:7"
																},
																"nativeSrc": "3537:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3537:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3529:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3529:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3571:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3571:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3586:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3586:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3602:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3602:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3607:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3607:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3598:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3598:3:7"
																						},
																						"nativeSrc": "3598:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3598:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3611:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3611:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3594:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3594:3:7"
																				},
																				"nativeSrc": "3594:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3594:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3582:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:7"
																		},
																		"nativeSrc": "3582:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3582:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3564:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3564:6:7"
																},
																"nativeSrc": "3564:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3564:51:7"
															},
															"nativeSrc": "3564:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3564:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3418:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3488:9:7",
														"nodeType": "YulTypedName",
														"src": "3488:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3499:6:7",
														"nodeType": "YulTypedName",
														"src": "3499:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3510:4:7",
														"nodeType": "YulTypedName",
														"src": "3510:4:7",
														"type": ""
													}
												],
												"src": "3418:203:7"
											},
											{
												"body": {
													"nativeSrc": "3674:174:7",
													"nodeType": "YulBlock",
													"src": "3674:174:7",
													"statements": [
														{
															"nativeSrc": "3684:16:7",
															"nodeType": "YulAssignment",
															"src": "3684:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3695:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3695:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3698:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3698:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3691:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3691:3:7"
																},
																"nativeSrc": "3691:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3691:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3684:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3684:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3731:111:7",
																"nodeType": "YulBlock",
																"src": "3731:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3752:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3752:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3759:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3759:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3764:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3764:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3755:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3755:3:7"
																					},
																					"nativeSrc": "3755:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3755:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3745:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3745:6:7"
																			},
																			"nativeSrc": "3745:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3745:31:7"
																		},
																		"nativeSrc": "3745:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3745:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3796:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3796:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3799:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3799:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3789:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3789:6:7"
																			},
																			"nativeSrc": "3789:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3789:15:7"
																		},
																		"nativeSrc": "3789:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3789:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3824:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3824:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3827:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3827:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3817:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:6:7"
																			},
																			"nativeSrc": "3817:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3817:15:7"
																		},
																		"nativeSrc": "3817:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3817:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3715:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3715:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3718:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3718:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3712:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3712:2:7"
																},
																"nativeSrc": "3712:10:7",
																"nodeType": "YulFunctionCall",
																"src": "3712:10:7"
															},
															"nativeSrc": "3709:133:7",
															"nodeType": "YulIf",
															"src": "3709:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3626:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3657:1:7",
														"nodeType": "YulTypedName",
														"src": "3657:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3660:1:7",
														"nodeType": "YulTypedName",
														"src": "3660:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3666:3:7",
														"nodeType": "YulTypedName",
														"src": "3666:3:7",
														"type": ""
													}
												],
												"src": "3626:222:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063313ce56711610063578063313ce5671461011a57806370a082311461012957806395d89b4114610151578063a9059cbb14610159578063dd62ed3e1461016c575f80fd5b806306fdde031461009f578063095ea7b3146100bd5780630d0b17ea146100e057806318160ddd146100f557806323b872dd14610107575b5f80fd5b6100a76101a4565b6040516100b491906105e4565b60405180910390f35b6100d06100cb36600461064b565b610234565b60405190151581526020016100b4565b6100f36100ee366004610673565b61024d565b005b6002545b6040519081526020016100b4565b6100d06101153660046106a3565b6102be565b604051601281526020016100b4565b6100f96101373660046106dc565b6001600160a01b03165f9081526020819052604090205490565b6100a76102e1565b6100d061016736600461064b565b6102f0565b6100f961017a3660046106fc565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b39061072d565b80601f01602080910402602001604051908101604052809291908181526020018280546101df9061072d565b801561022a5780601f106102015761010080835404028352916020019161022a565b820191905f5260205f20905b81548152906001019060200180831161020d57829003601f168201915b5050505050905090565b5f336102418185856102fd565b60019150505b92915050565b61025833848461030f565b60405162b8f8bb60e51b815233600482015260248101839052604481018290526001600160a01b0384169063171f1760906064015f604051808303815f87803b1580156102a3575f80fd5b505af11580156102b5573d5f803e3d5ffd5b50505050505050565b5f336102cb858285610371565b6102d685858561030f565b506001949350505050565b6060600480546101b39061072d565b5f3361024181858561030f565b61030a83838360016103ec565b505050565b6001600160a01b03831661033d57604051634b637e8f60e11b81525f60048201526024015b60405180910390fd5b6001600160a01b0382166103665760405163ec442f0560e01b81525f6004820152602401610334565b61030a8383836104be565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103e657818110156103d857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610334565b6103e684848484035f6103ec565b50505050565b6001600160a01b0384166104155760405163e602df0560e01b81525f6004820152602401610334565b6001600160a01b03831661043e57604051634a1406b160e11b81525f6004820152602401610334565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103e657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104b091815260200190565b60405180910390a350505050565b6001600160a01b0383166104e8578060025f8282546104dd9190610765565b909155506105589050565b6001600160a01b0383165f908152602081905260409020548181101561053a5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610334565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661057457600280548290039055610592565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105d791815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b81811015610610578581018301518582016040015282016105f4565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610646575f80fd5b919050565b5f806040838503121561065c575f80fd5b61066583610630565b946020939093013593505050565b5f805f60608486031215610685575f80fd5b61068e84610630565b95602085013595506040909401359392505050565b5f805f606084860312156106b5575f80fd5b6106be84610630565b92506106cc60208501610630565b9150604084013590509250925092565b5f602082840312156106ec575f80fd5b6106f582610630565b9392505050565b5f806040838503121561070d575f80fd5b61071683610630565b915061072460208401610630565b90509250929050565b600181811c9082168061074157607f821691505b60208210810361075f57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561024757634e487b7160e01b5f52601160045260245ffdfea26469706673582212202f6972063924a90b2fe216df232110bbd773a833aa371d7ab576f026113c3d8064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xD0B17EA EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x107 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x64B JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x673 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x64B JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B3 SWAP1 PUSH2 0x72D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DF SWAP1 PUSH2 0x72D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x201 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x241 DUP2 DUP6 DUP6 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x258 CALLER DUP5 DUP5 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xB8F8BB PUSH1 0xE5 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x171F1760 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2CB DUP6 DUP3 DUP6 PUSH2 0x371 JUMP JUMPDEST PUSH2 0x2D6 DUP6 DUP6 DUP6 PUSH2 0x30F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B3 SWAP1 PUSH2 0x72D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x241 DUP2 DUP6 DUP6 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x30A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x334 JUMP JUMPDEST PUSH2 0x30A DUP4 DUP4 DUP4 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3E6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x334 JUMP JUMPDEST PUSH2 0x3E6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3EC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4E8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x558 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x574 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5D7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x610 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5F4 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x646 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x65C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x665 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x685 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68E DUP5 PUSH2 0x630 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6BE DUP5 PUSH2 0x630 JUMP JUMPDEST SWAP3 POP PUSH2 0x6CC PUSH1 0x20 DUP6 ADD PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F5 DUP3 PUSH2 0x630 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH2 0x724 PUSH1 0x20 DUP5 ADD PUSH2 0x630 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x741 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x247 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F PUSH10 0x72063924A90B2FE216DF 0x23 0x21 LT 0xBB 0xD7 PUSH20 0xA833AA371D7AB576F026113C3D8064736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "226:796:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4424:190;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;4424:190:1;1004:187:7;820:199:6;;;;;;:::i;:::-;;:::i;:::-;;3233:99:1;3312:12;;3233:99;;;1669:25:7;;;1657:2;1642:18;3233:99:1;1523:177:7;560:250:6;;;;;;:::i;:::-;;:::i;3084:84:1:-;;;3158:2;2180:36:7;;2168:2;2153:18;3084:84:1;2038:184:7;3395:118:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:18:1;3460:7;3487:18;;;;;;;;;;;;3395:118;2341:95;;;:::i;3718:182::-;;;;;;:::i;:::-;;:::i;3963:142::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4070:18:1;;;4043:7;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3963:142;2131:91;2176:13;2209:5;2202:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91;:::o;4424:190::-;4497:4;752:10:4;4553:31:1;752:10:4;4569:7:1;4578:5;4553:8;:31::i;:::-;4602:4;4595:11;;;4424:190;;;;;:::o;820:199:6:-;907:31;917:10;928:2;931:6;907:9;:31::i;:::-;949:53;;-1:-1:-1;;;949:53:6;;981:10;949:53;;;3270:51:7;3337:18;;;3330:34;;;3380:18;;;3373:34;;;-1:-1:-1;;;;;949:31:6;;;;;3243:18:7;;949:53:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:199;;;:::o;560:250::-;648:4;752:10:4;706:37:6;722:4;752:10:4;737:5:6;706:15;:37::i;:::-;754:26;764:4;770:2;774:5;754:9;:26::i;:::-;-1:-1:-1;798:4:6;;560:250;-1:-1:-1;;;;560:250:6:o;2341:95:1:-;2388:13;2421:7;2414:14;;;;;:::i;3718:182::-;3787:4;752:10:4;3843:27:1;752:10:4;3860:2:1;3864:5;3843:9;:27::i;9251:130::-;9336:37;9345:5;9352:7;9361:5;9368:4;9336:8;:37::i;:::-;9251:130;;;:::o;5826:308::-;-1:-1:-1;;;;;5910:18:1;;5906:88;;5952:30;;-1:-1:-1;;;5952:30:1;;5979:1;5952:30;;;3564:51:7;3537:18;;5952:30:1;;;;;;;;5906:88;-1:-1:-1;;;;;6008:16:1;;6004:88;;6048:32;;-1:-1:-1;;;6048:32:1;;6077:1;6048:32;;;3564:51:7;3537:18;;6048:32:1;3418:203:7;6004:88:1;6102:24;6110:4;6116:2;6120:5;6102:7;:24::i;10967:487::-;-1:-1:-1;;;;;4070:18:1;;;11067:24;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11134:37:1;;11130:317;;11211:5;11192:16;:24;11188:132;;;11244:60;;-1:-1:-1;;;11244:60:1;;-1:-1:-1;;;;;3288:32:7;;11244:60:1;;;3270:51:7;3337:18;;;3330:34;;;3380:18;;;3373:34;;;3243:18;;11244:60:1;3068:345:7;11188:132:1;11363:57;11372:5;11379:7;11407:5;11388:16;:24;11414:5;11363:8;:57::i;:::-;11056:398;10967:487;;;:::o;10232:443::-;-1:-1:-1;;;;;10345:19:1;;10341:91;;10388:32;;-1:-1:-1;;;10388:32:1;;10417:1;10388:32;;;3564:51:7;3537:18;;10388:32:1;3418:203:7;10341:91:1;-1:-1:-1;;;;;10446:21:1;;10442:92;;10491:31;;-1:-1:-1;;;10491:31:1;;10519:1;10491:31;;;3564:51:7;3537:18;;10491:31:1;3418:203:7;10442:92:1;-1:-1:-1;;;;;10544:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10590:78;;;;10641:7;-1:-1:-1;;;;;10625:31:1;10634:5;-1:-1:-1;;;;;10625:31:1;;10650:5;10625:31;;;;1669:25:7;;1657:2;1642:18;;1523:177;10625:31:1;;;;;;;;10232:443;;;;:::o;6458:1135::-;-1:-1:-1;;;;;6548:18:1;;6544:552;;6702:5;6686:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6544:552:1;;-1:-1:-1;6544:552:1;;-1:-1:-1;;;;;6762:15:1;;6740:19;6762:15;;;;;;;;;;;6796:19;;;6792:117;;;6843:50;;-1:-1:-1;;;6843:50:1;;-1:-1:-1;;;;;3288:32:7;;6843:50:1;;;3270:51:7;3337:18;;;3330:34;;;3380:18;;;3373:34;;;3243:18;;6843:50:1;3068:345:7;6792:117:1;-1:-1:-1;;;;;7032:15:1;;:9;:15;;;;;;;;;;7050:19;;;;7032:37;;6544:552;-1:-1:-1;;;;;7112:16:1;;7108:435;;7278:12;:21;;;;;;;7108:435;;;-1:-1:-1;;;;;7494:13:1;;:9;:13;;;;;;;;;;:22;;;;;;7108:435;7575:2;-1:-1:-1;;;;;7560:25:1;7569:4;-1:-1:-1;;;;;7560:25:1;;7579:5;7560:25;;;;1669::7;;1657:2;1642:18;;1523:177;7560:25:1;;;;;;;;6458:1135;;;:::o;14:548:7:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1196:322::-;1273:6;1281;1289;1342:2;1330:9;1321:7;1317:23;1313:32;1310:52;;;1358:1;1355;1348:12;1310:52;1381:29;1400:9;1381:29;:::i;:::-;1371:39;1457:2;1442:18;;1429:32;;-1:-1:-1;1508:2:7;1493:18;;;1480:32;;1196:322;-1:-1:-1;;;1196:322:7:o;1705:328::-;1782:6;1790;1798;1851:2;1839:9;1830:7;1826:23;1822:32;1819:52;;;1867:1;1864;1857:12;1819:52;1890:29;1909:9;1890:29;:::i;:::-;1880:39;;1938:38;1972:2;1961:9;1957:18;1938:38;:::i;:::-;1928:48;;2023:2;2012:9;2008:18;1995:32;1985:42;;1705:328;;;;;:::o;2227:186::-;2286:6;2339:2;2327:9;2318:7;2314:23;2310:32;2307:52;;;2355:1;2352;2345:12;2307:52;2378:29;2397:9;2378:29;:::i;:::-;2368:39;2227:186;-1:-1:-1;;;2227:186:7:o;2418:260::-;2486:6;2494;2547:2;2535:9;2526:7;2522:23;2518:32;2515:52;;;2563:1;2560;2553:12;2515:52;2586:29;2605:9;2586:29;:::i;:::-;2576:39;;2634:38;2668:2;2657:9;2653:18;2634:38;:::i;:::-;2624:48;;2418:260;;;;;:::o;2683:380::-;2762:1;2758:12;;;;2805;;;2826:61;;2880:4;2872:6;2868:17;2858:27;;2826:61;2933:2;2925:6;2922:14;2902:18;2899:38;2896:161;;2979:10;2974:3;2970:20;2967:1;2960:31;3014:4;3011:1;3004:15;3042:4;3039:1;3032:15;2896:161;;2683:380;;;:::o;3626:222::-;3691:9;;;3712:10;;;3709:133;;;3764:10;3759:3;3755:20;3752:1;3745:31;3799:4;3796:1;3789:15;3827:4;3824:1;3817:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "395600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2559",
								"decimals()": "176",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2347",
								"transfer(address,uint256)": "51282",
								"transferFrom(address,address,uint256)": "infinite",
								"transferWithCallback(address,uint256,uint256)": "infinite"
							},
							"internal": {
								"_isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 226,
									"end": 1022,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 259,
									"end": 363,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 259,
									"end": 363,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 259,
									"end": 363,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 259,
									"end": 363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 259,
									"end": 363,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 259,
									"end": 363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 363,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 259,
									"end": 363,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 259,
									"end": 363,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 259,
									"end": 363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 259,
									"end": 363,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2020,
									"end": 2025,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2012,
									"end": 2025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2025,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2012,
									"end": 2025,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2012,
									"end": 2025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2025,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2012,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2036,
									"end": 2043,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2036,
									"end": 2053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2061,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 307,
									"end": 355,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 313,
									"end": 323,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 344,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 344,
									"end": 352,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 344,
									"end": 352,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 344,
									"end": 352,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 344,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 344,
									"end": 354,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 344,
									"end": 354,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 344,
									"end": 354,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 344,
									"end": 354,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 339,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 339,
									"end": 354,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 339,
									"end": 341,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 339,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 339,
									"end": 354,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 339,
									"end": 354,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 339,
									"end": 354,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 325,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 325,
									"end": 354,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 325,
									"end": 336,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5F5E100"
								},
								{
									"begin": 325,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 325,
									"end": 354,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 325,
									"end": 354,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 325,
									"end": 354,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 307,
									"end": 312,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 307,
									"end": 355,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 307,
									"end": 355,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 307,
									"end": 355,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3084,
									"end": 3168,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3084,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3160,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3158,
									"end": 3160,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3084,
									"end": 3168,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7946,
									"end": 8159,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7946,
									"end": 8159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8017,
									"end": 8038,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8017,
									"end": 8038,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8013,
									"end": 8106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8013,
									"end": 8106,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8091,
									"end": 8092,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4580,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4502,
									"end": 4520,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4502,
									"end": 4520,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8094,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8013,
									"end": 8106,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8013,
									"end": 8106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8116,
									"end": 8151,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8132,
									"end": 8133,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8136,
									"end": 8143,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8145,
									"end": 8150,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8116,
									"end": 8123,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8116,
									"end": 8151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8116,
									"end": 8151,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8116,
									"end": 8151,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7946,
									"end": 8159,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7946,
									"end": 8159,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7946,
									"end": 8159,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6458,
									"end": 7593,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6458,
									"end": 7593,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6548,
									"end": 6566,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6566,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6544,
									"end": 7096,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6544,
									"end": 7096,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6702,
									"end": 6707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6698,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6686,
									"end": 6698,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6686,
									"end": 6707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6707,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6544,
									"end": 7096,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6544,
									"end": 7096,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6544,
									"end": 7096,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6544,
									"end": 7096,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6544,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6740,
									"end": 6759,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6777,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6796,
									"end": 6815,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6796,
									"end": 6815,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6796,
									"end": 6815,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6792,
									"end": 6909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6792,
									"end": 6909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6792,
									"end": 6909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6843,
									"end": 6893,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6843,
									"end": 6893,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6843,
									"end": 6893,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6843,
									"end": 6893,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4941,
									"end": 4973,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4941,
									"end": 4973,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6843,
									"end": 6893,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6843,
									"end": 6893,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6843,
									"end": 6893,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4923,
									"end": 4974,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4896,
									"end": 4914,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4896,
									"end": 4914,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6843,
									"end": 6893,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4721,
									"end": 5066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6792,
									"end": 6909,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6792,
									"end": 6909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7041,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7047,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7050,
									"end": 7069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7050,
									"end": 7069,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7050,
									"end": 7069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7050,
									"end": 7069,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7069,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6544,
									"end": 7096,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6544,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7112,
									"end": 7128,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7128,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7108,
									"end": 7543,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7108,
									"end": 7543,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7278,
									"end": 7290,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7278,
									"end": 7299,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7278,
									"end": 7299,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7278,
									"end": 7299,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7278,
									"end": 7299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7278,
									"end": 7299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7278,
									"end": 7299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7278,
									"end": 7299,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7108,
									"end": 7543,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7108,
									"end": 7543,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7108,
									"end": 7543,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7108,
									"end": 7543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7507,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7516,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7516,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7516,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7516,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7516,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7108,
									"end": 7543,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7108,
									"end": 7543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7575,
									"end": 7577,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7569,
									"end": 7573,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7579,
									"end": 7584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5217,
									"end": 5242,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5217,
									"end": 5242,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5205,
									"end": 5207,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7585,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6458,
									"end": 7593,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6458,
									"end": 7593,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6458,
									"end": 7593,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6458,
									"end": 7593,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2701,
									"end": 2828,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2701,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2762,
									"end": 2772,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 2757,
									"end": 2760,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2753,
									"end": 2773,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2750,
									"end": 2751,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2774,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2797,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 2790,
									"end": 2791,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2783,
									"end": 2798,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2817,
									"end": 2821,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2814,
									"end": 2815,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2822,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2959,
									"end": 2964,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3001,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2984,
									"end": 2992,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2981,
									"end": 3002,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3045,
									"end": 3051,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3039,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3032,
									"end": 3059,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3062,
									"end": 3080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3102,
									"end": 3110,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3098,
									"end": 3120,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2977,
									"end": 2980,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 3249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3303,
									"end": 3308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3333,
									"end": 3341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3374,
									"end": 3375,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3388,
									"end": 3393,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3388,
									"end": 3393,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3422,
									"end": 3426,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3459,
									"end": 3460,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3504,
									"end": 3508,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3590,
									"end": 3591,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3547,
									"end": 3548,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3538,
									"end": 3548,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3538,
									"end": 3548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3622,
									"end": 3625,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 3612,
									"end": 3620,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3626,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3629,
									"end": 3647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3685,
									"end": 3686,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3671,
									"end": 3687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3671,
									"end": 3687,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3700,
									"end": 3705,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3700,
									"end": 3705,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3799,
									"end": 3801,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3789,
									"end": 3797,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3802,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3771,
									"end": 3784,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3803,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3761,
									"end": 3763,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 3751,
									"end": 3759,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3748,
									"end": 3764,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 3737,
									"end": 3741,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3734,
									"end": 3746,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3730,
									"end": 3765,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3727,
									"end": 3804,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 3868,
									"end": 3873,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3868,
									"end": 3873,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3940,
									"end": 3948,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3934,
									"end": 3938,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3915,
									"end": 3949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3985,
									"end": 3991,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3981,
									"end": 3982,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3977,
									"end": 3983,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3973,
									"end": 3992,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3964,
									"end": 3971,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3961,
									"end": 3993,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3996,
									"end": 4014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4054,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4054,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 4060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4193,
									"end": 4197,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 4183,
									"end": 4191,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4179,
									"end": 4198,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4177,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4152,
									"end": 4199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4143,
									"end": 4199,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4065,
									"end": 4205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4311,
									"end": 4348,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4352,
									"end": 4370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4591,
									"end": 4716,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 4591,
									"end": 4716,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4690,
									"end": 4708,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4690,
									"end": 4708,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4690,
									"end": 4708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 1022,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f6972063924a90b2fe216df232110bbd773a833aa371d7ab576f026113c3d8064736f6c63430008160033",
									".code": [
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "D0B17EA"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 226,
											"end": 1022,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2131,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2131,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4424,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4424,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 820,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 820,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3332,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3233,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3332,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3233,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3233,
											"end": 3332,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1523,
											"end": 1700,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 560,
											"end": 810,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 560,
											"end": 810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 560,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 560,
											"end": 810,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 560,
											"end": 810,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 560,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 560,
											"end": 810,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 560,
											"end": 810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 560,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3168,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3084,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3168,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3160,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2038,
											"end": 2222,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3395,
											"end": 3513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3513,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2341,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2341,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2341,
											"end": 2436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3718,
											"end": 3900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3963,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 4105,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2202,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2202,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4497,
											"end": 4501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4583,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4553,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4584,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4553,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 4606,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4595,
											"end": 4606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 907,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 917,
											"end": 927,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 928,
											"end": 930,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 931,
											"end": 937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 907,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 907,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 907,
											"end": 938,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 907,
											"end": 938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8F8BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 981,
											"end": 991,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3364,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3407,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 949,
											"end": 980,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 949,
											"end": 980,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 949,
											"end": 980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 949,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "171F1760"
										},
										{
											"begin": 949,
											"end": 980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 560,
											"end": 810,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 560,
											"end": 810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 648,
											"end": 652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 706,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 722,
											"end": 726,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 752,
											"end": 762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 737,
											"end": 742,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 706,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 706,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 706,
											"end": 743,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 706,
											"end": 743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 754,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 764,
											"end": 768,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 770,
											"end": 772,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 774,
											"end": 779,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 754,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 754,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 754,
											"end": 780,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 754,
											"end": 780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 798,
											"end": 802,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 798,
											"end": 802,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 560,
											"end": 810,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 560,
											"end": 810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2341,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2414,
											"end": 2428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2428,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2414,
											"end": 2428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2414,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3718,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3862,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3864,
											"end": 3869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3843,
											"end": 3870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9381,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 9251,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9336,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9345,
											"end": 9350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9361,
											"end": 9366,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9372,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9336,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9336,
											"end": 9373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9336,
											"end": 9373,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9336,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5826,
											"end": 6134,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5826,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5910,
											"end": 5928,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5910,
											"end": 5928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5906,
											"end": 5994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5979,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5982,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5994,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5906,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6004,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6004,
											"end": 6092,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3418,
											"end": 3621,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6004,
											"end": 6092,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6004,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6110,
											"end": 6114,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6102,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 11454,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10967,
											"end": 11454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11067,
											"end": 11091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11134,
											"end": 11171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11134,
											"end": 11171,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11130,
											"end": 11447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11216,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11320,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11188,
											"end": 11320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11244,
											"end": 11304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3320,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11304,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11244,
											"end": 11304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3407,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3068,
											"end": 3413,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11188,
											"end": 11320,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11188,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11372,
											"end": 11377,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11379,
											"end": 11386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11388,
											"end": 11404,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11388,
											"end": 11412,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11363,
											"end": 11371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 11363,
											"end": 11420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11420,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11363,
											"end": 11420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11056,
											"end": 11454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 11454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 11454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 11454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 11454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10675,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10232,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10345,
											"end": 10364,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10341,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10341,
											"end": 10432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10388,
											"end": 10420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10388,
											"end": 10420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10417,
											"end": 10418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10420,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10388,
											"end": 10420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10388,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3418,
											"end": 3621,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10341,
											"end": 10432,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10341,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10446,
											"end": 10467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10446,
											"end": 10467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10442,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10442,
											"end": 10534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10491,
											"end": 10522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10491,
											"end": 10522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10491,
											"end": 10522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10491,
											"end": 10522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10491,
											"end": 10522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10491,
											"end": 10522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10491,
											"end": 10522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10491,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3418,
											"end": 3621,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10442,
											"end": 10534,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10442,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10555,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10579,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10590,
											"end": 10668,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10590,
											"end": 10668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10590,
											"end": 10668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10590,
											"end": 10668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10639,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10650,
											"end": 10655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1700,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 7593,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6458,
											"end": 7593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6544,
											"end": 7096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6698,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6686,
											"end": 6698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6686,
											"end": 6707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6707,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6544,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6544,
											"end": 7096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6544,
											"end": 7096,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6544,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6777,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6796,
											"end": 6815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6796,
											"end": 6815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6796,
											"end": 6815,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6792,
											"end": 6909,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6843,
											"end": 6893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6843,
											"end": 6893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6843,
											"end": 6893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6843,
											"end": 6893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3320,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3320,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6843,
											"end": 6893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6843,
											"end": 6893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3407,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3068,
											"end": 3413,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6792,
											"end": 6909,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6792,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7069,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7069,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6544,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7112,
											"end": 7128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7108,
											"end": 7543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7290,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7108,
											"end": 7543,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7543,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7108,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7507,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7543,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7108,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7579,
											"end": 7584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1700,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7585,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 7593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 7593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 7593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 7593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1518,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1196,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1289,
											"end": 1295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1321,
											"end": 1328,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1340,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1360,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1310,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1400,
											"end": 1409,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1381,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1410,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1459,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1461,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1461,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1512,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1512,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1518,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2033,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1705,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1839,
											"end": 1848,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1837,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1849,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1854,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1819,
											"end": 1871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1871,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1819,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1890,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1919,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1938,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1976,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1938,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1928,
											"end": 1976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1928,
											"end": 1976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2026,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2027,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2033,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2033,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2033,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2033,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2033,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2413,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2227,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2341,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2325,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2337,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2342,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2359,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2307,
											"end": 2359,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2357,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2359,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2307,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2378,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2407,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2378,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2407,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2413,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2678,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2418,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2533,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2545,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2561,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2586,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2634,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2672,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2634,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2672,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2678,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2678,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 3063,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2683,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2758,
											"end": 2770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2770,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2817,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2826,
											"end": 2887,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2885,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2887,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2826,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2937,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2896,
											"end": 3057,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2974,
											"end": 2977,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2970,
											"end": 2990,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2991,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3018,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3011,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3046,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3039,
											"end": 3040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3047,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 3057,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2896,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 3057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 3063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 3063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 3063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 3063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3848,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3626,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3842,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3709,
											"end": 3842,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3759,
											"end": 3762,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3755,
											"end": 3775,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3776,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3803,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3789,
											"end": 3804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3824,
											"end": 3825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3832,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"src/ItokenRecieved.sol",
								"src/MyERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferWithCallback(address,uint256,uint256)": "0d0b17ea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferWithCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MyERC20.sol\":\"MyERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af\",\"dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"src/ItokenRecieved.sol\":{\"keccak256\":\"0x289b53d1b3b391cb3714cc27fab5e24ea793b9f336ccc2e453905bd5c5cb0da0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04e47f0b56d1287bb0be917afb0f365058c6a433934be377a69cf98858d546dc\",\"dweb:/ipfs/QmQQJYtFsW4UbyrnKdnmfSnLnGVDFPFUYxEwivZnY49YPd\"]},\"src/MyERC20.sol\":{\"keccak256\":\"0x31895ae75c4edeed372ae43b239ffe8ca1feca8223afc9c72ef99157939168c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b239749beaf21330c41b2ddb4e071fdd22faf79e4a462db004ed3328949273d1\",\"dweb:/ipfs/QmWe5ZXjyc1d18ohG8rvKAEopBxF7LS8GUL9rejTfGu9vp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "src/MyERC20.sol:MyERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "142:142:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "296:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "316:314:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "642:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "708:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "700:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:49:0"
									},
									"src": "636:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "724:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "891:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "910:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:0"
									},
									"src": "885:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "934:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1108:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1137:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1129:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:18:0"
									},
									"src": "1102:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1155:350:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1517:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1544:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1569:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1561:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1588:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1580:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:52:0"
									},
									"src": "1511:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1604:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1793:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1822:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1814:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:18:0"
									},
									"src": "1787:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1840:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2050:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2070:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:17:0"
									},
									"src": "2044:43:0"
								}
							],
							"scope": 137,
							"src": "286:1804:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2094:144:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2250:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2271:223:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2506:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:0"
									},
									"src": "2500:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2548:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:0"
									},
									"src": "2689:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2743:294:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3049:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3078:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3070:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3094:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3086:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:48:0"
									},
									"src": "3043:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3126:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3293:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3313:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:16:0"
									},
									"src": "3287:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3337:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3511:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3541:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3533:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:18:0"
									},
									"src": "3505:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3559:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3822:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3849:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3875:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3867:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:35:0"
									},
									"src": "3816:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3892:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4081:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4111:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4103:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:0"
									},
									"src": "4075:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4129:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4341:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4371:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4363:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:18:0"
									},
									"src": "4335:46:0"
								}
							],
							"scope": 137,
							"src": "2240:2144:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4388:146:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4546:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4568:367:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4947:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4998:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5015:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "5007:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "5023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:66:0"
									},
									"src": "4941:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "5048:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5215:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:16:0"
									},
									"src": "5209:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5260:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5434:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5465:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5457:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:0"
									},
									"src": "5428:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5483:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5755:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5784:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5810:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5802:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:33:0"
									},
									"src": "5749:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5825:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6014:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6045:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "6037:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:0"
									},
									"src": "6008:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "6063:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6275:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:18:0"
									},
									"src": "6269:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6324:285:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6621:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6655:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6674:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6666:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:41:0"
									},
									"src": "6615:73:0"
								}
							],
							"scope": 137,
							"src": "4536:2155:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "114:6579:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "136:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "144:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "174:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "182:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "239:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "247:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "289:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "297:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1461:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1461:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1470:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1470:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1470:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1478:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1478:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1494:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1494:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1494:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "358:1074:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1452:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1558:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1514:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1530:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1522:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1514:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1541:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1648:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1576:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1592:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1584:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1576:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1619:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1611:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1603:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1630:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1684:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1668:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1668:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1720:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1705:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1705:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1747:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1732:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1732:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "2001:60:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "2012:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2020:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2012:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "2012:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "2036:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2046:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2036:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2036:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1763:176:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1971:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1957:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1957:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1992:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1978:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1978:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2001:0:1"
									},
									"scope": 651,
									"src": "1945:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2191:31:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2209:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2202:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2069:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2140:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2176:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2176:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:15:1"
									},
									"scope": 651,
									"src": "2131:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2403:33:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2421:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2414:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2230:105:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2350:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2388:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2388:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:15:1"
									},
									"scope": 651,
									"src": "2341:95:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3140:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3158:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3151:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2444:634:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3093:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3101:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3133:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3133:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:7:1"
									},
									"scope": 651,
									"src": "3084:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3294:38:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3312:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3305:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3176:51:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3242:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3253:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3285:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3284:9:1"
									},
									"scope": 651,
									"src": "3233:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3469:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3487:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3497:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3487:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3480:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3340:49:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3404:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3422:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3414:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3413:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3460:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3459:9:1"
									},
									"scope": 651,
									"src": "3395:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3793:107:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3812:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3804:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3804:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3820:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3820:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3804:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3853:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3860:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3864:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3843:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3843:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3843:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3881:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3521:191:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3727:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3744:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3736:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3756:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3748:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3735:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3787:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3787:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:6:1"
									},
									"scope": 651,
									"src": "3718:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4052:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4070:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4070:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4089:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4070:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "4063:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3908:49:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3972:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3990:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3982:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4005:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3997:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4043:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4043:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4042:9:1"
									},
									"scope": 651,
									"src": "3963:142:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4503:111:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4522:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4514:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4514:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4530:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4530:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4514:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4562:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4569:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4578:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4553:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4553:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4553:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4602:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4595:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "4113:305:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4433:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4449:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4441:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4441:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4466:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4458:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4440:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4497:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4497:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4496:6:1"
									},
									"scope": 651,
									"src": "4424:190:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5285:156:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5304:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5296:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5296:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5314:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5314:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5296:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5353:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5359:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5368:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5337:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5337:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5395:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5401:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5405:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5385:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5385:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5385:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5429:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5422:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4622:564:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5222:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5214:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5214:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5236:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5228:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5228:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5248:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5240:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5279:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5279:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5278:6:1"
									},
									"scope": 651,
									"src": "5192:249:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5895:239:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5910:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5926:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5918:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5918:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5918:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5910:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5906:88:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5930:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5979:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5971:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5971:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5971:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5952:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5952:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5945:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "6008:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6022:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6014:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6014:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6014:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6008:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "6004:88:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "6026:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6077:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6069:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6069:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6069:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "6048:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6048:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "6041:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "6110:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6116:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6120:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "6102:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6102:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "6102:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5449:371:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5835:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5853:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5845:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5845:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5867:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5859:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5879:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5871:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5844:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5895:0:1"
									},
									"scope": 651,
									"src": "5826:308:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6533:1060:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6548:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6564:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6556:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6556:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6556:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6548:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6725:371:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6748:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6740:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6740:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6762:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6772:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6762:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6740:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6796:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6810:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6796:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6792:117:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6817:92:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6868:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6874:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6887:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6843:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6843:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6836:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6923:162:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7032:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "7042:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7032:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "7050:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "7064:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7050:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7032:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "7032:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6544:552:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6568:151:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6686:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6702:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6686:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6686:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "7112:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7126:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7118:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7118:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7118:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7112:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7332:211:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7347:185:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7494:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7504:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7494:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7511:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7494:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7494:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "7108:435:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "7130:196:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "7145:170:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7278:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7294:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7278:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7278:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7569:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7575:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7579:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7560:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7560:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7555:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "6142:310:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6467:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6483:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6475:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6497:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6489:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6474:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6533:0:1"
									},
									"scope": 651,
									"src": "6458:1135:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "8002:157:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "8017:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8028:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8028:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8017:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "8013:93:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "8040:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8091:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8083:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8083:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8083:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "8062:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8062:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "8055:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8132:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8124:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8124:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8124:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8136:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "8145:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8116:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8116:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8116:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7601:339:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7955:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7969:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7961:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7961:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7986:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7978:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7978:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7960:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8002:0:1"
									},
									"scope": 651,
									"src": "7946:213:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8543:155:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8577:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8569:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8569:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8569:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8558:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8554:91:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8581:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8630:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8622:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8622:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8622:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8603:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8603:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8596:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8663:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8680:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8672:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8672:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8672:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8684:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8655:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8655:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8655:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "8167:314:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8496:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8510:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8502:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8502:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8527:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8519:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8501:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8543:0:1"
									},
									"scope": 651,
									"src": "8487:211:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9325:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9345:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9352:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9361:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9368:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9336:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9336:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9336:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8706:539:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9260:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9277:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9269:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9269:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9292:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9284:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9284:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9309:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9301:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9301:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9268:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9325:0:1"
									},
									"scope": 651,
									"src": "9251:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10330:345:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10345:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10362:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10354:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10354:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10354:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10345:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10341:91:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10366:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10417:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10409:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10409:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10409:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10388:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10388:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10381:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10446:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10465:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10457:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10457:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10457:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10446:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10442:92:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10469:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10519:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10511:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10511:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10511:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10491:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10491:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10484:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10544:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10556:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10544:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10563:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10544:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10574:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10544:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10544:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10594:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10590:78:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10605:63:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10634:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10641:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10650:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10625:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10625:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10620:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9389:837:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10241:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10258:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10250:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10250:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10273:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10265:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10290:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10282:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10282:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10302:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10297:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10297:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10249:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10330:0:1"
									},
									"scope": 651,
									"src": "10232:443:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "11056:398:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11075:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "11067:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11067:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "11104:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "11111:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "11094:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11094:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11067:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "11134:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11159:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11159:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11154:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11154:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11168:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11154:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11134:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "11130:317:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "11173:274:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "11192:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "11211:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11192:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "11188:132:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "11218:102:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "11271:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11280:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11298:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "11244:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11244:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "11237:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11334:102:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11372:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11379:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11388:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11407:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11388:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11414:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11363:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11363:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11363:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10683:278:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10976:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11000:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10992:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10992:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11015:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "11007:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11032:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "11024:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11024:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10991:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11056:0:1"
									},
									"scope": 651,
									"src": "10967:487:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1434:10023:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "108:11351:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "137:72:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "221:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "235:163:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "410:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "435:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "419:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "457:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "441:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "469:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "461:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:57:2"
									},
									"src": "404:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "484:151:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "647:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "672:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "656:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "695:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "679:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "712:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "704:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:63:2"
									},
									"src": "641:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "727:67:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "846:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:2"
									},
									"scope": 729,
									"src": "800:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "863:73:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "951:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "969:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "961:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1001:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:9:2"
									},
									"scope": 729,
									"src": "942:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "1018:219:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1252:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1269:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1261:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1281:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1273:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1306:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:6:2"
									},
									"scope": 729,
									"src": "1243:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1320:270:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1605:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1623:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1615:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1638:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1630:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1670:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:9:2"
									},
									"scope": 729,
									"src": "1596:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1687:681:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2383:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2399:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2391:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2416:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2408:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2441:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2441:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:6:2"
									},
									"scope": 729,
									"src": "2374:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2455:305:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2775:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2796:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2788:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2822:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2814:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2847:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2847:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:6:2"
									},
									"scope": 729,
									"src": "2766:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "211:2645:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "109:2749:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "156:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "164:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"315:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "315:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "315:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "197:88:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "297:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "329:56:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "400:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "430:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "430:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:15:3"
									},
									"scope": 755,
									"src": "391:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "453:58:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "526:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "558:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "558:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:15:3"
									},
									"scope": 755,
									"src": "517:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "581:67:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "663:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "671:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "697:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "697:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:7:3"
									},
									"scope": 755,
									"src": "654:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "287:420:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "128:581:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "657:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "734:36:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "745:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "725:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:4"
									},
									"scope": 785,
									"src": "672:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "845:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "856:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "829:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:4"
									},
									"scope": 785,
									"src": "778:101:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "959:27:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "977:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "970:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "896:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "950:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:4"
									},
									"scope": 785,
									"src": "887:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "639:350:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:887:4"
				},
				"id": 4
			},
			"src/ItokenRecieved.sol": {
				"ast": {
					"absolutePath": "src/ItokenRecieved.sol",
					"exportedSymbols": {
						"ItokenRecieved": [
							797
						]
					},
					"id": 798,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ItokenRecieved",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "ItokenRecieved",
							"nameLocation": "143:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "171f1760",
									"id": 796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenRecieve",
									"nameLocation": "175:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "196:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "188:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "209:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "201:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "223:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "215:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:40:5"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:0:5"
									},
									"scope": 797,
									"src": "166:72:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 798,
							"src": "133:109:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:136:5"
				},
				"id": 5
			},
			"src/MyERC20.sol": {
				"ast": {
					"absolutePath": "src/MyERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"ItokenRecieved": [
							797
						],
						"MyERC20": [
							904
						]
					},
					"id": 905,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 799,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"file": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"id": 800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 905,
							"sourceUnit": 652,
							"src": "59:68:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/ItokenRecieved.sol",
							"file": "./ItokenRecieved.sol",
							"id": 802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 905,
							"sourceUnit": 798,
							"src": "173:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 801,
										"name": "ItokenRecieved",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 797,
										"src": "181:14:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 803,
										"name": "ERC20",
										"nameLocations": [
											"246:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "246:5:6"
									},
									"id": 804,
									"nodeType": "InheritanceSpecifier",
									"src": "246:5:6"
								}
							],
							"canonicalName": "MyERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 904,
							"linearizedBaseContracts": [
								904,
								651,
								41,
								755,
								729,
								785
							],
							"name": "MyERC20",
							"nameLocation": "235:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "297:66:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 812,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "313:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "317:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "313:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "325:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "329:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "335:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "329:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	}
																},
																"src": "325:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "339:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 820,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "344:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "344:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "339:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "325:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 811,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "307:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "307:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "307:48:6"
											}
										]
									},
									"id": 827,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "279:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "290:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 809,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 806,
												"name": "ERC20",
												"nameLocations": [
													"273:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "273:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "273:23:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "270:2:6"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:0:6"
									},
									"scope": 904,
									"src": "259:104:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "439:112:6",
										"statements": [
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "453:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "446:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 834,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "446:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"nodeType": "VariableDeclarationStatement",
												"src": "446:11:6"
											},
											{
												"AST": {
													"nativeSrc": "473:47:6",
													"nodeType": "YulBlock",
													"src": "473:47:6",
													"statements": [
														{
															"nativeSrc": "484:29:6",
															"nodeType": "YulAssignment",
															"src": "484:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "_address",
																		"nativeSrc": "504:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "504:8:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "492:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "492:11:6"
																},
																"nativeSrc": "492:21:6",
																"nodeType": "YulFunctionCall",
																"src": "492:21:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "484:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "484:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 829,
														"isOffset": false,
														"isSlot": false,
														"src": "504:8:6",
														"valueSize": 1
													},
													{
														"declaration": 835,
														"isOffset": false,
														"isSlot": false,
														"src": "484:4:6",
														"valueSize": 1
													}
												],
												"id": 837,
												"nodeType": "InlineAssembly",
												"src": "464:56:6"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 838,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "534:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "541:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "534:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 841,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "533:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 833,
												"id": 842,
												"nodeType": "Return",
												"src": "526:17:6"
											}
										]
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isContract",
									"nameLocation": "380:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "400:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "392:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "392:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:18:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "433:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:6:6"
									},
									"scope": 904,
									"src": "371:180:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										334
									],
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "654:156:6",
										"statements": [
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "673:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "665:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 856,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "665:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 860,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 858,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "683:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "665:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 862,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "722:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "728:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "737:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "706:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "706:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "706:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 868,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "764:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "770:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "774:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "754:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "754:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "754:26:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "798:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 855,
												"id": 874,
												"nodeType": "Return",
												"src": "791:11:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "569:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 852,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "630:8:6"
									},
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "590:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "582:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "604:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "596:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "616:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "608:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:41:6"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "648:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 853,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "648:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:6:6"
									},
									"scope": 904,
									"src": "560:250:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "896:123:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 886,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "917:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "921:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "917:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "928:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "931:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 885,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "907:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "907:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "907:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 896,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "981:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "985:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "981:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "992:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 899,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "999:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 893,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "964:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 892,
																"name": "ItokenRecieved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "949:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ItokenRecieved_$797_$",
																	"typeString": "type(contract ItokenRecieved)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "949:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ItokenRecieved_$797",
																"typeString": "contract ItokenRecieved"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "968:12:6",
														"memberName": "tokenRecieve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "949:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256) external"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "949:53:6"
											}
										]
									},
									"functionSelector": "0d0b17ea",
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWithCallback",
									"nameLocation": "829:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "858:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "850:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "869:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "861:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "884:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "876:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:38:6"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:0:6"
									},
									"scope": 904,
									"src": "820:199:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 905,
							"src": "226:796:6",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:989:6"
				},
				"id": 6
			}
		}
	}
}